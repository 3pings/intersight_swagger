{
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Error": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "aaaAbstractAuditRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Event": {
              "description": "The operation that has been done by the user, such as Create, Modify plus affected Managed Object type \n",
              "type": "string"
            },
            "MoType": {
              "description": "The type of the modifed object \n",
              "type": "string"
            },
            "ObjectMoid": {
              "description": "The moid of the modified object \n",
              "type": "string"
            },
            "Request": {
              "description": "The configuration changes made by the user, it is a JSON format document with properties and desired value. \n",
              "type": "object"
            },
            "TraceId": {
              "description": "The trace id of the transaction.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "AbstractAuditRecord holds the common properties of all audit record types and gets extended by  concrete audit record types.\n",
      "title": "Aaa:Abstract Audit Record"
    },
    "i18nMessage": {
      "allOf": [
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Message": {
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when the user's locale setting is en-US. \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageId": {
              "description": "The message identitifer that is mapped to localized messages \n",
              "readOnly": true,
              "type": "string"
            },
            "MessageParams": {
              "description": "List of message parameters  \n",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents a message that can be localized to supported languages based on the user's locale >\n",
      "title": "I18n:Message"
    },
    "i18nMessageParam": {
      "allOf": [
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the parameter \n",
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "description": "Value of the parameter  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Defines a key/value pair representing a message parameter and its value. A message parameter is > referred in a message by its name and its value will replace the name in the localized message\n",
      "title": "I18n:Message Param"
    },
    "metaDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AncestorClasses": {
              "description": "An array of parent metaclasses in the class inheritance hierarchy. The first element in the array is the parent class. The next element is the grand-parent, etc. The last element in the array is the mo.BaseMo class.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "ExternalType": {
              "description": "Boolean flag to specify whether the meta class is defined in a separate micro-service. \n",
              "readOnly": true,
              "type": "boolean"
            },
            "IsConcrete": {
              "description": "Boolean flag to specify whether this class is a concrete class or not. \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "The fully-qualified name of the meta class. For example, \"compute:Blade\" where the Managed Object is \"Blade\" and the package is 'compute'. \n",
              "readOnly": true,
              "type": "string"
            },
            "Namespace": {
              "description": "Namespace of the meta class. \n",
              "readOnly": true,
              "type": "string"
            },
            "Observe": {
              "description": "Boolean flag to subscribe for mo change notifications if this meta class is an external type. \n",
              "readOnly": true,
              "type": "boolean"
            },
            "ParentClass": {
              "description": "The fully-qualified name of the parent metaclass in the class inheritance hierarchy. \n",
              "readOnly": true,
              "type": "string"
            },
            "Properties": {
              "description": "Meta definition for the properties in the meta class and from all classes in the inheritance hierarchy. \n",
              "items": {
                "$ref": "#/definitions/metaPropDefinition"
              },
              "readOnly": true,
              "type": "array"
            },
            "Relationships": {
              "description": "Meta definition for the relationship in the meta class. \n",
              "items": {
                "$ref": "#/definitions/metaRelationshipDefinition"
              },
              "readOnly": true,
              "type": "array"
            },
            "RestPath": {
              "description": "Restful URL path for the meta class. \n",
              "readOnly": true,
              "type": "string"
            },
            "Version": {
              "description": "Version of the service that defines the meta class.  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Definition of the meta class for a particular version of service.\n",
      "title": "Meta:Definition"
    },
    "metaDefinitionList": {
      "properties": {
        "Count": {
          "description": "The number of metaDefinitions matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of metaDefinitions matching your request.",
          "items": {
            "$ref": "#/definitions/metaDefinition"
          },
          "type": "array"
        }
      }
    },
    "metaPropDefinition": {
      "allOf": [
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for the property. \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the property as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "OpSecurity": {
              "default": "ClearText",
              "description": "Operational Security definition. \n",
              "enum": [
                "ClearText",
                "Encrypted"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SearchWeight": {
              "description": "Api access definition.  \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "description": "Definitions for the properties in a meta class.\n",
      "title": "Meta:Prop Definition"
    },
    "metaRelationshipDefinition": {
      "allOf": [
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ApiAccess": {
              "default": "NoAccess",
              "description": "Api access definition for this relationship \n",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Collection": {
              "description": "Specifies whether the relationship is a collection \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Name": {
              "description": "Name of the relationship as defined in the model.yaml \n",
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "description": "Fully qualified type of the foreign MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Definitions for the relationship in a meta class.\n",
      "title": "Meta:Relationship Definition"
    },
    "moBaseComplexType": {
      "allOf": [
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ObjectType": {
              "description": "The concrete type of this complex element. The ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the  ObjectType is optional.  The type is ambiguous when a managed object contains an array of nested documents, and the documents in the array are heterogeneous, i.e. the array can contain nested documents of different types.\n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This is the base type for all complex types. All complex types inherit from this base type.\n",
      "title": "Mo:Base Complex Type"
    },
    "moBaseMo": {
      "allOf": [
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "AccountMoid": {
              "description": "The Account ID for this managed object. \n",
              "readOnly": true,
              "type": "string"
            },
            "Ancestors": {
              "description": "Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "CreateTime": {
              "description": "The time when this managed object was created. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ModTime": {
              "description": "The time when this managed object was last modified. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Moid": {
              "description": "A unique identifier of this Managed Object instance. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ObjectType": {
              "description": "The fully-qualified type of this managed object, e.g. the class name. \n",
              "readOnly": true,
              "type": "string"
            },
            "Owners": {
              "description": "An array of owners which represent effective ownership of this object.  \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Parent": {
              "$ref": "#/definitions/moMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "Tags": {
              "description": "An array of tags, which allow to add key, value meta-data to managed objects.  \n",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "The base abstract class for all Cisco Intersight managed objects.\n",
      "title": "Mo:Base Mo"
    },
    "moMoRef": {
      "allOf": [
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Moid": {
              "readOnly": true,
              "type": "string"
            },
            "ObjectType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "moMoRef represents a reference to a managed object, uniquely identified by object type and MO ID.\n",
      "title": "Mo:Mo Ref"
    },
    "moTag": {
      "allOf": [
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Tags enable to organize managed objects by assigning meta-data tags to any object. A tag is a data structure that has a key and value.\n",
      "title": "Mo:Tag"
    },
    "viewsView": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ],
      "description": "An abstract representation of a view. A view provides read-only access to the object model. A view can combine and transform data from multiple data sources.\n",
      "title": "Views:View"
    },
    "computeIpAddress": {
      "allOf": [
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "default": "Equipment",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "readOnly": true,
              "type": "string"
            },
            "DefaultGateway": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "HttpPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HttpsPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "KvmPort": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "default": "Outband",
              "enum": [
                "Outband",
                "Inband"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Subnet": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "default": "MgmtInterface",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Complex type representing an ip address in UCSM\n",
      "title": "Compute:Ip Address"
    },
    "computePhysical": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Abstract class for all physical servers\n",
      "title": "Compute:Physical"
    },
    "equipmentBase": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Abstract base class for all equipments which have a vendor /model / serial\n",
      "title": "Equipment:Base"
    },
    "firmwareCifsServer": {
      "allOf": [
        {
          "properties": {
            "MountOptions": {
              "default": "none",
              "description": "Mount option (Authentication Protocol) as configured on the CIFS Server \n",
              "enum": [
                "none",
                "ntlm",
                "ntlmi",
                "ntlmv2",
                "ntlmv2i",
                "ntlmssp",
                "ntlmsspi"
              ],
              "type": "string"
            },
            "RemoteFile": {
              "description": "The filename of the image in the remote share location \n",
              "type": "string"
            },
            "RemoteIp": {
              "description": "CIFS Server IP Address \n",
              "type": "string"
            },
            "RemoteShare": {
              "description": "The directory path where the image is stored  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Cifs Server"
    },
    "firmwareDirectDownload": {
      "allOf": [
        {
          "properties": {
            "Upgradeoption": {
              "default": "sd_upgrade_mount_only",
              "description": "Customer can download the image on the microsd of the server from Cisco.com and upgrade later or do the download, upgrade in a single window  \n",
              "enum": [
                "sd_upgrade_mount_only",
                "sd_download_only",
                "sd_upgrade_only",
                "sd_upgrade_full"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Direct Download"
    },
    "firmwareHttpServer": {
      "allOf": [
        {
          "properties": {
            "LocationLink": {
              "description": "An HTTP/HTTPS link to the image. Use the format http[s]://serverip/share/image. \n",
              "type": "string"
            },
            "MountOptions": {
              "description": "Mount option as configured on the HTTP server  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Http Server"
    },
    "firmwareNetworkShare": {
      "allOf": [
        {
          "properties": {
            "CifsServer": {
              "$ref": "#/definitions/firmwareCifsServer",
              "description": "CIFS Server access details that holds the image \n"
            },
            "HttpServer": {
              "$ref": "#/definitions/firmwareHttpServer",
              "description": "HTTP Server access details that holds the image \n"
            },
            "IsPasswordSet": {
              "type": "boolean"
            },
            "MapType": {
              "default": "nfs",
              "description": "User can have the image already downloaded in a local network in customer premises and initiate the upgrade via Intersight with that network-share information. The image can be in a different mount protocol like CIFS, NFS and over HTTP(www). Once this configured, Intersight will configure the mount point in BMC. \n",
              "enum": [
                "nfs",
                "cifs",
                "www"
              ],
              "type": "string"
            },
            "NfsServer": {
              "$ref": "#/definitions/firmwareNfsServer",
              "description": "NFS Server access details that holds the image \n"
            },
            "Password": {
              "description": "User Credentials as configured on the remote server \n",
              "type": "string"
            },
            "Upgradeoption": {
              "default": "nw_upgrade_full",
              "description": "Customer can mount a locally downloaded image on the setup and upgrade later or do both the mount, upgrade in a single window \n",
              "enum": [
                "nw_upgrade_full",
                "nw_upgrade_mount_only"
              ],
              "type": "string"
            },
            "Username": {
              "description": "User Credentials as configured on the remote server  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Network Share"
    },
    "firmwareNfsServer": {
      "allOf": [
        {
          "properties": {
            "MountOptions": {
              "description": "Mount option as configured on the NFS Server \n",
              "type": "string"
            },
            "RemoteFile": {
              "description": "The filename of the image in the remote share location \n",
              "type": "string"
            },
            "RemoteIp": {
              "description": "NFS Server IP Address \n",
              "type": "string"
            },
            "RemoteShare": {
              "description": "The directory path where the image is stored  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Nfs Server"
    },
    "firmwareUpgrade": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Device": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "DirectDownload": {
              "$ref": "#/definitions/firmwareDirectDownload",
              "description": "Customer can upgrade the setup using the image directly from Cisco.com \n"
            },
            "Distributable": {
              "$ref": "#/definitions/moMoRef"
            },
            "NetworkShare": {
              "$ref": "#/definitions/firmwareNetworkShare",
              "description": "Customer can upgrade the setup using the already downloaded image in customer's network \n"
            },
            "Server": {
              "$ref": "#/definitions/moMoRef"
            },
            "UpgradeStatus": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "UpgradeType": {
              "default": "direct_upgrade",
              "description": "User can upgrade a server in two ways. Either can have the image locally in customer network itself and upgrade. Or can upgrade against the image directly from Cisco.com.  \n",
              "enum": [
                "direct_upgrade",
                "network_upgrade"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Upgrade"
    },
    "firmwareUpgradeList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareUpgrades matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of firmwareUpgrades matching your request.",
          "items": {
            "$ref": "#/definitions/firmwareUpgrade"
          },
          "type": "array"
        }
      }
    },
    "firmwareUpgradeStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DownloadError": {
              "description": "Download error describes about the nature of the failure that helps in fixing it further \n",
              "type": "string"
            },
            "DownloadPercentage": {
              "description": "The percentage of image has been downloaded from Cisco.com to BMC \n",
              "format": "int64",
              "type": "integer"
            },
            "DownloadStage": {
              "description": "A download can have various stages like BEGIN, DOWNLOADING, FLASHING, etc., \n",
              "type": "string"
            },
            "DownloadStatus": {
              "description": "The status of the download like COMPLETED, FAILED or ERRORED \n",
              "type": "string"
            },
            "EpPowerStatus": {
              "default": "none",
              "description": "Upgrade workflow at the end will store the endpoint power status. This helps when endpoint comes up to kick the monitor workflow separately. \n",
              "enum": [
                "none",
                "powered on",
                "powered off"
              ],
              "type": "string"
            },
            "OverallError": {
              "description": "Upgrade failure messages holds not only the download error but also the workflow recommended fix \n",
              "type": "string"
            },
            "OverallPercentage": {
              "description": "This gives the overall percentage of the upgrade that is passed \n",
              "format": "int64",
              "type": "integer"
            },
            "Overallstatus": {
              "description": "An upgrade workflow typically will pass through the stages like download of image, flashing, updating, activating and reboot. This actually will hold the last value of stages. \n",
              "type": "string"
            },
            "PendingType": {
              "default": "none",
              "description": "Upgrade can be pending for an user action and this field will describe the type of user action that require for upgrade to progress  \n",
              "enum": [
                "none",
                "pending for next reboot"
              ],
              "type": "string"
            },
            "Upgrade": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Firmware:Upgrade Status"
    },
    "firmwareUpgradeStatusList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareUpgradeStatuses matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of firmwareUpgradeStatuses matching your request.",
          "items": {
            "$ref": "#/definitions/firmwareUpgradeStatus"
          },
          "type": "array"
        }
      }
    },
    "inventoryBase": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Base class for all inventory MOs\n",
      "title": "Inventory:Base"
    },
    "assetDeviceClaim": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Device": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SecurityToken": {
              "type": "string",
              "x-createOnly": true
            },
            "SerialNumber": {
              "type": "string",
              "x-createOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Asset:Device Claim"
    },
    "assetDeviceRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AccessKey": {
              "description": "Part of the credential used for the device connector to authenticate with the cloud. \n",
              "type": "string"
            },
            "AccessKeyId": {
              "description": "Part of the credential used for the device connector to authenticate with the cloud.  \n",
              "type": "string"
            },
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "description": "The account to which the device has been claimed.\n",
              "readOnly": true
            },
            "ClaimedByUser": {
              "$ref": "#/definitions/moMoRef",
              "description": "The user who claimed the device for the account.\n",
              "readOnly": true
            },
            "ClaimedTime": {
              "description": "The date and time at which the device was claimed to this account. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "ConnectionReason": {
              "description": "If 'connectionStatus' is not equal to Connected, connectionReason provides further details about why the device is not connected with the cloud. \n",
              "type": "string"
            },
            "ConnectionStatus": {
              "description": "The status of the connection between the device connector and the cloud. Values are [Connected|NotConnected]. \n",
              "type": "string"
            },
            "ConnectionStatusLastChangeTime": {
              "description": "The last time at which the 'connectionStatus' property value changed. If connectionStatus is Connected, this time can be interpreted as the starting time since which a persistent connection has been maintained between the cloud and device connector. If connectionStatus is NotConnected, this time can be interpreted as the last time the device connector was connected with the cloud. \n",
              "format": "date-time",
              "type": "string"
            },
            "ConnectorVersion": {
              "description": "The version of the device connector running on the managed device. The version format is 1.2.3 for Release builds and 1.2.3-456 for Development builds. \n",
              "type": "string"
            },
            "DeviceClaim": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "DeviceExternalIpAddress": {
              "description": "The IP Address of the managed device as seen from the cloud at the time of registration. Eg this could be the IP of the managed device's interface which has a route to the internet or a NAT IP when the managed device is deployed in a private network. \n",
              "type": "string"
            },
            "DeviceHostname": {
              "description": "The hostnames of the managed device. There can be multiple hostnames depending on the number of elements managed (ie HA clusters). \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "DeviceIpAddress": {
              "description": "The IP Addresses of the managed device. There can be multiple management IPs depending on the number of elements managed (ie HA clusters) and in-band/out-of-band connectivity. \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ExecutionMode": {
              "description": "Indicates if the platform is an actual device or an emulated device for testing, demos, etc. Permitted values [Normal, Emulator, ContainerEmulator] \n",
              "type": "string",
              "x-createOnly": true
            },
            "Pid": {
              "description": "The product Id of the managed device. \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "PlatformType": {
              "description": "The platform type on which device connector is executing. \n",
              "type": "string",
              "x-createOnly": true
            },
            "ReadOnly": {
              "description": "Flag reported by devices to indicate an administrator of the device has disabled management operations of the device connector and only monitoring is permitted. \n",
              "type": "boolean"
            },
            "SecurityToken": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Serial": {
              "description": "A list of serial numbers of the individual device elements (eg HA primary/secondary or cluster members) which are exposed as a single unit of management by the device connector. \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "Vendor": {
              "description": "The vendor of the managed device.  \n",
              "type": "string",
              "x-createOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "DeviceRegistration represents a device connector enabled endpoint which has registered with the StarShip cloud.\n",
      "title": "Asset:Device Registration"
    },
    "assetDeviceRegistrationList": {
      "properties": {
        "Count": {
          "description": "The number of assetDeviceRegistrations matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of assetDeviceRegistrations matching your request.",
          "items": {
            "$ref": "#/definitions/assetDeviceRegistration"
          },
          "type": "array"
        }
      }
    },
    "hyperflexAutoSupportPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "AdminState": {
              "description": "Enable or disable Auto Support \n",
              "type": "boolean"
            },
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "ServiceTicketReceipient": {
              "description": "Email address recipient for support tickets  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies configuration to automatically generate support tickets with Cisco TAC\n",
      "title": "Auto Support"
    },
    "hyperflexAutoSupportPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexAutoSupportPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexAutoSupportPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexAutoSupportPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexClusterNetworkPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "JumboFrame": {
              "description": "Enable or disable Jumbo frames \n",
              "type": "boolean"
            },
            "MgmtVlan": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "Management VLAN \n"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "VmMigrationVlan": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "VM migration VLAN \n"
            },
            "VmNetworkVlans": {
              "description": "VM traffic VLANs  \n",
              "items": {
                "$ref": "#/definitions/hyperflexNamedVlan"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies VLANs for management, VM migration, and VM traffic\n",
      "title": "Network Configuration"
    },
    "hyperflexClusterNetworkPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusterNetworkPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexClusterNetworkPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexClusterProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigProfile"
        },
        {
          "properties": {
            "AutoSupport": {
              "$ref": "#/definitions/moMoRef"
            },
            "ClusterNetwork": {
              "$ref": "#/definitions/moMoRef"
            },
            "ClusterStorage": {
              "$ref": "#/definitions/moMoRef"
            },
            "ConfigResult": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "DataIpAddress": {
              "description": "Storage data IP address for the HyperFlex cluster \n",
              "type": "string"
            },
            "ExtFcStorage": {
              "$ref": "#/definitions/moMoRef"
            },
            "ExtIscsiStorage": {
              "$ref": "#/definitions/moMoRef"
            },
            "HypervisorType": {
              "default": "ESXi",
              "description": "Hypervisor type for the HyperFlex cluster \n",
              "enum": [
                "ESXi"
              ],
              "type": "string"
            },
            "LocalCredential": {
              "$ref": "#/definitions/moMoRef"
            },
            "MacAddressPrefix": {
              "description": "MAC address prefix \n",
              "type": "string"
            },
            "MgmtIpAddress": {
              "description": "Management IP address for the HyperFlex cluster \n",
              "type": "string"
            },
            "MgmtPlatform": {
              "default": "FI",
              "description": "Management platform for the HyperFlex cluster \n",
              "enum": [
                "FI",
                "EDGE"
              ],
              "type": "string"
            },
            "NodeConfig": {
              "$ref": "#/definitions/moMoRef"
            },
            "NodeProfileConfig": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Replication": {
              "description": "Specifies the number of copies of each data block written \n",
              "format": "int64",
              "type": "integer"
            },
            "StorageDataVlan": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "VLAN for the HyperFlex storage data traffic  \n"
            },
            "SysConfig": {
              "$ref": "#/definitions/moMoRef"
            },
            "UcsmConfig": {
              "$ref": "#/definitions/moMoRef"
            },
            "VcenterConfig": {
              "$ref": "#/definitions/moMoRef"
            }
          },
          "type": "object"
        }
      ],
      "description": "Configuration settings for a HyperFlex cluster\n",
      "title": "HX Cluster Profile"
    },
    "hyperflexClusterProfileList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusterProfiles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexClusterProfiles matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexClusterProfile"
          },
          "type": "array"
        }
      }
    },
    "hyperflexClusterStoragePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "DiskPartitionCleanup": {
              "description": "If enabled, formats existing disk partitions (destroys all user data) \n",
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "VdiOptimization": {
              "description": "Enable or disable VDI optimization (hybrid HX systems only)  \n",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "description": "HyperFlex cluster storage settings (optional)\n",
      "title": "Storage Configuration"
    },
    "hyperflexClusterStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusterStoragePolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexClusterStoragePolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexClusterStoragePolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexConfigResult": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResult"
        },
        {
          "properties": {
            "ClusterProfile": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ConfigProgress": {
              "description": "The progress percentage of the running configuration or workflow \n",
              "type": "string"
            },
            "Duration": {
              "description": "The duration of the running configuration or workflow \n",
              "type": "string"
            },
            "StartTime": {
              "description": "The start time of the configuration or workflow  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Configuration result\n",
      "title": "Hyperflex:Config Result"
    },
    "hyperflexConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexConfigResults matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexConfigResults matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexConfigResult"
          },
          "type": "array"
        }
      }
    },
    "hyperflexExtFcStoragePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "AdminState": {
              "description": "Enables or disables external FC storage configuration \n",
              "type": "boolean"
            },
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "ExtaTraffic": {
              "$ref": "#/definitions/hyperflexNamedVsan",
              "description": "VSAN for the primary Fabric Interconnect external FC storage traffic \n"
            },
            "ExtbTraffic": {
              "$ref": "#/definitions/hyperflexNamedVsan",
              "description": "VSAN for the secondary Fabric Interconnect external FC storage traffic \n"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "WwxnRange": {
              "$ref": "#/definitions/hyperflexWwxnRange",
              "description": "WWxN range  \n"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies external storage connectivity information via Fabric attached FC storage\n",
      "title": "External FC Storage"
    },
    "hyperflexExtFcStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexExtFcStoragePolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexExtFcStoragePolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexExtIscsiStoragePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "AdminState": {
              "description": "Enable or disable external FCoE storage configuration \n",
              "type": "boolean"
            },
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "ExtaTraffic": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "VLAN for the primary Fabric Interconnect external FCoE storage traffic \n"
            },
            "ExtbTraffic": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "VLAN for the secondary Fabric Interconnect external FCoE storage traffic  \n"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies external storage connectivity information via Fabric attached FCoE storage\n",
      "title": "External iSCSI Storage"
    },
    "hyperflexExtIscsiStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexExtIscsiStoragePolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexExtIscsiStoragePolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexIpAddrRange": {
      "allOf": [
        {
          "properties": {
            "EndAddr": {
              "description": "End address \n",
              "type": "string"
            },
            "Gateway": {
              "description": "Gateway \n",
              "type": "string"
            },
            "Netmask": {
              "description": "Netmask \n",
              "type": "string"
            },
            "StartAddr": {
              "description": "Start address  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "IP address range, netmask, and gateway\n",
      "title": "Hyperflex:Ip Addr Range"
    },
    "hyperflexLocalCredentialPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "HxdpRootPwd": {
              "description": "HX storage controller VM password Must contain a minimum of 10 characters with at least 1 lowercase, 1 uppercase, 1 numeric, and 1 special character - !@#$%^&* \n",
              "type": "string"
            },
            "HypervisorAdmin": {
              "description": "Hypervisor administrator username Must contain only alphanumeric characters Use the root account for ESXi deployments \n",
              "type": "string"
            },
            "HypervisorAdminPwd": {
              "description": "Enter the ESXi root password. Use the default password \"Cisco123\" for newly manufactured HX servers. A custom password should only be used if ESXi credentials were manually changed prior to deployment.  \n",
              "type": "string"
            },
            "IsHxdpRootPwdSet": {
              "type": "boolean"
            },
            "IsHypervisorAdminPwdSet": {
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies credentials for HyperFlex cluster such as controller VM password, hypervisor username, and password\n",
      "title": "Security"
    },
    "hyperflexLocalCredentialPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexLocalCredentialPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexLocalCredentialPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexMacAddrPrefixRange": {
      "allOf": [
        {
          "properties": {
            "EndAddr": {
              "description": "End address \n",
              "type": "string"
            },
            "StartAddr": {
              "description": "Start address  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "MAC address prefix range\n",
      "title": "Hyperflex:Mac Addr Prefix Range"
    },
    "hyperflexNamedVlan": {
      "allOf": [
        {
          "properties": {
            "Name": {
              "description": "VLAN name \n",
              "type": "string"
            },
            "VlanId": {
              "description": "VLAN ID  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "VLAN name and ID\n",
      "title": "Hyperflex:Named Vlan"
    },
    "hyperflexNamedVsan": {
      "allOf": [
        {
          "properties": {
            "Name": {
              "description": "VSAN name \n",
              "type": "string"
            },
            "VsanId": {
              "description": "VSAN ID  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:Named Vsan"
    },
    "hyperflexNodeConfigPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "DataIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "Storage data IP range \n"
            },
            "HxdpIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "HX storage management IP range \n"
            },
            "MgmtIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "Management IP range \n"
            },
            "NodeNamePrefix": {
              "description": "This prefix will be automatically prepended as the hostname for each server. A dash (-) will be added followed by the node number. This default naming scheme can be manually overridden on the Nodes Configuration page as required.  \n",
              "type": "string"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies node configuration details such as management and storage data IP ranges. For HyperFlex Edge, storage data IP range is pre-defined.\n",
      "title": "Node IP and Hostname"
    },
    "hyperflexNodeConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexNodeConfigPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexNodeConfigPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexNodeConfigPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexNodeProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "properties": {
            "AssignedServer": {
              "$ref": "#/definitions/moMoRef"
            },
            "ClusterProfile": {
              "$ref": "#/definitions/moMoRef"
            },
            "EsxDataIp": {
              "description": "IP address for storage data network (Hypervisor interface) \n",
              "type": "string"
            },
            "EsxMgmtIp": {
              "description": "IP address for Hypervisor management network \n",
              "type": "string"
            },
            "HxdpDataIp": {
              "description": "IP address for storage data network (Controller VM interface) \n",
              "type": "string"
            },
            "HxdpMgmtIp": {
              "description": "IP address for HyperFlex management network  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Configuration per node in the HyperFlex cluster. Specifies node settings such as IP address configuration for hypervisor management network, storage data network, HyperFlex management network, and the assigned physical server\n",
      "title": "Hyperflex:Node Profile"
    },
    "hyperflexNodeProfileList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexNodeProfiles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexNodeProfiles matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexNodeProfile"
          },
          "type": "array"
        }
      }
    },
    "hyperflexSysConfigPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "DnsServers": {
              "description": "Enter one or more DNS servers. A DNS server that can resolve public domains is required for Intersight management. \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "NtpServers": {
              "description": "Enter one or more NTP servers (IP address or FQDN). A local NTP server is highly recommended. \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Timezone": {
              "description": "Timezone  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies system configuration information such as timezone, DNS servers, and NTP Servers\n",
      "title": "DNS, NTP and Timezone"
    },
    "hyperflexSysConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexSysConfigPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexSysConfigPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexSysConfigPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexUcsmConfigPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "KvmIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "Out-of-band KVM IP range \n"
            },
            "MacPrefixRange": {
              "$ref": "#/definitions/hyperflexMacAddrPrefixRange",
              "description": "MAC address prefix range \n"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "ServiceProfileOrg": {
              "description": "HyperFlex cluster org name  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies UCS Manager settings such as service profile org, KVM IP addresses, and MAC prefix for server configuration in Fabric Interconnect environment\n",
      "title": "UCSM Configuration"
    },
    "hyperflexUcsmConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexUcsmConfigPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexUcsmConfigPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexVcenterConfigPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "ClusterProfiles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "DataCenter": {
              "description": "vCenter datacenter name \n",
              "type": "string"
            },
            "Hostname": {
              "description": "vCenter server FQDN or IP \n",
              "type": "string"
            },
            "IsPasswdSet": {
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Passwd": {
              "description": "vCenter password Password must be atleast 6 characters. Follow the corresponding password policy governed by vCenter. \n",
              "type": "string"
            },
            "SsoUrl": {
              "description": "Overrides the default vCenter Single Sign-On URL. Do not specify unless instructed by Cisco TAC \n",
              "type": "string"
            },
            "UserName": {
              "description": "vCenter username (e.g. administrator@vsphere.local)  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Specifies vCenter configuration\n",
      "title": "vCenter"
    },
    "hyperflexVcenterConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexVcenterConfigPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexVcenterConfigPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
          },
          "type": "array"
        }
      }
    },
    "hyperflexWwxnRange": {
      "allOf": [
        {
          "properties": {
            "EndAddr": {
              "description": "End address \n",
              "type": "string"
            },
            "StartAddr": {
              "description": "Start address  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "WWxN range\n",
      "title": "Hyperflex:Wwxn Range"
    },
    "policyAbstractConfigProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "properties": {
            "Action": {
              "description": "User initiated action. Each profile type has its own supported actions. For hyperflex cluster profile, the supported actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy, Unassign \n",
              "type": "string"
            },
            "ConfigContext": {
              "$ref": "#/definitions/policyConfigContext"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "properties": {
            "Action": {
              "description": "User initiated action. Each profile type has its own supported actions. For hyperflex cluster profile, the supported actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy, Unassign \n",
              "type": "string"
            },
            "ConfigContext": {
              "$ref": "#/definitions/policyConfigContext"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "properties": {
            "Action": {
              "description": "User/system triggered action like \"NoOp\", \"Deploy\", \"Undeploy\", \"DryRun\", \"ComplianceCheck\", \"AnalyzeImpact\" \n",
              "type": "string"
            },
            "ConfigContext": {
              "$ref": "#/definitions/policyConfigContext"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "properties": {
            "Action": {
              "description": "User initiated action. Each profile type has its own supported actions. For hyperflex cluster profile, the supported actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy, Unassign \n",
              "type": "string"
            },
            "ConfigContext": {
              "$ref": "#/definitions/policyConfigContext"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "properties": {
            "Action": {
              "description": "User initiated action. Each profile type has its own supported actions. For hyperflex cluster profile, the supported actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy, Unassign \n",
              "type": "string"
            },
            "ConfigContext": {
              "$ref": "#/definitions/policyConfigContext"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Abstract Config Profile"
    },
    "policyAbstractConfigResult": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ConfigStage": {
              "description": "The current running stage of the configuration or workflow. \n",
              "type": "string"
            },
            "ConfigState": {
              "description": "Indicates overall configuration state for applying the configuration to the end point Values  -- ok, ok-with-warning, errored \n",
              "type": "string"
            },
            "ResultEntries": {
              "description": "Detailed result entries for both validation & configration. Each result entry can be error/warning/info messages and the context. \n",
              "items": {
                "$ref": "#/definitions/policyConfigResultEntry"
              },
              "type": "array"
            },
            "ValidationState": {
              "description": "Indicates overall state for logical model validation Values  -- ok, ok-with-warning, errored  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ConfigStage": {
              "description": "The current running stage of the configuration or workflow. \n",
              "type": "string"
            },
            "ConfigState": {
              "description": "Indicates overall configuration state for applying the configuration to the end point Values  -- ok, ok-with-warning, errored \n",
              "type": "string"
            },
            "ResultEntries": {
              "description": "Detailed result entries for both validation & configration. Each result entry can be error/warning/info messages and the context. \n",
              "items": {
                "$ref": "#/definitions/policyConfigResultEntry"
              },
              "type": "array"
            },
            "ValidationState": {
              "description": "Indicates overall state for logical model validation Values  -- ok, ok-with-warning, errored  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ConfigStage": {
              "description": "The current running stage of the configuration or workflow. \n",
              "type": "string"
            },
            "ConfigState": {
              "description": "Indicates overall configuration state for applying the configuration to the end point Values  -- ok, ok-with-warning, errored \n",
              "type": "string"
            },
            "ResultEntries": {
              "description": "Detailed result entries for both validation & configration. Each result entry can be error/warning/info messages and the context. \n",
              "items": {
                "$ref": "#/definitions/policyConfigResultEntry"
              },
              "type": "array"
            },
            "ValidationState": {
              "description": "Indicates overall state for logical model validation Values  -- ok, ok-with-warning, errored  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents the results with the overall state and detailed result messages.\n",
      "title": "Policy:Abstract Config Result"
    },
    "policyAbstractPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the policy. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the policy.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the policy. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the policy.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the policy. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the policy.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the policy. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the policy.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Abstract Policy"
    },
    "policyAbstractProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the profile. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the profile. \n",
              "type": "string"
            },
            "SrcTemplate": {
              "$ref": "#/definitions/moMoRef"
            },
            "Type": {
              "default": "instance",
              "description": "Defines the type of the profile. Accepted value is instance.  \n",
              "enum": [
                "instance"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the profile. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the profile. \n",
              "type": "string"
            },
            "SrcTemplate": {
              "$ref": "#/definitions/moMoRef"
            },
            "Type": {
              "default": "instance",
              "description": "Defines the type of the profile. Accepted value is instance.  \n",
              "enum": [
                "instance"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the profile. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the profile. \n",
              "type": "string"
            },
            "SrcTemplate": {
              "$ref": "#/definitions/moMoRef"
            },
            "Type": {
              "default": "instance",
              "description": "Defines the type of the profile. Accepted value is instance.  \n",
              "enum": [
                "instance"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the profile. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the profile. \n",
              "type": "string"
            },
            "SrcTemplate": {
              "$ref": "#/definitions/moMoRef"
            },
            "Type": {
              "default": "instance",
              "description": "Defines the type of the profile. Accepted value is instance.  \n",
              "enum": [
                "instance"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description of the profile. \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of the profile. \n",
              "type": "string"
            },
            "SrcTemplate": {
              "$ref": "#/definitions/moMoRef"
            },
            "Type": {
              "default": "instance",
              "description": "Defines the type of the profile. Accepted value is instance.  \n",
              "enum": [
                "instance"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Abstract Profile"
    },
    "policyConfigContext": {
      "allOf": [
        {
          "properties": {
            "ConfigState": {
              "description": "Indicates a profile's configuration deploying state Values -- Assigned, Not-assigned, Associated, Pending-changes, Validating, Configuring, Failed \n",
              "readOnly": true,
              "type": "string"
            },
            "ControlAction": {
              "description": "System action to trigger the appropriate workflow. Values -- No_op, ConfigChange, Deploy, Unbind \n",
              "type": "string"
            },
            "ErrorState": {
              "description": "Indicates a profile's error state. Values -- Validation-error (Static validation error), Pre-config-error (Runtime validation error), Config-error (Runtime configuration error) \n",
              "type": "string"
            },
            "OperState": {
              "description": "Combined state (configState, and operational state of the associated physical resource) to indicate the current state of the profile. Values -- n/a, Power-off, Pending-changes, Configuring, Ok, Failed  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ConfigState": {
              "description": "Indicates a profile's configuration deploying state Values -- Assigned, Not-assigned, Associated, Pending-changes, Validating, Configuring, Failed \n",
              "readOnly": true,
              "type": "string"
            },
            "ControlAction": {
              "description": "System action to trigger the appropriate workflow. Values -- No_op, ConfigChange, Deploy, Unbind \n",
              "type": "string"
            },
            "ErrorState": {
              "description": "Indicates a profile's error state. Values -- Validation-error (Static validation error), Pre-config-error (Runtime validation error), Config-error (Runtime configuration error) \n",
              "type": "string"
            },
            "OperState": {
              "description": "Combined state (configState, and operational state of the associated physical resource) to indicate the current state of the profile. Values -- n/a, Power-off, Pending-changes, Configuring, Ok, Failed  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ConfigState": {
              "description": "Indicates a profile's configuration deploying state Values -- Assigned, Not-assigned, Associated, Pending-changes, Validating, Configuring, Errored \n",
              "readOnly": true,
              "type": "string"
            },
            "ControlAction": {
              "description": "Internal action to trigger the appropriate workflow. Values -- No_op, ConfigChange, Deploy, Unbind \n",
              "type": "string"
            },
            "ErrorState": {
              "description": "Indicates a profile's error state Values -- validation-error (Profile side validation error), pre-config-error (installer runtime validation error), config-error (installer configuration error) \n",
              "type": "string"
            },
            "OperState": {
              "description": "Combined state (configState, and operational state of the associated physical resource) to indicate the current state of the profile. Values -- n/a, power-off, pending-changes, configuring, ok, ok-with-warning, errored  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ConfigState": {
              "description": "Indicates a profile's configuration deploying state Values -- Assigned, Not-assigned, Associated, Pending-changes, Validating, Configuring, Failed \n",
              "readOnly": true,
              "type": "string"
            },
            "ControlAction": {
              "description": "System action to trigger the appropriate workflow. Values -- No_op, ConfigChange, Deploy, Unbind \n",
              "type": "string"
            },
            "ErrorState": {
              "description": "Indicates a profile's error state. Values -- Validation-error (Static validation error), Pre-config-error (Runtime validation error), Config-error (Runtime configuration error) \n",
              "type": "string"
            },
            "OperState": {
              "description": "Combined state (configState, and operational state of the associated physical resource) to indicate the current state of the profile. Values -- n/a, Power-off, Pending-changes, Configuring, Ok, Failed  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ConfigState": {
              "description": "Indicates a profile's configuration deploying state Values -- Assigned, Not-assigned, Associated, Pending-changes, Validating, Configuring, Failed \n",
              "readOnly": true,
              "type": "string"
            },
            "ControlAction": {
              "description": "System action to trigger the appropriate workflow. Values -- No_op, ConfigChange, Deploy, Unbind \n",
              "type": "string"
            },
            "ErrorState": {
              "description": "Indicates a profile's error state. Values -- Validation-error (Static validation error), Pre-config-error (Runtime validation error), Config-error (Runtime configuration error) \n",
              "type": "string"
            },
            "OperState": {
              "description": "Combined state (configState, and operational state of the associated physical resource) to indicate the current state of the profile. Values -- n/a, Power-off, Pending-changes, Configuring, Ok, Failed  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Configuration related state and results\n",
      "title": "Policy:Config Context"
    },
    "policyConfigResultContext": {
      "allOf": [
        {
          "properties": {
            "EntityData": {
              "type": "object"
            },
            "EntityMoid": {
              "type": "string"
            },
            "EntityName": {
              "type": "string"
            },
            "EntityType": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "EntityData": {
              "type": "object"
            },
            "EntityMoid": {
              "type": "string"
            },
            "EntityName": {
              "type": "string"
            },
            "EntityType": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "EntityData": {
              "type": "object"
            },
            "EntityMoid": {
              "type": "string"
            },
            "EntityName": {
              "type": "string"
            },
            "EntityType": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The context for a validation/config result such as the related entity's name, type, MOID etc.\n",
      "title": "Policy:Config Result Context"
    },
    "policyConfigResultEntry": {
      "allOf": [
        {
          "properties": {
            "Context": {
              "$ref": "#/definitions/policyConfigResultContext"
            },
            "Message": {
              "description": "Localized message based on the locale setting of the user's context \n",
              "type": "string"
            },
            "OwnerId": {
              "type": "string"
            },
            "State": {
              "description": "Values  -- ok, ok-with-warning, errored \n",
              "type": "string"
            },
            "Type": {
              "description": "Indicates if the result is reported during the logical model validation/resource allocation phase or the configuration applying phase. Values -- validation, config  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Context": {
              "$ref": "#/definitions/policyConfigResultContext"
            },
            "Message": {
              "type": "string"
            },
            "MessageParams": {
              "description": "Values for parameterized message. Need to be in json format to cover different parameter order for localized message. \n",
              "type": "object"
            },
            "OwnerId": {
              "type": "string"
            },
            "State": {
              "description": "Values  -- ok, ok-with-warning, errored \n",
              "type": "string"
            },
            "Type": {
              "description": "Indicates if the result is reported during the logical model validation/resource allocation phase or the configuration applying phase. Values -- validation, config  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Context": {
              "$ref": "#/definitions/policyConfigResultContext"
            },
            "Message": {
              "description": "Localized message based on the locale setting of the user's context \n",
              "type": "string"
            },
            "OwnerId": {
              "type": "string"
            },
            "State": {
              "description": "Values  -- ok, ok-with-warning, errored \n",
              "type": "string"
            },
            "Type": {
              "description": "Indicates if the result is reported during the logical model validation/resource allocation phase or the configuration applying phase. Values -- validation, config  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Config Result Entry"
    },
    "iamAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "EndPointRoles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Idpreferences": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Idps": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "Permissions": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "PrivilegeSets": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Privileges": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "ResourceLimits": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Roles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RootUserEmail": {
              "readOnly": true,
              "type": "string"
            },
            "RootUserId": {
              "readOnly": true,
              "type": "string"
            },
            "RootUserName": {
              "readOnly": true,
              "type": "string"
            },
            "SessionLimits": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Status": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Account"
    },
    "iamAccountList": {
      "properties": {
        "Count": {
          "description": "The number of iamAccounts matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamAccounts matching your request.",
          "items": {
            "$ref": "#/definitions/iamAccount"
          },
          "type": "array"
        }
      }
    },
    "iamApiKey": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "PrivateKey": {
              "description": "Holds private key for API key  \n",
              "type": "string"
            },
            "Purpose": {
              "description": "Specifies the purpose of API Key  \n",
              "type": "string"
            },
            "User": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "API keys are used to programatically perform API calls. API keys can be created by passing purpose field, which is a description for the application using API keys. API keys are allowed only for customer accounts and users added statically. Maximum of 3 API keys per user is allowed. API key will have RSA key pair generated and as part of create request key MOID, private and public key in PEM format are returned. In Starship only public key is stored. Client side private key is stored and is used for signature calculation. API key requests are authenticated using RSA SHA 256 signature validations. If the incoming request for authorization has X-Starship-Token, then session based authorization is done, else API key based authorization is performed. Once User, API key and Account are found and signature verification succeeds, then the privilege validations are performed.\n",
      "title": "Iam:Api Key"
    },
    "iamApiKeyList": {
      "properties": {
        "Count": {
          "description": "The number of iamApiKeys matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamApiKeys matching your request.",
          "items": {
            "$ref": "#/definitions/iamApiKey"
          },
          "type": "array"
        }
      }
    },
    "iamEndPointPrivilege": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Description": {
              "description": "Description about functionality of this privilege \n",
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Name of the end point privilege  \n",
              "readOnly": true,
              "type": "string"
            },
            "System": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Type": {
              "description": "Type of the end point   \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "EndPointPrivilege represents a privilege defined in end point which can be managed by system.\n",
      "title": "Iam:End Point Privilege"
    },
    "iamEndPointPrivilegeList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointPrivileges matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamEndPointPrivileges matching your request.",
          "items": {
            "$ref": "#/definitions/iamEndPointPrivilege"
          },
          "type": "array"
        }
      }
    },
    "iamEndPointRole": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "EndPointPrivileges": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Name": {
              "description": "Name of the end point role  \n",
              "readOnly": true,
              "type": "string"
            },
            "RoleType": {
              "description": "Used to tags roles as special default role types common across endpoints \n",
              "readOnly": true,
              "type": "string"
            },
            "System": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Type": {
              "description": "Type of the end point   \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "EndPointRole represents a role defined in end point which can be managed by system.\n",
      "title": "Iam:End Point Role"
    },
    "iamEndPointRoleList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointRoles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamEndPointRoles matching your request.",
          "items": {
            "$ref": "#/definitions/iamEndPointRole"
          },
          "type": "array"
        }
      }
    },
    "iamIdp": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ConfigState": {
              "readOnly": true,
              "type": "string"
            },
            "IdpConnectionName": {
              "readOnly": true,
              "type": "string"
            },
            "IdpEntityId": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "SpAdapterName": {
              "readOnly": true,
              "type": "string"
            },
            "System": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Idp"
    },
    "iamIdpList": {
      "properties": {
        "Count": {
          "description": "The number of iamIdps matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamIdps matching your request.",
          "items": {
            "$ref": "#/definitions/iamIdp"
          },
          "type": "array"
        }
      }
    },
    "iamIdpReference": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Idp": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "UserLoginTime": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "UserPreferences": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Usergroups": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Users": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Idp Reference"
    },
    "iamIdpReferenceList": {
      "properties": {
        "Count": {
          "description": "The number of iamIdpReferences matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamIdpReferences matching your request.",
          "items": {
            "$ref": "#/definitions/iamIdpReference"
          },
          "type": "array"
        }
      }
    },
    "iamPermission": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef"
            },
            "EndPointRoles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Roles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Subject": {
              "description": "Subject represents the entiry to which permissions are being granted - user or user group \n",
              "type": "string",
              "x-createOnly": true
            },
            "Type": {
              "description": "Type represents type of subject - user or user group  \n",
              "type": "string",
              "x-createOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Permission provide a way to assing role to a user or user group to perform operations on objec hierarchy\n",
      "title": "Iam:Permission"
    },
    "iamPermissionList": {
      "properties": {
        "Count": {
          "description": "The number of iamPermissions matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamPermissions matching your request.",
          "items": {
            "$ref": "#/definitions/iamPermission"
          },
          "type": "array"
        }
      }
    },
    "iamPrivilege": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "App": {
              "readOnly": true,
              "type": "string"
            },
            "Method": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "Namespace": {
              "readOnly": true,
              "type": "string"
            },
            "RestPath": {
              "readOnly": true,
              "type": "string"
            },
            "System": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Version": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Privilege"
    },
    "iamPrivilegeList": {
      "properties": {
        "Count": {
          "description": "The number of iamPrivileges matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamPrivileges matching your request.",
          "items": {
            "$ref": "#/definitions/iamPrivilege"
          },
          "type": "array"
        }
      }
    },
    "iamPrivilegeSet": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "x-createOnly": true
            },
            "Privileges": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "System": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Privilege Set"
    },
    "iamPrivilegeSetList": {
      "properties": {
        "Count": {
          "description": "The number of iamPrivilegeSets matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamPrivilegeSets matching your request.",
          "items": {
            "$ref": "#/definitions/iamPrivilegeSet"
          },
          "type": "array"
        }
      }
    },
    "iamQualifier": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Name": {
              "description": "Name of the SAML attribute used to qualify a user to user group \n",
              "readOnly": true,
              "type": "string"
            },
            "Usergroup": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Value": {
              "description": "Value of SAML attribute  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Qualifier defines which user qualifies to be part of a user group\n",
      "title": "Iam:Qualifier"
    },
    "iamQualifierList": {
      "properties": {
        "Count": {
          "description": "The number of iamQualifiers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamQualifiers matching your request.",
          "items": {
            "$ref": "#/definitions/iamQualifier"
          },
          "type": "array"
        }
      }
    },
    "iamResourceLimits": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "PerAccountUserLimit": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "Resource Limits can be used to limit resources like User accounts etc.\n",
      "title": "Iam:Resource Limits"
    },
    "iamResourceLimitsList": {
      "properties": {
        "Count": {
          "description": "The number of iamResourceLimits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamResourceLimits matching your request.",
          "items": {
            "$ref": "#/definitions/iamResourceLimits"
          },
          "type": "array"
        }
      }
    },
    "iamRole": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "x-createOnly": true
            },
            "PrivilegeSets": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "System": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Role"
    },
    "iamRoleList": {
      "properties": {
        "Count": {
          "description": "The number of iamRoles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamRoles matching your request.",
          "items": {
            "$ref": "#/definitions/iamRole"
          },
          "type": "array"
        }
      }
    },
    "iamSession": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ClientIpAddress": {
              "readOnly": true,
              "type": "string"
            },
            "Expiration": {
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "IdleTimeExpiration": {
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "LastLoginClient": {
              "description": "Specifies client address from where last successful login is initiated \n",
              "readOnly": true,
              "type": "string"
            },
            "LastLoginTime": {
              "description": "Specifies last login time for user   \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "User": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Session"
    },
    "iamSessionLimits": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "IdleTimeOut": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "MaximumLimit": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "PerUserLimit": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "SessionTimeOut": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:Session Limits"
    },
    "iamSessionLimitsList": {
      "properties": {
        "Count": {
          "description": "The number of iamSessionLimits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamSessionLimits matching your request.",
          "items": {
            "$ref": "#/definitions/iamSessionLimits"
          },
          "type": "array"
        }
      }
    },
    "iamSessionList": {
      "properties": {
        "Count": {
          "description": "The number of iamSessions matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamSessions matching your request.",
          "items": {
            "$ref": "#/definitions/iamSession"
          },
          "type": "array"
        }
      }
    },
    "iamSystem": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "EndPointPrivileges": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "EndPointRoles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Idp": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "PrivilegeSets": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Privileges": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Roles": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:System"
    },
    "iamSystemList": {
      "properties": {
        "Count": {
          "description": "The number of iamSystems matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamSystems matching your request.",
          "items": {
            "$ref": "#/definitions/iamSystem"
          },
          "type": "array"
        }
      }
    },
    "iamUser": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ApiKeys": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "ClientIpAddress": {
              "description": "Specifies the IP address from where user logged in last time \n",
              "readOnly": true,
              "type": "string"
            },
            "Email": {
              "readOnly": true,
              "type": "string"
            },
            "FirstName": {
              "readOnly": true,
              "type": "string"
            },
            "Idpreference": {
              "$ref": "#/definitions/moMoRef"
            },
            "LastLoginTime": {
              "description": "Specifies last login time for user \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "LastName": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true
            },
            "Sessions": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "UserType": {
              "description": "Specifies if user has logged in via user group or added statically  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:User"
    },
    "iamUserGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Idpreference": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "x-createOnly": true
            },
            "Qualifier": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Users": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "title": "Iam:User Group"
    },
    "iamUserGroupList": {
      "properties": {
        "Count": {
          "description": "The number of iamUserGroups matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamUserGroups matching your request.",
          "items": {
            "$ref": "#/definitions/iamUserGroup"
          },
          "type": "array"
        }
      }
    },
    "iamUserList": {
      "properties": {
        "Count": {
          "description": "The number of iamUsers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamUsers matching your request.",
          "items": {
            "$ref": "#/definitions/iamUser"
          },
          "type": "array"
        }
      }
    },
    "iamUserPreference": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "IdpReference": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Preference": {
              "description": "Specifies users UI preferences   \n",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "description": "Holder for UI preferences\n",
      "title": "Iam:User Preference"
    },
    "iamUserPreferenceList": {
      "properties": {
        "Count": {
          "description": "The number of iamUserPreferences matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamUserPreferences matching your request.",
          "items": {
            "$ref": "#/definitions/iamUserPreference"
          },
          "type": "array"
        }
      }
    },
    "connectorAuthMessage": {
      "allOf": [
        {
          "properties": {
            "RemoteUserLocale": {
              "description": "The platform locale to assign user. A locale defines one or more organizations (domains) the user is allowed access, and access is limited to the organizations specified in the locale. \n",
              "type": "string"
            },
            "RemoteUserName": {
              "description": "User name passed to the platform for use in platform audit logs. \n",
              "type": "string"
            },
            "RemoteUserRoles": {
              "description": "List of roles to pass to the platform to validate the action against \n",
              "type": "string"
            },
            "RemoteUserSessionId": {
              "description": "Session Id passed to the platform for use in platforms auditing.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "RemoteUserLocale": {
              "description": "The platform locale to assign user. A locale defines one or more organizations (domains) the user is allowed access, and access is limited to the organizations specified in the locale. \n",
              "type": "string"
            },
            "RemoteUserName": {
              "description": "User name passed to the platform for use in platform audit logs. \n",
              "type": "string"
            },
            "RemoteUserRoles": {
              "description": "List of roles to pass to the platform to validate the action against \n",
              "type": "string"
            },
            "RemoteUserSessionId": {
              "description": "Session Id passed to the platform for use in platforms auditing.  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "RemoteUserLocale": {
              "description": "The platform locale to assign user. A locale defines one or more organizations (domains) the user is allowed access, and access is limited to the organizations specified in the locale. \n",
              "type": "string"
            },
            "RemoteUserName": {
              "description": "User name passed to the platform for use in platform audit logs. \n",
              "type": "string"
            },
            "RemoteUserRoles": {
              "description": "List of roles to pass to the platform to validate the action against \n",
              "type": "string"
            },
            "RemoteUserSessionId": {
              "description": "Session Id passed to the platform for use in platforms auditing.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Base message for connector messages that require authentication to be passed from cloud services.\n",
      "title": "Connector:Auth Message"
    },
    "terminalAuditLog": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "DeviceRegistration": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "EndTime": {
              "description": "Session end time \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "StartTime": {
              "description": "Session start time  \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "User": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Audit log of remote terminal user sessions\n",
      "title": "Terminal:Audit Log"
    },
    "terminalAuditLogList": {
      "properties": {
        "Count": {
          "description": "The number of terminalAuditLogs matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of terminalAuditLogs matching your request.",
          "items": {
            "$ref": "#/definitions/terminalAuditLog"
          },
          "type": "array"
        }
      }
    },
    "hyperflexAlarm": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Acknowledged": {
              "readOnly": true,
              "type": "boolean"
            },
            "Cluster": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Description": {
              "readOnly": true,
              "type": "string"
            },
            "Entity": {
              "$ref": "#/definitions/hyperflexManagedObjectReference",
              "readOnly": true
            },
            "EntityName": {
              "readOnly": true,
              "type": "string"
            },
            "Key": {
              "readOnly": true,
              "type": "string"
            },
            "Mor": {
              "$ref": "#/definitions/hyperflexManagedObjectReference",
              "readOnly": true
            },
            "Status": {
              "readOnly": true,
              "type": "string"
            },
            "TriggeredTime": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:Alarm"
    },
    "hyperflexAlarmList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexAlarms matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexAlarms matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexAlarm"
          },
          "type": "array"
        }
      }
    },
    "hyperflexCluster": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Alarm": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "ClusterName": {
              "readOnly": true,
              "type": "string"
            },
            "ClusterType": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ClusterUuid": {
              "readOnly": true,
              "type": "string"
            },
            "ComputeNodeCount": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ConvergedNodeCount": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "DeviceId": {
              "readOnly": true,
              "type": "string"
            },
            "FltAggr": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HxVersion": {
              "readOnly": true,
              "type": "string"
            },
            "HypervisorVersion": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Summary": {
              "$ref": "#/definitions/hyperflexSummary",
              "readOnly": true
            },
            "VmCount": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:Cluster"
    },
    "hyperflexClusterList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusters matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hyperflexClusters matching your request.",
          "items": {
            "$ref": "#/definitions/hyperflexCluster"
          },
          "type": "array"
        }
      }
    },
    "hyperflexIteratorString": {
      "allOf": [
        {
          "type": "object"
        },
        {
          "type": "object"
        }
      ],
      "title": "Hyperflex:Iterator String"
    },
    "hyperflexManagedObjectReference": {
      "allOf": [
        {
          "properties": {
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "Val": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "Val": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:Managed Object Reference"
    },
    "hyperflexStPlatformClusterHealingInfo": {
      "allOf": [
        {
          "properties": {
            "EstimatedCompletionTimeInSeconds": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "InProgress": {
              "readOnly": true,
              "type": "boolean"
            },
            "Messages": {
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "MessagesIterator": {
              "$ref": "#/definitions/hyperflexIteratorString",
              "readOnly": true
            },
            "MessagesSize": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "PercentComplete": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "EstimatedCompletionTimeInSeconds": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "InProgress": {
              "readOnly": true,
              "type": "boolean"
            },
            "Messages": {
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "MessagesIterator": {
              "$ref": "#/definitions/hyperflexIteratorString",
              "readOnly": true
            },
            "MessagesSize": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "PercentComplete": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:St Platform Cluster Healing Info"
    },
    "hyperflexStPlatformClusterResiliencyInfo": {
      "allOf": [
        {
          "properties": {
            "HddFailuresTolerable": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Messages": {
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "MessagesIterator": {
              "$ref": "#/definitions/hyperflexIteratorString",
              "readOnly": true
            },
            "MessagesSize": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NodeFailuresTolerable": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "SsdFailuresTolerable": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "State": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "HddFailuresTolerable": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Messages": {
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "MessagesIterator": {
              "$ref": "#/definitions/hyperflexIteratorString",
              "readOnly": true
            },
            "MessagesSize": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NodeFailuresTolerable": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "SsdFailuresTolerable": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "State": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:St Platform Cluster Resiliency Info"
    },
    "hyperflexSummary": {
      "allOf": [
        {
          "properties": {
            "ActiveNodes": {
              "readOnly": true,
              "type": "string"
            },
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Boottime": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ClusterAccessPolicy": {
              "readOnly": true,
              "type": "string"
            },
            "CompressionSavings": {
              "format": "double",
              "readOnly": true,
              "type": "number"
            },
            "DataReplicationCompliance": {
              "readOnly": true,
              "type": "string"
            },
            "DataReplicationFactor": {
              "readOnly": true,
              "type": "string"
            },
            "DeduplicationSavings": {
              "format": "double",
              "readOnly": true,
              "type": "number"
            },
            "Downtime": {
              "readOnly": true,
              "type": "string"
            },
            "FreeCapacity": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HealingInfo": {
              "$ref": "#/definitions/hyperflexStPlatformClusterHealingInfo",
              "readOnly": true
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "ResiliencyDetails": {
              "readOnly": true,
              "type": "string"
            },
            "ResiliencyDetailsSize": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ResiliencyInfo": {
              "$ref": "#/definitions/hyperflexStPlatformClusterResiliencyInfo",
              "readOnly": true
            },
            "SpaceStatus": {
              "readOnly": true,
              "type": "string"
            },
            "State": {
              "readOnly": true,
              "type": "string"
            },
            "TotalCapacity": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "TotalSavings": {
              "format": "double",
              "readOnly": true,
              "type": "number"
            },
            "Uptime": {
              "readOnly": true,
              "type": "string"
            },
            "UsedCapacity": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ActiveNodes": {
              "readOnly": true,
              "type": "string"
            },
            "Address": {
              "readOnly": true,
              "type": "string"
            },
            "Boottime": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ClusterAccessPolicy": {
              "readOnly": true,
              "type": "string"
            },
            "CompressionSavings": {
              "format": "double",
              "readOnly": true,
              "type": "number"
            },
            "DataReplicationCompliance": {
              "readOnly": true,
              "type": "string"
            },
            "DataReplicationFactor": {
              "readOnly": true,
              "type": "string"
            },
            "DeduplicationSavings": {
              "format": "double",
              "readOnly": true,
              "type": "number"
            },
            "Downtime": {
              "readOnly": true,
              "type": "string"
            },
            "FreeCapacity": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HealingInfo": {
              "$ref": "#/definitions/hyperflexStPlatformClusterHealingInfo",
              "readOnly": true
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "ResiliencyDetails": {
              "readOnly": true,
              "type": "string"
            },
            "ResiliencyDetailsSize": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ResiliencyInfo": {
              "$ref": "#/definitions/hyperflexStPlatformClusterResiliencyInfo",
              "readOnly": true
            },
            "SpaceStatus": {
              "readOnly": true,
              "type": "string"
            },
            "State": {
              "readOnly": true,
              "type": "string"
            },
            "TotalCapacity": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "TotalSavings": {
              "format": "double",
              "readOnly": true,
              "type": "number"
            },
            "Uptime": {
              "readOnly": true,
              "type": "string"
            },
            "UsedCapacity": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "title": "Hyperflex:Summary"
    },
    "searchSearchItem": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ],
      "description": "Used for retrieving different mos from external search engine.\n",
      "title": "Search:Search Item"
    },
    "searchSearchItemList": {
      "properties": {
        "Count": {
          "description": "The number of searchSearchItems matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of searchSearchItems matching your request.",
          "items": {
            "$ref": "#/definitions/searchSearchItem"
          },
          "type": "array"
        }
      }
    },
    "searchSuggestItem": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "CompleteMo": {
              "description": "Flag for returning complete objects that matched the global search criteria. \n",
              "type": "boolean",
              "x-createOnly": true
            },
            "Rawquery": {
              "description": "Additional filter parameters for global search. You can also specify odata select fields here. \n",
              "type": "string",
              "x-createOnly": true
            },
            "Skip": {
              "description": "Starting offset for the results to be returned from external search engine. \n",
              "format": "int64",
              "type": "integer",
              "x-createOnly": true
            },
            "SuggestTerm": {
              "description": "Main search term used for global search across all mos that has search enabled. \n",
              "type": "string",
              "x-createOnly": true
            },
            "Top": {
              "description": "Maximum number of results to be returned from external search engine. \n",
              "format": "int64",
              "type": "integer",
              "x-createOnly": true
            },
            "Type": {
              "description": "Mo object type filter. Search will be restricted only on the specified mo types.  Do not provide IndexMoTypes filter in the rawquery, if you specify values in this field.\n",
              "type": "string",
              "x-createOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Holds the properties to be used for global search from external search engine.\n",
      "title": "Search:Suggest Item"
    },
    "searchTagItem": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ],
      "description": "Used for retrieving tag summary across microservices from external search engine.\n",
      "title": "Search:Tag Item"
    },
    "searchTagItemList": {
      "properties": {
        "Count": {
          "description": "The number of searchTagItems matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of searchTagItems matching your request.",
          "items": {
            "$ref": "#/definitions/searchTagItem"
          },
          "type": "array"
        }
      }
    },
    "adapterExtEthInterface": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdapterUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "AdminState": {
              "readOnly": true,
              "type": "string"
            },
            "EpDn": {
              "readOnly": true,
              "type": "string"
            },
            "ExtEthInterfaceId": {
              "readOnly": true,
              "type": "string"
            },
            "InterfaceType": {
              "readOnly": true,
              "type": "string"
            },
            "MacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "PeerDn": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Physical port of a virtual interface card\n",
      "title": "Adapter:Ext Eth Interface"
    },
    "adapterExtEthInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterExtEthInterfaces matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of adapterExtEthInterfaces matching your request.",
          "items": {
            "$ref": "#/definitions/adapterExtEthInterface"
          },
          "type": "array"
        }
      }
    },
    "adapterHostEthInterface": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdapterUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "AdminState": {
              "readOnly": true,
              "type": "string"
            },
            "EpDn": {
              "readOnly": true,
              "type": "string"
            },
            "HostEthInterfaceId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "InterfaceType": {
              "readOnly": true,
              "type": "string"
            },
            "MacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "OriginalMacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "PciAddr": {
              "readOnly": true,
              "type": "string"
            },
            "PeerDn": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "VirtualizationPreference": {
              "readOnly": true,
              "type": "string"
            },
            "VnicDn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Physical / Virtual port of an adapter as seen by the host\n",
      "title": "Adapter:Host Eth Interface"
    },
    "adapterHostEthInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterHostEthInterfaces matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of adapterHostEthInterfaces matching your request.",
          "items": {
            "$ref": "#/definitions/adapterHostEthInterface"
          },
          "type": "array"
        }
      }
    },
    "adapterHostFcInterface": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdapterUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "AdminState": {
              "readOnly": true,
              "type": "string"
            },
            "EpDn": {
              "readOnly": true,
              "type": "string"
            },
            "HostFcInterfaceId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "OriginalWwnn": {
              "readOnly": true,
              "type": "string"
            },
            "OriginalWwpn": {
              "readOnly": true,
              "type": "string"
            },
            "PeerDn": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Wwnn": {
              "readOnly": true,
              "type": "string"
            },
            "Wwpn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Host facing fibre channel interface on a server adaptor\n",
      "title": "Adapter:Host Fc Interface"
    },
    "adapterHostFcInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterHostFcInterfaces matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of adapterHostFcInterfaces matching your request.",
          "items": {
            "$ref": "#/definitions/adapterHostFcInterface"
          },
          "type": "array"
        }
      }
    },
    "adapterHostIscsiInterface": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdapterUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "AdminState": {
              "readOnly": true,
              "type": "string"
            },
            "EpDn": {
              "readOnly": true,
              "type": "string"
            },
            "HostIscsiInterfaceId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "HostVisible": {
              "readOnly": true,
              "type": "string"
            },
            "MacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PeerDn": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Iscsi interface on a server adaptor\n",
      "title": "Adapter:Host Iscsi Interface"
    },
    "adapterHostIscsiInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterHostIscsiInterfaces matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of adapterHostIscsiInterfaces matching your request.",
          "items": {
            "$ref": "#/definitions/adapterHostIscsiInterface"
          },
          "type": "array"
        }
      }
    },
    "adapterUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdapterId": {
              "readOnly": true,
              "type": "string"
            },
            "BaseMacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "ComputeBlade": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Controller": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ExtEthIfs": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "HostEthIfs": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "HostFcIfs": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "HostIscsiIfs": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Integrated": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PartNumber": {
              "readOnly": true,
              "type": "string"
            },
            "PciSlot": {
              "readOnly": true,
              "type": "string"
            },
            "Power": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Thermal": {
              "readOnly": true,
              "type": "string"
            },
            "Vid": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The physical adapter present on a server\n",
      "title": "Adapter:Unit"
    },
    "adapterUnitList": {
      "properties": {
        "Count": {
          "description": "The number of adapterUnits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of adapterUnits matching your request.",
          "items": {
            "$ref": "#/definitions/adapterUnit"
          },
          "type": "array"
        }
      }
    },
    "biosUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "InitSeq": {
              "readOnly": true,
              "type": "string"
            },
            "InitTs": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RunningFirmware": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Bios Unit\n",
      "title": "Bios:Unit"
    },
    "biosUnitList": {
      "properties": {
        "Count": {
          "description": "The number of biosUnits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of biosUnits matching your request.",
          "items": {
            "$ref": "#/definitions/biosUnit"
          },
          "type": "array"
        }
      }
    },
    "computeBlade": {
      "allOf": [
        {
          "$ref": "#/definitions/computePhysical"
        },
        {
          "properties": {
            "Adapters": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Bmc": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Board": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ChassisId": {
              "readOnly": true,
              "type": "string"
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "GenericInventoryHolders": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "LocatorLed": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SlotId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "TopSystem": {
              "$ref": "#/definitions/moMoRef"
            }
          },
          "type": "object"
        }
      ],
      "description": "Server which is housed in a chassis and shares some of the hardware with other servers in the chassis\n",
      "title": "Compute:Blade"
    },
    "computeBladeList": {
      "properties": {
        "Count": {
          "description": "The number of computeBlades matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of computeBlades matching your request.",
          "items": {
            "$ref": "#/definitions/computeBlade"
          },
          "type": "array"
        }
      }
    },
    "computeBoard": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "BoardId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ComputeBlade": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "CpuTypeController": {
              "readOnly": true,
              "type": "string"
            },
            "GraphicsCards": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "MemoryArrays": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "Processors": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SecurityUnits": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "StorageControllers": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "StorageFlexFlashControllers": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "StorageFlexUtilControllers": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Mother board of a server\n",
      "title": "Compute:Board"
    },
    "computeBoardList": {
      "properties": {
        "Count": {
          "description": "The number of computeBoards matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of computeBoards matching your request.",
          "items": {
            "$ref": "#/definitions/computeBoard"
          },
          "type": "array"
        }
      }
    },
    "computePhysicalSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/viewsView"
        },
        {
          "properties": {
            "AdminPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ChassisId": {
              "readOnly": true,
              "type": "string"
            },
            "CpuCapacity": {
              "description": "The aggregate speed of the CPUs in this blade \n",
              "format": "float",
              "readOnly": true,
              "type": "number"
            },
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "FaultSummary": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Firmware": {
              "description": "The firmware version of the CIMC for this blade \n",
              "readOnly": true,
              "type": "string"
            },
            "Ipv4Address": {
              "description": "The IPv4 address which is assigned to the management interface on this blade \n",
              "readOnly": true,
              "type": "string"
            },
            "KvmIpAddresses": {
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "readOnly": true,
              "type": "array"
            },
            "MemorySpeed": {
              "readOnly": true,
              "type": "string"
            },
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "The name of the UCSFI cluster or CIMC \n",
              "readOnly": true,
              "type": "string"
            },
            "NumAdaptors": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpuCoresEnabled": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCpus": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEthHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcHostInterfaces": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumThreads": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "ServerId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ServiceProfile": {
              "readOnly": true,
              "type": "string"
            },
            "SlotId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "SourceObjectType": {
              "description": "Specifies the source object type for View MO \n",
              "readOnly": true,
              "type": "string"
            },
            "TotalMemory": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Consolidated view of Blades and RackUnits.\n",
      "title": "Compute:Physical Summary"
    },
    "computePhysicalSummaryList": {
      "properties": {
        "Count": {
          "description": "The number of computePhysicalSummaries matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of computePhysicalSummaries matching your request.",
          "items": {
            "$ref": "#/definitions/computePhysicalSummary"
          },
          "type": "array"
        }
      }
    },
    "computeRackUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/computePhysical"
        },
        {
          "properties": {
            "Adapters": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Biosunits": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Bmc": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Board": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Fanmodules": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "GenericInventoryHolders": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "LocatorLed": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Psus": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SasExpanders": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "ServerId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "TopSystem": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Rack-mounted server\n",
      "title": "Compute:Rack Unit"
    },
    "computeRackUnitList": {
      "properties": {
        "Count": {
          "description": "The number of computeRackUnits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of computeRackUnits matching your request.",
          "items": {
            "$ref": "#/definitions/computeRackUnit"
          },
          "type": "array"
        }
      }
    },
    "equipmentChassis": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "Blades": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Fanmodules": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Ioms": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Psus": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Sasexpanders": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Siocs": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "A physical holder housing blade servers\n",
      "title": "Equipment:Chassis"
    },
    "equipmentChassisList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentChasses matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentChasses matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentChassis"
          },
          "type": "array"
        }
      }
    },
    "equipmentDeviceSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/viewsView"
        },
        {
          "properties": {
            "Dn": {
              "description": "The distinguished name for the Network Element \n",
              "readOnly": true,
              "type": "string"
            },
            "Model": {
              "description": "The model number for the Network Element \n",
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Serial": {
              "description": "The serial number for the Network Element \n",
              "readOnly": true,
              "type": "string"
            },
            "SourceObjectType": {
              "description": "Specifies the source object type for View MO  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Aggregation of properties pertaining to different inventory MOs.\n",
      "title": "Equipment:Device Summary"
    },
    "equipmentDeviceSummaryList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentDeviceSummaries matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentDeviceSummaries matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentDeviceSummary"
          },
          "type": "array"
        }
      }
    },
    "equipmentFan": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "EquipmentFanModule": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Fan in a Fabric Interconnect / Chassis / RackUnit\n",
      "title": "Equipment:Fan"
    },
    "equipmentFanList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentFans matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentFans matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentFan"
          },
          "type": "array"
        }
      }
    },
    "equipmentFanModule": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Fans": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "NetworkElement": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Moudule housing one or more fans\n",
      "title": "Equipment:Fan Module"
    },
    "equipmentFanModuleList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentFanModules matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentFanModules matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentFanModule"
          },
          "type": "array"
        }
      }
    },
    "equipmentFex": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Fabric Extender which can mutiplex traffic from the host facing ports\n",
      "title": "Equipment:Fex"
    },
    "equipmentFexList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentFexes matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentFexes matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentFex"
          },
          "type": "array"
        }
      }
    },
    "equipmentIoCard": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "EquipmentChassis": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "I/O module on a chassis which multiplexes traffic from blade servers\n",
      "title": "Equipment:Io Card"
    },
    "equipmentIoCardList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentIoCards matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentIoCards matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentIoCard"
          },
          "type": "array"
        }
      }
    },
    "equipmentLocatorLed": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Color": {
              "readOnly": true,
              "type": "string"
            },
            "ComputeBlade": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "StoragePhysicalDisk": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Locator Led of an Equipment like Rack, Disk etc.\n",
      "title": "Equipment:Locator Led"
    },
    "equipmentLocatorLedList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentLocatorLeds matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentLocatorLeds matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentLocatorLed"
          },
          "type": "array"
        }
      }
    },
    "equipmentPsu": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "NetworkElement": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Equipment:Psu"
    },
    "equipmentPsuList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentPsus matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentPsus matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentPsu"
          },
          "type": "array"
        }
      }
    },
    "equipmentSwitchCard": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "Description": {
              "readOnly": true,
              "type": "string"
            },
            "NetworkElement": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "NumPorts": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "PortGroups": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SlotId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "State": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Fixed / Removable module on a Fabric Interconnect / Switch\n",
      "title": "Equipment:Switch Card"
    },
    "equipmentSwitchCardList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentSwitchCards matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentSwitchCards matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentSwitchCard"
          },
          "type": "array"
        }
      }
    },
    "equipmentSystemIoController": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "EquipmentChassis": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "title": "Equipment:System Io Controller"
    },
    "equipmentSystemIoControllerList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentSystemIoControllers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of equipmentSystemIoControllers matching your request.",
          "items": {
            "$ref": "#/definitions/equipmentSystemIoController"
          },
          "type": "array"
        }
      }
    },
    "etherPhysicalPort": {
      "allOf": [
        {
          "$ref": "#/definitions/portPhysical"
        },
        {
          "properties": {
            "MacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "PortGroup": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "PortSubGroup": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "TransceiverType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Physical ethernet port present on a FI\n",
      "title": "Ether:Physical Port"
    },
    "etherPhysicalPortList": {
      "properties": {
        "Count": {
          "description": "The number of etherPhysicalPorts matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of etherPhysicalPorts matching your request.",
          "items": {
            "$ref": "#/definitions/etherPhysicalPort"
          },
          "type": "array"
        }
      }
    },
    "faultInstance": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Acknowledged": {
              "readOnly": true,
              "type": "string"
            },
            "AffectedDn": {
              "readOnly": true,
              "type": "string"
            },
            "AffectedMoId": {
              "readOnly": true,
              "type": "string"
            },
            "AffectedMoType": {
              "readOnly": true,
              "type": "string"
            },
            "AncestorMoId": {
              "readOnly": true,
              "type": "string"
            },
            "AncestorMoType": {
              "readOnly": true,
              "type": "string"
            },
            "Code": {
              "readOnly": true,
              "type": "string"
            },
            "CreationTime": {
              "readOnly": true,
              "type": "string"
            },
            "Description": {
              "readOnly": true,
              "type": "string"
            },
            "LastTransitionTime": {
              "readOnly": true,
              "type": "string"
            },
            "NumOccurrences": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OriginalSeverity": {
              "readOnly": true,
              "type": "string"
            },
            "PreviousSeverity": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Rule": {
              "readOnly": true,
              "type": "string"
            },
            "Severity": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents an anomaly on an endpoint\n",
      "title": "Fault:Instance"
    },
    "faultInstanceList": {
      "properties": {
        "Count": {
          "description": "The number of faultInstances matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of faultInstances matching your request.",
          "items": {
            "$ref": "#/definitions/faultInstance"
          },
          "type": "array"
        }
      }
    },
    "fcPhysicalPort": {
      "allOf": [
        {
          "$ref": "#/definitions/portPhysical"
        },
        {
          "properties": {
            "PortGroup": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "TransceiverType": {
              "readOnly": true,
              "type": "string"
            },
            "Wwn": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Physical fibre channel port present on a FI\n",
      "title": "Fc:Physical Port"
    },
    "fcPhysicalPortList": {
      "properties": {
        "Count": {
          "description": "The number of fcPhysicalPorts matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of fcPhysicalPorts matching your request.",
          "items": {
            "$ref": "#/definitions/fcPhysicalPort"
          },
          "type": "array"
        }
      }
    },
    "firmwareRunningFirmware": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "BiosUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Component": {
              "description": "represents the kind of firmware - boot-booloader/system/kernel \n",
              "readOnly": true,
              "type": "string"
            },
            "ManagementController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "NetworkElements": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "PackageVersion": {
              "description": "represents the packageVersion to which the firmware belongs to \n",
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "StorageController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "StoragePhysicalDisk": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "Version": {
              "description": "represents the version of the firmware  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Running Firmware on an endpoint\n",
      "title": "Firmware:Running Firmware"
    },
    "firmwareRunningFirmwareList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareRunningFirmwares matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of firmwareRunningFirmwares matching your request.",
          "items": {
            "$ref": "#/definitions/firmwareRunningFirmware"
          },
          "type": "array"
        }
      }
    },
    "graphicsCard": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "CardId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "DeviceId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ExpanderSlot": {
              "readOnly": true,
              "type": "string"
            },
            "FirmwareVersion": {
              "readOnly": true,
              "type": "string"
            },
            "GraphicsControllers": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Mode": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "PciAddr": {
              "readOnly": true,
              "type": "string"
            },
            "PciAddrList": {
              "readOnly": true,
              "type": "string"
            },
            "PciSlot": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Graphics Card\n",
      "title": "Graphics:Card"
    },
    "graphicsCardList": {
      "properties": {
        "Count": {
          "description": "The number of graphicsCards matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of graphicsCards matching your request.",
          "items": {
            "$ref": "#/definitions/graphicsCard"
          },
          "type": "array"
        }
      }
    },
    "graphicsController": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ControllerId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "GraphicsCard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "PciAddr": {
              "readOnly": true,
              "type": "string"
            },
            "PciSlot": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Graphics Controller\n",
      "title": "Graphics:Controller"
    },
    "graphicsControllerList": {
      "properties": {
        "Count": {
          "description": "The number of graphicsControllers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of graphicsControllers matching your request.",
          "items": {
            "$ref": "#/definitions/graphicsController"
          },
          "type": "array"
        }
      }
    },
    "inventoryDeviceInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "EventCounter": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "EventCounterEnabled": {
              "readOnly": true,
              "type": "boolean"
            },
            "JobInfo": {
              "items": {
                "$ref": "#/definitions/inventoryJobInfo"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Information pertaining to a Registered Device in starship which is pertinent to Inventory Microservice.\n",
      "title": "Inventory:Device Info"
    },
    "inventoryDeviceInfoList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryDeviceInfos matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of inventoryDeviceInfos matching your request.",
          "items": {
            "$ref": "#/definitions/inventoryDeviceInfo"
          },
          "type": "array"
        }
      }
    },
    "inventoryDnMoBinding": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "TargetMoId": {
              "readOnly": true,
              "type": "string"
            },
            "TargetMoType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Provides a binding between a starship MO and a UCSM Mo which has a DN\n",
      "title": "Inventory:Dn Mo Binding"
    },
    "inventoryDnMoBindingList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryDnMoBindings matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of inventoryDnMoBindings matching your request.",
          "items": {
            "$ref": "#/definitions/inventoryDnMoBinding"
          },
          "type": "array"
        }
      }
    },
    "inventoryGenericInventory": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "InventoryGenericInventoryHolder": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Key": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "Value": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Any inventory which is represented as a key / value pair. Example - moInvKv in UCSM representing OS tools running on ESX\n",
      "title": "Inventory:Generic Inventory"
    },
    "inventoryGenericInventoryHolder": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "ComputeBlade": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Endpoint": {
              "readOnly": true,
              "type": "string"
            },
            "GenericInventory": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "A container class for generic inventory\n",
      "title": "Inventory:Generic Inventory Holder"
    },
    "inventoryGenericInventoryHolderList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryGenericInventoryHolders matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of inventoryGenericInventoryHolders matching your request.",
          "items": {
            "$ref": "#/definitions/inventoryGenericInventoryHolder"
          },
          "type": "array"
        }
      }
    },
    "inventoryGenericInventoryList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryGenericInventories matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of inventoryGenericInventories matching your request.",
          "items": {
            "$ref": "#/definitions/inventoryGenericInventory"
          },
          "type": "array"
        }
      }
    },
    "inventoryJobInfo": {
      "allOf": [
        {
          "properties": {
            "ExecutionStatus": {
              "default": "Unknown",
              "enum": [
                "Unknown",
                "Scheduled",
                "Completed",
                "Error"
              ],
              "readOnly": true,
              "type": "string"
            },
            "JobName": {
              "readOnly": true,
              "type": "string"
            },
            "LastProcessedTime": {
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "LastScheduledTime": {
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "Properties": {
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Regex": {
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Complex type representing the Job Information of a device\n",
      "title": "Inventory:Job Info"
    },
    "lsServiceProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "AssignState": {
              "readOnly": true,
              "type": "string"
            },
            "AssocState": {
              "readOnly": true,
              "type": "string"
            },
            "AssociatedServer": {
              "readOnly": true,
              "type": "string"
            },
            "ConfigState": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Logical Profile that can be associated to a physical server\n",
      "title": "Ls:Service Profile"
    },
    "lsServiceProfileList": {
      "properties": {
        "Count": {
          "description": "The number of lsServiceProfiles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of lsServiceProfiles matching your request.",
          "items": {
            "$ref": "#/definitions/lsServiceProfile"
          },
          "type": "array"
        }
      }
    },
    "managementController": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "AdapterUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ManagementInterfaces": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "NetworkElement": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RunningFirmware": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "StorageSasExpander": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "TopSystem": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Provides management controls access to an endpoint\n",
      "title": "Management:Controller"
    },
    "managementControllerList": {
      "properties": {
        "Count": {
          "description": "The number of managementControllers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of managementControllers matching your request.",
          "items": {
            "$ref": "#/definitions/managementController"
          },
          "type": "array"
        }
      }
    },
    "managementEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "EntityId": {
              "readOnly": true,
              "type": "string"
            },
            "Leadership": {
              "readOnly": true,
              "type": "string"
            },
            "NetworkElement": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents the UCSM managing instance - A / B\n",
      "title": "Management:Entity"
    },
    "managementEntityList": {
      "properties": {
        "Count": {
          "description": "The number of managementEntities matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of managementEntities matching your request.",
          "items": {
            "$ref": "#/definitions/managementEntity"
          },
          "type": "array"
        }
      }
    },
    "managementInterface": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "Gateway": {
              "readOnly": true,
              "type": "string"
            },
            "IpAddress": {
              "readOnly": true,
              "type": "string"
            },
            "MacAddress": {
              "readOnly": true,
              "type": "string"
            },
            "ManagementController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Mask": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Interface that provides access to the management controller\n",
      "title": "Management:Interface"
    },
    "managementInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of managementInterfaces matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of managementInterfaces matching your request.",
          "items": {
            "$ref": "#/definitions/managementInterface"
          },
          "type": "array"
        }
      }
    },
    "memoryArray": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ArrayId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "CpuId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "CurrentCapacity": {
              "readOnly": true,
              "type": "string"
            },
            "ErrorCorrection": {
              "readOnly": true,
              "type": "string"
            },
            "MaxCapacity": {
              "readOnly": true,
              "type": "string"
            },
            "MaxDevices": {
              "readOnly": true,
              "type": "string"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Units": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Holder housing multiple memory units\n",
      "title": "Memory:Array"
    },
    "memoryArrayList": {
      "properties": {
        "Count": {
          "description": "The number of memoryArrays matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of memoryArrays matching your request.",
          "items": {
            "$ref": "#/definitions/memoryArray"
          },
          "type": "array"
        }
      }
    },
    "memoryUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminState": {
              "readOnly": true,
              "type": "string"
            },
            "ArrayId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Bank": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Capacity": {
              "readOnly": true,
              "type": "string"
            },
            "Clock": {
              "readOnly": true,
              "type": "string"
            },
            "FormFactor": {
              "readOnly": true,
              "type": "string"
            },
            "Latency": {
              "readOnly": true,
              "type": "string"
            },
            "Location": {
              "readOnly": true,
              "type": "string"
            },
            "MemoryArray": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "MemoryId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Set": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Speed": {
              "readOnly": true,
              "type": "string"
            },
            "Thermal": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "Visibility": {
              "readOnly": true,
              "type": "string"
            },
            "Width": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents a DIMM on a server\n",
      "title": "Memory:Unit"
    },
    "memoryUnitList": {
      "properties": {
        "Count": {
          "description": "The number of memoryUnits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of memoryUnits matching your request.",
          "items": {
            "$ref": "#/definitions/memoryUnit"
          },
          "type": "array"
        }
      }
    },
    "networkElement": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AdminInbandInterfaceState": {
              "readOnly": true,
              "type": "string"
            },
            "Cards": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Fanmodules": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "FaultSummary": {
              "format": "int64",
              "type": "integer"
            },
            "InbandIpAddress": {
              "readOnly": true,
              "type": "string"
            },
            "InbandIpGateway": {
              "readOnly": true,
              "type": "string"
            },
            "InbandIpMask": {
              "readOnly": true,
              "type": "string"
            },
            "InbandVlan": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "ManagementContoller": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ManagementEntity": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OutOfBandIpAddress": {
              "readOnly": true,
              "type": "string"
            },
            "OutOfBandIpGateway": {
              "readOnly": true,
              "type": "string"
            },
            "OutOfBandIpMask": {
              "readOnly": true,
              "type": "string"
            },
            "OutOfBandMac": {
              "readOnly": true,
              "type": "string"
            },
            "Psus": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SwitchId": {
              "readOnly": true,
              "type": "string"
            },
            "TopSystem": {
              "$ref": "#/definitions/moMoRef"
            },
            "UcsmRunningFirmware": {
              "$ref": "#/definitions/moMoRef"
            }
          },
          "type": "object"
        }
      ],
      "description": "Fabric Interconnect of a UCS\n",
      "title": "Network:Element"
    },
    "networkElementList": {
      "properties": {
        "Count": {
          "description": "The number of networkElements matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of networkElements matching your request.",
          "items": {
            "$ref": "#/definitions/networkElement"
          },
          "type": "array"
        }
      }
    },
    "networkElementSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/viewsView"
        },
        {
          "properties": {
            "AdminInbandInterfaceState": {
              "readOnly": true,
              "type": "string"
            },
            "DeviceMoId": {
              "readOnly": true,
              "type": "string"
            },
            "Dn": {
              "readOnly": true,
              "type": "string"
            },
            "FaultSummary": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Firmware": {
              "description": "Running firmware information \n",
              "readOnly": true,
              "type": "string"
            },
            "InbandIpAddress": {
              "readOnly": true,
              "type": "string"
            },
            "InbandIpGateway": {
              "readOnly": true,
              "type": "string"
            },
            "InbandIpMask": {
              "readOnly": true,
              "type": "string"
            },
            "InbandVlan": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Ipv4Address": {
              "readOnly": true,
              "type": "string"
            },
            "Leadership": {
              "description": "Role of the Fi - primary or subordinate \n",
              "readOnly": true,
              "type": "string"
            },
            "ManagementEntity": {
              "description": "The MoId of entity to associated to FI \n",
              "readOnly": true,
              "type": "string"
            },
            "Model": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "NumEtherPorts": {
              "description": "Total number of Ether ports \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEtherPortsConfigured": {
              "description": "Total number of configured Ether ports \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumEtherPortsLinkUp": {
              "description": "Total number of Ether ports which are UP \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumExpansionModules": {
              "description": "Total number of expansion modules \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcPorts": {
              "description": "Total number of FC ports \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcPortsConfigured": {
              "description": "Total number of configured FC ports \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumFcPortsLinkUp": {
              "description": "Total number of FC ports which are UP \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "OutOfBandIpAddress": {
              "readOnly": true,
              "type": "string"
            },
            "OutOfBandIpGateway": {
              "readOnly": true,
              "type": "string"
            },
            "OutOfBandIpMask": {
              "readOnly": true,
              "type": "string"
            },
            "OutOfBandMac": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Revision": {
              "readOnly": true,
              "type": "string"
            },
            "Rn": {
              "readOnly": true,
              "type": "string"
            },
            "Serial": {
              "readOnly": true,
              "type": "string"
            },
            "SourceObjectType": {
              "description": "Specifies the source object type for View MO \n",
              "readOnly": true,
              "type": "string"
            },
            "SwitchId": {
              "readOnly": true,
              "type": "string"
            },
            "Vendor": {
              "readOnly": true,
              "type": "string"
            },
            "Version": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "View MO which aggregates information pertaining to a network element from mutiple MOs\n",
      "title": "Network:Element Summary"
    },
    "networkElementSummaryList": {
      "properties": {
        "Count": {
          "description": "The number of networkElementSummaries matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of networkElementSummaries matching your request.",
          "items": {
            "$ref": "#/definitions/networkElementSummary"
          },
          "type": "array"
        }
      }
    },
    "portGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "EquipmentSwitchCard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "EthernetPorts": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "FcPorts": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SubGroups": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Transport": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Holder for multiple ports. A switch card will have one or more port groups\n",
      "title": "Port:Group"
    },
    "portGroupList": {
      "properties": {
        "Count": {
          "description": "The number of portGroups matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of portGroups matching your request.",
          "items": {
            "$ref": "#/definitions/portGroup"
          },
          "type": "array"
        }
      }
    },
    "portPhysical": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Role": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Abstract super class for all ports\n",
      "title": "Port:Physical"
    },
    "portSubGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "EthernetPorts": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "PortGroup": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Transport": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Holder for multiple ports within a portGroup. Represents a break-out port group on the Fabric Interconnect\n",
      "title": "Port:Sub Group"
    },
    "portSubGroupList": {
      "properties": {
        "Count": {
          "description": "The number of portSubGroups matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of portSubGroups matching your request.",
          "items": {
            "$ref": "#/definitions/portSubGroup"
          },
          "type": "array"
        }
      }
    },
    "processorUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "Architecture": {
              "readOnly": true,
              "type": "string"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "NumCores": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "NumCoresEnabled": {
              "readOnly": true,
              "type": "string"
            },
            "NumThreads": {
              "readOnly": true,
              "type": "string"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ProcessorId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SocketDesignation": {
              "readOnly": true,
              "type": "string"
            },
            "Speed": {
              "format": "float",
              "readOnly": true,
              "type": "number"
            },
            "Stepping": {
              "readOnly": true,
              "type": "string"
            },
            "Thermal": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "CPU of a server\n",
      "title": "Processor:Unit"
    },
    "processorUnitList": {
      "properties": {
        "Count": {
          "description": "The number of processorUnits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of processorUnits matching your request.",
          "items": {
            "$ref": "#/definitions/processorUnit"
          },
          "type": "array"
        }
      }
    },
    "securityUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PartNumber": {
              "readOnly": true,
              "type": "string"
            },
            "PciSlot": {
              "readOnly": true,
              "type": "string"
            },
            "Power": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Thermal": {
              "readOnly": true,
              "type": "string"
            },
            "UnitId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Vid": {
              "readOnly": true,
              "type": "string"
            },
            "Voltage": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Security Unit\n",
      "title": "Security:Unit"
    },
    "securityUnitList": {
      "properties": {
        "Count": {
          "description": "The number of securityUnits matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of securityUnits matching your request.",
          "items": {
            "$ref": "#/definitions/securityUnit"
          },
          "type": "array"
        }
      }
    },
    "storageController": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ControllerFlags": {
              "readOnly": true,
              "type": "string"
            },
            "ControllerId": {
              "readOnly": true,
              "type": "string"
            },
            "ControllerStatus": {
              "readOnly": true,
              "type": "string"
            },
            "HwRevision": {
              "readOnly": true,
              "type": "string"
            },
            "OobInterfaceSupported": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PciAddr": {
              "readOnly": true,
              "type": "string"
            },
            "PciSlot": {
              "readOnly": true,
              "type": "string"
            },
            "PhysicalDisks": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RaidSupport": {
              "readOnly": true,
              "type": "string"
            },
            "RebuildRate": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RunningFirmware": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "SelfEncryptEnabled": {
              "type": "string"
            },
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "VirtualDrives": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Storage Controller\n",
      "title": "Storage:Controller"
    },
    "storageControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storageControllers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageControllers matching your request.",
          "items": {
            "$ref": "#/definitions/storageController"
          },
          "type": "array"
        }
      }
    },
    "storageFlexFlashController": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ControllerState": {
              "readOnly": true,
              "type": "string"
            },
            "FfControllerId": {
              "readOnly": true,
              "type": "string"
            },
            "FlexFlashPhysicalDrives": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Storage Flex Flash Controller\n",
      "title": "Storage:Flex Flash Controller"
    },
    "storageFlexFlashControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexFlashControllers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageFlexFlashControllers matching your request.",
          "items": {
            "$ref": "#/definitions/storageFlexFlashController"
          },
          "type": "array"
        }
      }
    },
    "storageFlexFlashPhysicalDrive": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "CardStatus": {
              "type": "string"
            },
            "CardType": {
              "type": "string"
            },
            "OemId": {
              "type": "string"
            },
            "PdStatus": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "StorageFlexFlashController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Physical Drive repersenting a SD Card\n",
      "title": "Storage:Flex Flash Physical Drive"
    },
    "storageFlexFlashPhysicalDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexFlashPhysicalDrives matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageFlexFlashPhysicalDrives matching your request.",
          "items": {
            "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
          },
          "type": "array"
        }
      }
    },
    "storageFlexUtilController": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "ComputeBoard": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ControllerName": {
              "type": "string"
            },
            "ControllerStatus": {
              "type": "string"
            },
            "FfControllerId": {
              "type": "string"
            },
            "FlexUtilVirtualDrives": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "InternalState": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Storage Flex Util Adapter\n",
      "title": "Storage:Flex Util Controller"
    },
    "storageFlexUtilControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexUtilControllers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageFlexUtilControllers matching your request.",
          "items": {
            "$ref": "#/definitions/storageFlexUtilController"
          },
          "type": "array"
        }
      }
    },
    "storageFlexUtilVirtualDrive": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "DriveStatus": {
              "type": "string"
            },
            "DriveType": {
              "type": "string"
            },
            "PartitionId": {
              "type": "string"
            },
            "PartitionName": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ResidentImage": {
              "type": "string"
            },
            "Size": {
              "type": "string"
            },
            "StorageFlexUtilController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "VirtualDrive": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Storage Flex Util Virtual Drive\n",
      "title": "Storage:Flex Util Virtual Drive"
    },
    "storageFlexUtilVirtualDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexUtilVirtualDrives matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageFlexUtilVirtualDrives matching your request.",
          "items": {
            "$ref": "#/definitions/storageFlexUtilVirtualDrive"
          },
          "type": "array"
        }
      }
    },
    "storagePhysicalDisk": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "BlockSize": {
              "readOnly": true,
              "type": "string"
            },
            "Bootable": {
              "readOnly": true,
              "type": "string"
            },
            "ConfigurationCheckpoint": {
              "readOnly": true,
              "type": "string"
            },
            "ConfigurationState": {
              "readOnly": true,
              "type": "string"
            },
            "DiscoveredPath": {
              "readOnly": true,
              "type": "string"
            },
            "DiskId": {
              "readOnly": true,
              "type": "string"
            },
            "DiskState": {
              "readOnly": true,
              "type": "string"
            },
            "DriveFirmware": {
              "type": "string"
            },
            "DriveState": {
              "readOnly": true,
              "type": "string"
            },
            "FdeCapable": {
              "type": "string"
            },
            "LinkSpeed": {
              "readOnly": true,
              "type": "string"
            },
            "LinkState": {
              "readOnly": true,
              "type": "string"
            },
            "LocatorLed": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "NumBlocks": {
              "readOnly": true,
              "type": "string"
            },
            "OperPowerState": {
              "readOnly": true,
              "type": "string"
            },
            "OperQualifierReason": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PhysicalBlockSize": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "Protocol": {
              "readOnly": true,
              "type": "string"
            },
            "RawSize": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "RunningFirmware": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Size": {
              "readOnly": true,
              "type": "string"
            },
            "StorageController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Thermal": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "VariantType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Physical Disk on a server\n",
      "title": "Storage:Physical Disk"
    },
    "storagePhysicalDiskList": {
      "properties": {
        "Count": {
          "description": "The number of storagePhysicalDisks matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storagePhysicalDisks matching your request.",
          "items": {
            "$ref": "#/definitions/storagePhysicalDisk"
          },
          "type": "array"
        }
      }
    },
    "storagePhysicalDiskUsage": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "NumberOfBlocks": {
              "readOnly": true,
              "type": "string"
            },
            "PhysicalDrive": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Span": {
              "readOnly": true,
              "type": "string"
            },
            "StartingBlock": {
              "readOnly": true,
              "type": "string"
            },
            "State": {
              "readOnly": true,
              "type": "string"
            },
            "VirtualDrive": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Has usage map between physical disks and virtual drives\n",
      "title": "Storage:Physical Disk Usage"
    },
    "storagePhysicalDiskUsageList": {
      "properties": {
        "Count": {
          "description": "The number of storagePhysicalDiskUsages matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storagePhysicalDiskUsages matching your request.",
          "items": {
            "$ref": "#/definitions/storagePhysicalDiskUsage"
          },
          "type": "array"
        }
      }
    },
    "storageSasExpander": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "ComputeRackUnit": {
              "$ref": "#/definitions/moMoRef"
            },
            "Controller": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ExpanderId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "Name": {
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "SAS Expander\n",
      "title": "Storage:Sas Expander"
    },
    "storageSasExpanderList": {
      "properties": {
        "Count": {
          "description": "The number of storageSasExpanders matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageSasExpanders matching your request.",
          "items": {
            "$ref": "#/definitions/storageSasExpander"
          },
          "type": "array"
        }
      }
    },
    "storageVdMemberEp": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "OperQualifierReason": {
              "readOnly": true,
              "type": "string"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Role": {
              "readOnly": true,
              "type": "string"
            },
            "SpanId": {
              "readOnly": true,
              "type": "string"
            },
            "StorageVirtualDrive": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "VdMemberEpId": {
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "Reference to LocalDisk to build up a VirtualDrive\n",
      "title": "Storage:Vd Member Ep"
    },
    "storageVdMemberEpList": {
      "properties": {
        "Count": {
          "description": "The number of storageVdMemberEps matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageVdMemberEps matching your request.",
          "items": {
            "$ref": "#/definitions/storageVdMemberEp"
          },
          "type": "array"
        }
      }
    },
    "storageVirtualDrive": {
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "properties": {
            "AccessPolicy": {
              "readOnly": true,
              "type": "string"
            },
            "ActualWriteCachePolicy": {
              "readOnly": true,
              "type": "string"
            },
            "AvailableSize": {
              "readOnly": true,
              "type": "string"
            },
            "BlockSize": {
              "readOnly": true,
              "type": "string"
            },
            "Bootable": {
              "readOnly": true,
              "type": "string"
            },
            "ConfigState": {
              "readOnly": true,
              "type": "string"
            },
            "ConfiguredWriteCachePolicy": {
              "readOnly": true,
              "type": "string"
            },
            "ConnectionProtocol": {
              "readOnly": true,
              "type": "string"
            },
            "DriveCache": {
              "readOnly": true,
              "type": "string"
            },
            "DriveSecurity": {
              "readOnly": true,
              "type": "string"
            },
            "DriveState": {
              "readOnly": true,
              "type": "string"
            },
            "IoPolicy": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "NumBlocks": {
              "readOnly": true,
              "type": "string"
            },
            "OperState": {
              "readOnly": true,
              "type": "string"
            },
            "Operability": {
              "readOnly": true,
              "type": "string"
            },
            "PhysicalBlockSize": {
              "readOnly": true,
              "type": "string"
            },
            "PhysicalDiskUsages": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Presence": {
              "readOnly": true,
              "type": "string"
            },
            "ReadPolicy": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SecurityFlags": {
              "readOnly": true,
              "type": "string"
            },
            "Size": {
              "readOnly": true,
              "type": "string"
            },
            "StorageController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "StripSize": {
              "readOnly": true,
              "type": "string"
            },
            "Type": {
              "readOnly": true,
              "type": "string"
            },
            "Uuid": {
              "readOnly": true,
              "type": "string"
            },
            "VdMemberEps": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "VendorUuid": {
              "readOnly": true,
              "type": "string"
            },
            "VirtualDriveId": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A Virtual Disk or LUN\n",
      "title": "Storage:Virtual Drive"
    },
    "storageVirtualDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageVirtualDrives matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageVirtualDrives matching your request.",
          "items": {
            "$ref": "#/definitions/storageVirtualDrive"
          },
          "type": "array"
        }
      }
    },
    "topSystem": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "ComputeBlades": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "ComputeRackUnits": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Ipv4Address": {
              "readOnly": true,
              "type": "string"
            },
            "Ipv6Address": {
              "readOnly": true,
              "type": "string"
            },
            "ManagementController": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Mode": {
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "readOnly": true,
              "type": "string"
            },
            "NetworkElements": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Root container for all UCSM / CIMC MOs\n",
      "title": "Top:System"
    },
    "topSystemList": {
      "properties": {
        "Count": {
          "description": "The number of topSystems matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of topSystems matching your request.",
          "items": {
            "$ref": "#/definitions/topSystem"
          },
          "type": "array"
        }
      }
    },
    "deviceinfoSerialNumberInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "CoveredProductLineEndDate": {
              "readOnly": true,
              "type": "string"
            },
            "CustomerAddress": {
              "readOnly": true,
              "type": "string"
            },
            "CustomerCity": {
              "readOnly": true,
              "type": "string"
            },
            "CustomerCountry": {
              "readOnly": true,
              "type": "string"
            },
            "CustomerName": {
              "readOnly": true,
              "type": "string"
            },
            "CustomerProvince": {
              "readOnly": true,
              "type": "string"
            },
            "IsValid": {
              "readOnly": true,
              "type": "boolean"
            },
            "ItemDescription": {
              "readOnly": true,
              "type": "string"
            },
            "OrderablePid": {
              "readOnly": true,
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "SerialNumber": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceContractNumber": {
              "readOnly": true,
              "type": "string"
            },
            "ServiceLineDescr": {
              "readOnly": true,
              "type": "string"
            },
            "WarrantyEndDate": {
              "readOnly": true,
              "type": "string"
            },
            "WarrantyType": {
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Deviceinfo:Serial Number Info"
    },
    "deviceinfoSerialNumberInfoList": {
      "properties": {
        "Count": {
          "description": "The number of deviceinfoSerialNumberInfos matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of deviceinfoSerialNumberInfos matching your request.",
          "items": {
            "$ref": "#/definitions/deviceinfoSerialNumberInfo"
          },
          "type": "array"
        }
      }
    },
    "condAlarm": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AffectedMoId": {
              "description": "MoId of the affected object from the managed system's point of view. \n",
              "type": "string"
            },
            "AffectedMoType": {
              "description": "Managed system affected object type. For example Adaptor, FI, CIMC. \n",
              "type": "string"
            },
            "AffectedObject": {
              "description": "A unique key for an alarm instance. This is a combination of a unique system name and msAffectedObject \n",
              "type": "string"
            },
            "AncestorMoId": {
              "description": "Parent MoId of the fault from managed system. For example, Blade moid for adaptor fault. \n",
              "type": "string"
            },
            "AncestorMoType": {
              "description": "Parent MO type of the fault from managed system. For example, Blade for adaptor fault. \n",
              "type": "string"
            },
            "Code": {
              "description": "A unique alarm code. For alarms mapped from UCS faults, this will be the same as the UCS fault code. \n",
              "type": "string"
            },
            "CreationTime": {
              "description": "The time the alarm was created. \n",
              "format": "date-time",
              "type": "string"
            },
            "Description": {
              "description": "A longer description of the alarm than the name. The description contains details of the component reporting the issue. \n",
              "type": "string"
            },
            "LastTransitionTime": {
              "description": "The time the alarm last had a change in severity. \n",
              "format": "date-time",
              "type": "string"
            },
            "MsAffectedObject": {
              "description": "A unique key for the alarm from the managed system's point of view. For example, in the case of UCS, this is the fault's dn. \n",
              "type": "string"
            },
            "Name": {
              "description": "Uniquely identifies the type of alarm. For alarms originating from Starship, this will be a descriptive name. For alarms that are mapped from faults, the name will be derived from fault properties. For example, alarms mapped from UCS faults will use a prefix of UCS and appended with the fault code. \n",
              "type": "string"
            },
            "OrigSeverity": {
              "description": "Indicates the original severity when the alarm was first created. \n",
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "description": "Relationship to set accountMoid on Alarms. With \"onpeerdelete\" set to \"cascade\", Alarms get deleted when the associated registered device is deleted.\n",
              "readOnly": true
            },
            "Severity": {
              "description": "Indicates the severity of the alarm. Valid values are Critical, Warning, Info, and Cleared.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A state-full entity representing a found problem. Alarms can be reported by the managed system itself or can be determined by Starship.\n",
      "title": "Cond:Alarm"
    },
    "condAlarmList": {
      "properties": {
        "Count": {
          "description": "The number of condAlarms matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of condAlarms matching your request.",
          "items": {
            "$ref": "#/definitions/condAlarm"
          },
          "type": "array"
        }
      }
    },
    "condHclStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Details": {
              "description": "a collection of all the HclStatusDetails\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "HclFirmwareVersion": {
              "description": "the current CIMC version for the server normalized for querying HCL data \n",
              "type": "string"
            },
            "HclModel": {
              "description": "the managed object's model to validate normalized for querying HCL data \n",
              "type": "string"
            },
            "HclOsVendor": {
              "description": "the OS Vendor for the managed object to validate normalized for querying HCL data. Empty if we are missing this information \n",
              "type": "string"
            },
            "HclOsVersion": {
              "description": "the OS Version for the managed object to validate normalized for querying HCL data. Empty if we are missing this information \n",
              "type": "string"
            },
            "HclProcessor": {
              "description": "the managed object's processor to validate if applicable normalized for querying HCL data. It is left empty if processor is not required for the HCL validation, for example if we are evaluating some other managedObject that is not a server. Currently only server validation is supported. \n",
              "type": "string"
            },
            "InvFirmwareVersion": {
              "description": "the current CIMC version for the server as received from inventory \n",
              "type": "string"
            },
            "InvModel": {
              "description": "the managed object's model to validate as received from the inventory. \n",
              "type": "string"
            },
            "InvOsVendor": {
              "description": "the OS Vendor for the managed object to validate as received from inventory. Empty if we are missing this information \n",
              "type": "string"
            },
            "InvOsVersion": {
              "description": "the OS Version for the managed object to validate as received from inventory. Empty if we are missing this information \n",
              "type": "string"
            },
            "InvProcessor": {
              "description": "the managed object's processor to validate if applicable as received from inventory. It is left empty if processor is not required for the HCL validation, for example if we are evaluating some other managedObject that is not a server. Currently only server validation is supported. \n",
              "type": "string"
            },
            "ManagedObject": {
              "$ref": "#/definitions/moMoRef",
              "description": "specifies the managed object for which this HCLStatus applies\n",
              "readOnly": true
            },
            "Reason": {
              "default": "Missing-Os-Info",
              "description": "the reason for the HCL status. It will be one of the following \"Missing-Os-Info\" - we are missing os information in the inventory from the device connector \"Incompatible-Components\" - we have 1 or more components with \"Not-Validated\" status \"Compatible\" - all the components have \"Validated\" status \n",
              "enum": [
                "Missing-Os-Info",
                "Incompatible-Components",
                "Compatible"
              ],
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "description": "Relationship to the registered device. We need this in order to correctly set permissions during device claim\n",
              "readOnly": true
            },
            "Status": {
              "default": "Unknown",
              "description": "the status of the managed objects compatibility against HCL. The status can be one of the following \"Unknown\" - we do not have enough information to evaluate against the HCL data \"Validated\" - we have validated all components against the HCL and they all have \"Validated\" status \"Not-Validated\" - we have validated all components against the HCL and 1 or more has \"Not-Validated\" status  \n",
              "enum": [
                "Unknown",
                "Not-Validated",
                "Validated"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The HCL status of a managed object after we have validated the managed object components' firmware and drivers against the HCL.\n",
      "title": "Cond:Hcl Status"
    },
    "condHclStatusAction": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "CimcVersion": {
              "description": "the recommended HCL cimcVersion version for the component. This could be the same version as the inventoried version, in this case the current cimc is already compliant and only the other non-compliant versions need to change \n",
              "type": "string"
            },
            "Component": {
              "$ref": "#/definitions/moMoRef",
              "description": "specifies the component associated with this HclStatusAction (adapter or storage controller)\n",
              "readOnly": true
            },
            "Description": {
              "description": "the description of the component action that could be performed to bring this component in a HCL validated state \n",
              "type": "string"
            },
            "DriverName": {
              "description": "the current driver name of the component we are validating as found in the HCL data \n",
              "type": "string"
            },
            "DriverVersion": {
              "description": "the recommended HCL driver version for the component. This could be the same version as the inventoried version, in this case the current driver is already compliant and only the other non-compliant versions need to change \n",
              "type": "string"
            },
            "FirmwareVersion": {
              "description": "the recommended HCL firmware version for the component. This could be the same version as the inventoried version, in this case the firmware is already compliant and only the other non-compliant versions need to change \n",
              "type": "string"
            },
            "HclStatusDetail": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Model": {
              "description": "The component model we are validating as received from inventory \n",
              "type": "string"
            },
            "Type": {
              "default": "Upgrade-Firmware",
              "description": "the type of action required to achieve \"validated\" status for the HclStatusDetail. \"Upgrade-Firmware\" means a firmware update is required to the firmwareVersion listed here, \"Upgrade-Driver\" means a driver update is required to the driverVersion listed here, \"Upgrade-Firmware-Driver\" means a firmware and driver update is required to the versions listed here, \"Upgrade-Cimc\" means the current running CIMC version was not found in HCL data and this will likely require an upgrade of cimc, firmware and driver to the recommended versions shown here.  \n",
              "enum": [
                "Upgrade-Firmware",
                "Upgrade-Driver",
                "Upgrade-Firmware-Driver",
                "Upgrade-Cimc"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This object contains the validated firmware and driver combinations found in the HCL for a particular component. If the component's HclStatusDetail is \"not validated\" we will have one or more HclStatusActions for how to put the HclStatusDetail in a \"validated\" status. These actions can be an \"upgrade firmware\", \"upgrade driver\", \"upgrade driver and firmware\" or \"upgrade cimc\" action.\n",
      "title": "Cond:Hcl Status Action"
    },
    "condHclStatusActionList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatusActions matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of condHclStatusActions matching your request.",
          "items": {
            "$ref": "#/definitions/condHclStatusAction"
          },
          "type": "array"
        }
      }
    },
    "condHclStatusDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Actions": {
              "description": "the HclStatusActions associated with this detail\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Component": {
              "$ref": "#/definitions/moMoRef",
              "description": "specifies the component associated to this status detail HclStatusDetail (adapter or storage controller)\n",
              "readOnly": true
            },
            "HclDriverName": {
              "description": "the current driver name of the component we are validating normalized for querying HCL data \n",
              "type": "string"
            },
            "HclDriverVersion": {
              "description": "the current driver version of the component we are validating normalized for querying HCL data \n",
              "type": "string"
            },
            "HclFirmwareVersion": {
              "description": "the current firmware version of the component model normalized for querying HCL data \n",
              "type": "string"
            },
            "HclModel": {
              "description": "The component model we are trying to validate normalized for querying HCL data \n",
              "type": "string"
            },
            "HclStatus": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "InvDriverName": {
              "description": "the current driver name of the component we are validating as received from inventory \n",
              "type": "string"
            },
            "InvDriverVersion": {
              "description": "the current driver version of the component we are validating as received from inventory \n",
              "type": "string"
            },
            "InvFirmwareVersion": {
              "description": "the current firmware version of the component model as received from inventory \n",
              "type": "string"
            },
            "InvModel": {
              "description": "The component model we are trying to validate as received from inventory \n",
              "type": "string"
            },
            "Reason": {
              "default": "Missing-Os-Driver-Info",
              "description": "the reason for the status. The reason can be one of \"Incompatible-Server-Model\" - HCL validation has failed because the server model is not validated with this component \"Incompatible-Processor\" - HCL validation has failed because the processor is not validated with this component \"Incompatible-Os-Info\" - HCL validation has failed because the os vendor and version is not validated with this component \"Incompatible-Component-Model\" - HCL validation has failed because the component model is not validated \"Incompatible-Firmware-Driver\" - HCL validation has failed because the firmware version is not validated with the driver version \"Incompatible-Ucs-Version\" - HCL validation has failed because the UCS version is not validated with this component \"Missing-Os-Driver-Info\" - HCL validation was not performed because we are missing os driver information form device \"Service-Unavailable\" - HCL data service is unavailable at the moment (try again later). This could be due to HCL data updating \"Service-Error\" - HCL data service is available but an error occured when making the request or parsing the response. \"Unrecognized-Protocol\" - HCL service does not recognize the given driver protocol for this component. HCL data may need to be updated \"Compatible\" - this component's inventory data has \"Validated\" status with the HCL \n",
              "enum": [
                "Missing-Os-Driver-Info",
                "Incompatible-Server-With-Component",
                "Incompatible-Processor",
                "Incompatible-Os-Info",
                "Incompatible-Component-Model",
                "Incompatible-Firmware-Driver",
                "Incompatible-Ucs-Version",
                "Service-Unavailable",
                "Service-Error",
                "Unrecognized-Protocol",
                "Compatible"
              ],
              "type": "string"
            },
            "Status": {
              "default": "Unknown",
              "description": "The status for the component model, firmware version, driver name, and driver version after validating against the HCL. The status can be one of the following \"Unknown\" - we do not have enough information to evaluate against the HCL data \"Validated\" - we have validated this component against the HCL and it has \"Validated\" status \"Not-Validated\" - we have validated this component against the HCL and it has \"Not-Validated\" status  \n",
              "enum": [
                "Unknown",
                "Not-Validated",
                "Validated"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The HCL status detail for each component firmware and driver.\n",
      "title": "Cond:Hcl Status Detail"
    },
    "condHclStatusDetailList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatusDetails matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of condHclStatusDetails matching your request.",
          "items": {
            "$ref": "#/definitions/condHclStatusDetail"
          },
          "type": "array"
        }
      }
    },
    "condHclStatusJob": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ManagedObject": {
              "$ref": "#/definitions/moMoRef",
              "description": "specifies the managed object for which this HCLStatus applies\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "description": "Relationship to set to the registered device associated with this job. We also need this to correctly inherit permissions.\n",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "This object is used to batch mo notifications for mo's that are used to create HCLStatus. When a notification for an interesting mo comes in we will create a Job for the inventory object we are wanting to analyze. This is inserted in DB if it doesn't exist. Then based on a timer we process the jobs in the DB and clear them.\n",
      "title": "Cond:Hcl Status Job"
    },
    "condHclStatusJobList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatusJobs matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of condHclStatusJobs matching your request.",
          "items": {
            "$ref": "#/definitions/condHclStatusJob"
          },
          "type": "array"
        }
      }
    },
    "condHclStatusList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatuses matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of condHclStatuses matching your request.",
          "items": {
            "$ref": "#/definitions/condHclStatus"
          },
          "type": "array"
        }
      }
    },
    "hclFirmware": {
      "allOf": [
        {
          "properties": {
            "DriverName": {
              "description": "Protocol for which the driver is provided.Ex enic, fnic,lsi_mr3 \n",
              "type": "string"
            },
            "DriverVersion": {
              "description": "Version of the Driver \n",
              "type": "string"
            },
            "ErrorCode": {
              "default": "Success",
              "description": "Error code for the support status \n",
              "enum": [
                "Success",
                "Unknown",
                "InvalidUcsVersion",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareNotSupported",
                "DriverVersionNotSupported",
                "FirmwareDriverVersionCombinationNotSupported",
                "FirmwareAndDriverNotSupported",
                "InternalError",
                "MarshallingError"
              ],
              "readOnly": true,
              "type": "string"
            },
            "FirmwareVersion": {
              "description": "firmware version of the product/adapter supported \n",
              "type": "string"
            },
            "Id": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "DriverName": {
              "description": "Protocol for which the driver is provided.Ex enic, fnic,lsi_mr3 \n",
              "type": "string"
            },
            "DriverVersion": {
              "description": "Version of the Driver \n",
              "type": "string"
            },
            "ErrorCode": {
              "default": "Success",
              "description": "Error code for the support status \n",
              "enum": [
                "Success",
                "Unknown",
                "InvalidUcsVersion",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareNotSupported",
                "DriverVersionNotSupported",
                "FirmwareDriverVersionCombinationNotSupported",
                "FirmwareAndDriverNotSupported",
                "InternalError",
                "MarshallingError"
              ],
              "readOnly": true,
              "type": "string"
            },
            "FirmwareVersion": {
              "description": "firmware version of the product/adapter supported \n",
              "type": "string"
            },
            "Id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "model which holds the details of firmware version and driver version\n",
      "title": "Hcl:Firmware"
    },
    "hclProduct": {
      "allOf": [
        {
          "properties": {
            "DriverNames": {
              "description": "supported driver names \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ErrorCode": {
              "default": "Success",
              "description": "Error code indicating the support status \n",
              "enum": [
                "Success",
                "Unknown",
                "InvalidUcsVersion",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareNotSupported",
                "DriverVersionNotSupported",
                "FirmwareDriverVersionCombinationNotSupported",
                "FirmwareAndDriverNotSupported",
                "InternalError",
                "MarshallingError"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Firmwares": {
              "description": "supported firmware list \n",
              "items": {
                "$ref": "#/definitions/hclFirmware"
              },
              "type": "array"
            },
            "Id": {
              "type": "string"
            },
            "Model": {
              "description": "Model/PID of the product/adapter \n",
              "type": "string"
            },
            "Revision": {
              "description": "revision of the adapter model \n",
              "type": "string"
            },
            "Vendor": {
              "description": "Vendor of the adapter  \n",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "DriverNames": {
              "description": "supported driver names \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ErrorCode": {
              "default": "Success",
              "description": "Error code indicating the support status \n",
              "enum": [
                "Success",
                "Unknown",
                "InvalidUcsVersion",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareNotSupported",
                "DriverVersionNotSupported",
                "FirmwareDriverVersionCombinationNotSupported",
                "FirmwareAndDriverNotSupported",
                "InternalError",
                "MarshallingError"
              ],
              "readOnly": true,
              "type": "string"
            },
            "Firmwares": {
              "description": "supported firmware list \n",
              "items": {
                "$ref": "#/definitions/hclFirmware"
              },
              "type": "array"
            },
            "Id": {
              "type": "string"
            },
            "Model": {
              "description": "Model/PID of the product/adapter \n",
              "type": "string"
            },
            "Revision": {
              "description": "revision of the adapter model \n",
              "type": "string"
            },
            "Vendor": {
              "description": "Vendor of the adapter  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "model giving the details of product\n",
      "title": "Hcl:Product"
    },
    "licenseAccountLicenseData": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef"
            },
            "AccountId": {
              "description": "Root user's ID of the account \n",
              "readOnly": true,
              "type": "string"
            },
            "AgentData": {
              "description": "Agent trusted store data \n",
              "readOnly": true,
              "type": "string"
            },
            "AuthExpireTime": {
              "description": "Authorization expiration time \n",
              "readOnly": true,
              "type": "string"
            },
            "AuthInitialTime": {
              "description": "Intial Authorization time \n",
              "readOnly": true,
              "type": "string"
            },
            "AuthNextTime": {
              "description": "Next time for Authorization \n",
              "readOnly": true,
              "type": "string"
            },
            "Category": {
              "description": "License category \n",
              "readOnly": true,
              "type": "string"
            },
            "CustomerOp": {
              "$ref": "#/definitions/moMoRef"
            },
            "Group": {
              "description": "Group \n",
              "readOnly": true,
              "type": "string"
            },
            "LastSync": {
              "description": "Specifies last sync time with SA \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "LastUpdatedTime": {
              "description": "Last updated \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "LicenseState": {
              "description": "Aggregrated mode for the agent \n",
              "readOnly": true,
              "type": "string"
            },
            "LicenseTechSupportInfo": {
              "description": "Tech-support info for a smart-agent \n",
              "readOnly": true,
              "type": "string"
            },
            "Licenseinfos": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "RegisterExpireTime": {
              "description": "Registration exipiration time \n",
              "readOnly": true,
              "type": "string"
            },
            "RegisterInitialTime": {
              "description": "Initial time of registration \n",
              "readOnly": true,
              "type": "string"
            },
            "RegisterNextTime": {
              "description": "Next time for registration \n",
              "readOnly": true,
              "type": "string"
            },
            "RegistrationStatus": {
              "description": "Registration status \n",
              "readOnly": true,
              "type": "string"
            },
            "RenewFailureString": {
              "description": "Renew failure message \n",
              "readOnly": true,
              "type": "string"
            },
            "SmartAccount": {
              "description": "Name of smart account \n",
              "readOnly": true,
              "type": "string"
            },
            "SmartlicenseToken": {
              "$ref": "#/definitions/moMoRef"
            },
            "SyncStatus": {
              "description": "Current sync status for the account \n",
              "readOnly": true,
              "type": "string"
            },
            "VirtualAccount": {
              "description": "Name of virtual account  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "License information for an account\n",
      "title": "License:Account License Data"
    },
    "licenseAccountLicenseDataList": {
      "properties": {
        "Count": {
          "description": "The number of licenseAccountLicenseData matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of licenseAccountLicenseData matching your request.",
          "items": {
            "$ref": "#/definitions/licenseAccountLicenseData"
          },
          "type": "array"
        }
      }
    },
    "licenseCustomerOp": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AccountLicenseData": {
              "$ref": "#/definitions/moMoRef"
            },
            "DeregisterDevice": {
              "description": "Trigger de-registration/disable \n",
              "type": "boolean"
            },
            "RenewAuthorization": {
              "description": "Trigger renew authorization \n",
              "type": "boolean"
            },
            "RenewIdCertificate": {
              "description": "Trigger renew registration \n",
              "type": "boolean"
            },
            "ShowAgentTechSupport": {
              "description": "Trigger show tech support  \n",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "description": "Customer operation object to refresh the registration or re-authenticate, pre-created\n",
      "title": "License:Customer Op"
    },
    "licenseCustomerOpList": {
      "properties": {
        "Count": {
          "description": "The number of licenseCustomerOps matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of licenseCustomerOps matching your request.",
          "items": {
            "$ref": "#/definitions/licenseCustomerOp"
          },
          "type": "array"
        }
      }
    },
    "licenseLicenseInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AccountLicenseData": {
              "$ref": "#/definitions/moMoRef"
            },
            "ActiveAdmin": {
              "description": "the customer needs to set this attribute to activate license entitlement \n",
              "type": "boolean"
            },
            "DaysLeft": {
              "description": "this attribute indicates the number of days left for licenseState to stay in TrialPeriod or OutOfCompliance state. \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "EndTime": {
              "description": "when startTime is set, the system updates endTime to reflect when licenseState is going to move out of TrialPeriod or OutOfCompliance. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "EnforceMode": {
              "description": "the entitlement mode reported by Cisco Smart Software Manager. \n",
              "readOnly": true,
              "type": "string"
            },
            "ErrorDesc": {
              "description": "it provides the detailed error message when there is any error related to this entitlement \n",
              "readOnly": true,
              "type": "string"
            },
            "EvaluationPeriod": {
              "description": "Default Trial or Grace period customer is entitled to. \n",
              "format": "int64",
              "type": "integer"
            },
            "ExtraEvaluation": {
              "description": "one time extend Trial or Grace period customer is entitled to. \n",
              "format": "int64",
              "type": "integer"
            },
            "LicenseCount": {
              "description": "the total number of servers claimed by the account \n",
              "format": "int64",
              "readOnly": true,
              "type": "integer"
            },
            "LicenseState": {
              "description": "the license state defined by Starship. Can be one of NotLicensed, TrialPeriod, OutOfCompliance, Compliance,GraceExpired,TrialExpired. \n",
              "readOnly": true,
              "type": "string"
            },
            "LicenseType": {
              "description": "Starship license entitlement name. It is set to be Essentials. \n",
              "readOnly": true,
              "type": "string"
            },
            "StartTime": {
              "description": "when licenseState enters TrialPeriod or OutOfCompliance, startTime is set to current system time. \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "TrialAdmin": {
              "description": "when LicenseState is in NotLicensed, the customer can set trialAdmin to be true to start the trial period, i.e. licenseState is set to be TrialPeriod  \n",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "description": "License state information for a specific license entitlement. Essentials license entitlement is supported currently. licenseState attribute is used for license enforcement. When license state is one of TrialPeriod, Compliance, or OutOfCompliance, the feature set defined for the license entitlement is granted to the customer.\n",
      "title": "License:License Info"
    },
    "licenseLicenseInfoList": {
      "properties": {
        "Count": {
          "description": "The number of licenseLicenseInfos matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of licenseLicenseInfos matching your request.",
          "items": {
            "$ref": "#/definitions/licenseLicenseInfo"
          },
          "type": "array"
        }
      }
    },
    "licenseSmartlicenseToken": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AccountLicenseData": {
              "$ref": "#/definitions/moMoRef"
            },
            "Token": {
              "description": "Smart license registration token  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Stores token\n",
      "title": "License:Smartlicense Token"
    },
    "licenseSmartlicenseTokenList": {
      "properties": {
        "Count": {
          "description": "The number of licenseSmartlicenseTokens matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of licenseSmartlicenseTokens matching your request.",
          "items": {
            "$ref": "#/definitions/licenseSmartlicenseToken"
          },
          "type": "array"
        }
      }
    },
    "biosInputOutput": {
      "allOf": [
        {
          "properties": {
            "IntelVtForDirectedIo": {
              "default": "platform-default",
              "description": "BIOS Token for setting Intel VT for directed IO configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "IntelVtdCoherencySupport": {
              "default": "platform-default",
              "description": "BIOS Token for setting Intel(R) VT-d Coherency Support configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "IntelVtdatsSupport": {
              "default": "platform-default",
              "description": "BIOS Token for setting Intel VTD ATS support configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Ipv6pxe": {
              "default": "platform-default",
              "description": "BIOS Token for setting IPV6 PXE Support configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "LegacyUsbSupport": {
              "default": "platform-default",
              "description": "BIOS Token for setting Legacy USB Support configuration \n",
              "enum": [
                "platform-default",
                "auto",
                "disabled",
                "enabled"
              ],
              "type": "string"
            },
            "Psata": {
              "default": "platform-default",
              "description": "BIOS Token for setting P-SATA OptionROM configuration \n",
              "enum": [
                "platform-default",
                "Disabled",
                "LSI SW RAID"
              ],
              "type": "string"
            },
            "SataModeSelect": {
              "default": "platform-default",
              "description": "BIOS Token for setting M.2 SATA OptionROM configuration \n",
              "enum": [
                "platform-default",
                "AHCI",
                "Disabled",
                "LSI SW RAID"
              ],
              "type": "string"
            },
            "UsbPortFront": {
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port Front configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "UsbPortInternal": {
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port Internal configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "UsbPortKvm": {
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port KVM configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "UsbPortRear": {
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port Rear configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "UsbPortSdCard": {
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port:M.2 Storage configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "UsbPortVmedia": {
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port VMedia configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "VgaPriority": {
              "default": "platform-default",
              "description": "BIOS Token for setting VGA Priority configuration  \n",
              "enum": [
                "platform-default",
                "Offboard",
                "Onboard",
                "Onboard VGA Disabled"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Input-Output\n",
      "title": "Bios:Input Output"
    },
    "biosLomAndPcieSlotsConfiguration": {
      "allOf": [
        {
          "properties": {
            "LomPort0state": {
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 0 OptionROM configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "LomPort1state": {
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 1 OptionROM configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "LomPort2state": {
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 2 OptionROM configuration \n",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "type": "string"
            },
            "LomPort3state": {
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 3 OptionROM configuration \n",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "type": "string"
            },
            "LomPortsAllState": {
              "default": "platform-default",
              "description": "BIOS Token for setting All Onboard LOM Ports configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot10linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:10 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "Slot10state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 10 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot11linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:11 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "Slot11state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 11 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot12linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:12 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "Slot12state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 12 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot1linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:1 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "Slot1state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 1 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot2linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:2 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "Slot2state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 2 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot3linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:3 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "Slot3state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:3 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot4linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:4 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "Slot4state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 4 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot5linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:5 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "Slot5state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 5 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot6linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:6 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "Slot6state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 6 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot7linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:7 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "Slot7state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 7 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot8linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:8 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "Slot8state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 8 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Slot9linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:9 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "Slot9state": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 9 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotFrontNvme1linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Front Nvm1 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "SlotFrontNvme2linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Front Nvme2 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "SlotMlomLinkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:MLOM Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "SlotMlomState": {
              "default": "platform-default",
              "description": "BIOS Token for setting MLOM OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotMraidLinkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting MRAID Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "SlotMraidState": {
              "default": "platform-default",
              "description": "BIOS Token for setting MRAID OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotN1state": {
              "default": "platform-default",
              "description": "BIOS Token for setting Front NVME 1 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotN2state": {
              "default": "platform-default",
              "description": "BIOS Token for setting Front NVME 2 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotRaidLinkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting RAID Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "type": "string"
            },
            "SlotRaidState": {
              "default": "platform-default",
              "description": "BIOS Token for setting RAID OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotRearNvme1linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear Nvme1 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "SlotRearNvme1state": {
              "default": "platform-default",
              "description": "BIOS Token for setting Rear NVME 1 OptionRom configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SlotRearNvme2linkSpeed": {
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear Nvme2 Link Speed configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2"
              ],
              "type": "string"
            },
            "SlotRearNvme2state": {
              "default": "platform-default",
              "description": "BIOS Token for setting Rear NVME 2 OptionRom configuration  \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for LOM and PCIe Slots Configuration\n",
      "title": "Bios:Lom And Pcie Slots Configuration"
    },
    "biosMemory": {
      "allOf": [
        {
          "properties": {
            "MemoryMappedIoAbove4gb": {
              "default": "platform-default",
              "description": "BIOS Token for setting Above 4G Decoding configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "NumaOptimized": {
              "default": "platform-default",
              "description": "BIOS Token for setting NUMA configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "SelectMemoryRasConfiguration": {
              "default": "platform-default",
              "description": "BIOS Token for setting SelectMemory RAS configuration configuration  \n",
              "enum": [
                "platform-default",
                "maximum-performance",
                "mirror-mode-1lm"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Memory\n",
      "title": "Bios:Memory"
    },
    "biosPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "InputOutput": {
              "$ref": "#/definitions/biosInputOutput",
              "description": "BIOS Settings for Input-output \n"
            },
            "LomAndPcieSlotsConfiguration": {
              "$ref": "#/definitions/biosLomAndPcieSlotsConfiguration",
              "description": "BIOS Settings for LOM and PCIe Slots Configuration \n"
            },
            "Memory": {
              "$ref": "#/definitions/biosMemory",
              "description": "BIOS Settings for Memory \n"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "PowerOrPerformance": {
              "$ref": "#/definitions/biosPowerOrPerformance",
              "description": "BIOS Settings for Power-or-performance \n"
            },
            "Processor": {
              "$ref": "#/definitions/biosProcessor",
              "description": "BIOS Settings for Processor \n"
            },
            "Profiles": {
              "description": "Relationship to the profile objects\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Security": {
              "$ref": "#/definitions/biosSecurity",
              "description": "BIOS Settings for Security \n"
            },
            "SerialConfiguration": {
              "$ref": "#/definitions/biosSerialConfiguration",
              "description": "BIOS Settings for Serial Configuration \n"
            },
            "ServerManagement": {
              "$ref": "#/definitions/biosServerManagement",
              "description": "BIOS Settings for Server Management  \n"
            }
          },
          "type": "object"
        }
      ],
      "description": "Policy for setting BIOS tokens on the endpoint\n",
      "title": "BIOS"
    },
    "biosPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of biosPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of biosPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/biosPolicy"
          },
          "type": "array"
        }
      }
    },
    "biosPowerOrPerformance": {
      "allOf": [
        {
          "properties": {
            "AdjacentCacheLinePrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting Adjacent Cache Line Prefetcher configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "CpuPerformance": {
              "default": "platform-default",
              "description": "BIOS Token for setting CPU Performance configuration \n",
              "enum": [
                "platform-default",
                "custom",
                "enterprise",
                "high-throughput",
                "hpc"
              ],
              "type": "string"
            },
            "HardwarePrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting Hardware Prefetcher configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "IpPrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting DCU IP Prefetcher configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "StreamerPrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting DCU Streamer Prefetch configuration  \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Power/Performance\n",
      "title": "Bios:Power Or Performance"
    },
    "biosProcessor": {
      "allOf": [
        {
          "properties": {
            "BootPerformanceMode": {
              "default": "platform-default",
              "description": "BIOS Token for setting Boot Performance Mode configuration \n",
              "enum": [
                "platform-default",
                "Max Efficient",
                "Max Performance",
                "Set by Intel NM"
              ],
              "type": "string"
            },
            "CmciEnable": {
              "default": "platform-default",
              "description": "BIOS Token for setting Processor CMCI configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "CoreMultiProcessing": {
              "default": "platform-default",
              "description": "BIOS Token for setting Cores Enabled configuration \n",
              "enum": [
                "platform-default",
                1,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                2,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                "all"
              ],
              "type": "string"
            },
            "CpuEnergyPerformance": {
              "default": "platform-default",
              "description": "BIOS Token for setting Energy Performance BIOS Config configuration \n",
              "enum": [
                "platform-default",
                "balanced-performance",
                "balanced-power",
                "performance",
                "power"
              ],
              "type": "string"
            },
            "EnhancedIntelSpeedStepTech": {
              "default": "platform-default",
              "description": "BIOS Token for setting Enhanced Intel Speedstep(R) Technology configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "ExecuteDisableBit": {
              "default": "platform-default",
              "description": "BIOS Token for setting Execute Disable Bit configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "ExtendedApic": {
              "default": "platform-default",
              "description": "BIOS Token for setting Extended Apic configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "HwpmEnable": {
              "default": "platform-default",
              "description": "BIOS Token for setting Hardware P-States configuration \n",
              "enum": [
                "platform-default",
                "Disabled",
                "HWPM Native Mode",
                "HWPM OOB Mode",
                "Native Mode with no Legacy"
              ],
              "type": "string"
            },
            "ImcInterleave": {
              "default": "platform-default",
              "description": "BIOS Token for setting IMC Interleaving configuration \n",
              "enum": [
                "platform-default",
                "1-way Interleave",
                "2-way Interleave",
                "Auto"
              ],
              "type": "string"
            },
            "IntelHyperThreadingTech": {
              "default": "platform-default",
              "description": "BIOS Token for setting Hyper-Threading [ALL] configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "IntelTurboBoostTech": {
              "default": "platform-default",
              "description": "BIOS Token for setting Turbo Mode configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "IntelVirtualizationTechnology": {
              "default": "platform-default",
              "description": "BIOS Token for setting Intel(R) VT configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "KtiPrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting KTI Prefetch configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "LlcPrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting LLC Prefetch configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "PackageCstateLimit": {
              "default": "platform-default",
              "description": "BIOS Token for setting Package C State configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "C0 C1 State",
                "C2",
                "C6 Non Retention",
                "C6 Retention",
                "No Limit"
              ],
              "type": "string"
            },
            "ProcessorC1e": {
              "default": "platform-default",
              "description": "BIOS Token for setting Processor C1E configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "ProcessorC6report": {
              "default": "platform-default",
              "description": "BIOS Token for setting Processor C6 Report configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "PstateCoordType": {
              "default": "platform-default",
              "description": "BIOS Token for setting EIST PSD Function configuration \n",
              "enum": [
                "platform-default",
                "HW ALL",
                "SW ALL",
                "SW ANY"
              ],
              "type": "string"
            },
            "PwrPerfTuning": {
              "default": "platform-default",
              "description": "BIOS Token for setting Power Performance Tuning configuration \n",
              "enum": [
                "platform-default",
                "bios",
                "os"
              ],
              "type": "string"
            },
            "Snc": {
              "default": "platform-default",
              "description": "BIOS Token for setting Sub Numa Clustering configuration \n",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "type": "string"
            },
            "WorkLoadConfig": {
              "default": "platform-default",
              "description": "BIOS Token for setting Workload Configuration configuration \n",
              "enum": [
                "platform-default",
                "Balanced",
                "I/O Sensitive"
              ],
              "type": "string"
            },
            "XptPrefetch": {
              "default": "platform-default",
              "description": "BIOS Token for setting XPT Prefetch configuration  \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Processor\n",
      "title": "Bios:Processor"
    },
    "biosSecurity": {
      "allOf": [
        {
          "properties": {
            "PopSupport": {
              "default": "platform-default",
              "description": "BIOS Token for setting Power ON Password Support configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "TpmControl": {
              "default": "platform-default",
              "description": "BIOS Token for setting Trusted Platform Module State configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "TxtSupport": {
              "default": "platform-default",
              "description": "BIOS Token for setting Intel Trusted Execution Technology Support configuration  \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Security\n",
      "title": "Bios:Security"
    },
    "biosSerialConfiguration": {
      "allOf": [
        {
          "properties": {
            "BaudRate": {
              "default": "platform-default",
              "description": "BIOS Token for setting Bits per second configuration \n",
              "enum": [
                "platform-default",
                115200,
                19200,
                38400,
                57600,
                9600
              ],
              "type": "string"
            },
            "ConsoleRedirection": {
              "default": "platform-default",
              "description": "BIOS Token for setting Console Redirection configuration \n",
              "enum": [
                "platform-default",
                "com-0",
                "com-1",
                "disabled"
              ],
              "type": "string"
            },
            "FlowControl": {
              "default": "platform-default",
              "description": "BIOS Token for setting Flow Control configuration \n",
              "enum": [
                "platform-default",
                "none",
                "rts-cts"
              ],
              "type": "string"
            },
            "LegacyOsRedirection": {
              "default": "platform-default",
              "description": "BIOS Token for setting Legacy OS Redirection configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "PuttyKeyPad": {
              "default": "platform-default",
              "description": "BIOS Token for setting Putty KeyPad configuration \n",
              "enum": [
                "platform-default",
                "ESCN",
                "LINUX",
                "SCO",
                "VT100",
                "VT400",
                "XTERMR6"
              ],
              "type": "string"
            },
            "RedirectionAfterPost": {
              "default": "platform-default",
              "description": "BIOS Token for setting Redirection After BIOS POST configuration \n",
              "enum": [
                "platform-default",
                "Always Enable",
                "Bootloader"
              ],
              "type": "string"
            },
            "TerminalType": {
              "default": "platform-default",
              "description": "BIOS Token for setting Terminal Type configuration  \n",
              "enum": [
                "platform-default",
                "pc-ansi",
                "vt-utf8",
                "vt100",
                "vt100-plus"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Serial Configuration\n",
      "title": "Bios:Serial Configuration"
    },
    "biosServerManagement": {
      "allOf": [
        {
          "properties": {
            "BootOptionNumRetry": {
              "default": "platform-default",
              "description": "BIOS Token for setting Number of Retries configuration \n",
              "enum": [
                "platform-default",
                13,
                5,
                "Infinite"
              ],
              "type": "string"
            },
            "BootOptionReCoolDown": {
              "default": "platform-default",
              "description": "BIOS Token for setting Cool Down Time (sec) configuration \n",
              "enum": [
                "platform-default",
                15,
                45,
                90
              ],
              "type": "string"
            },
            "BootOptionRetry": {
              "default": "platform-default",
              "description": "BIOS Token for setting Boot Option Retry configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "CdnEnable": {
              "default": "platform-default",
              "description": "BIOS Token for setting Consistent Device Naming configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "Frb2enable": {
              "default": "platform-default",
              "description": "BIOS Token for setting FRB-2 Timer configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "OsBootWatchdogTimer": {
              "default": "platform-default",
              "description": "BIOS Token for setting OS Watchdog Timer configuration \n",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "OsBootWatchdogTimerPolicy": {
              "default": "platform-default",
              "description": "BIOS Token for setting OS Watchdog Timer Policy configuration \n",
              "enum": [
                "platform-default",
                "power-off",
                "reset"
              ],
              "type": "string"
            },
            "OsBootWatchdogTimerTimeout": {
              "default": "platform-default",
              "description": "BIOS Token for setting OS Watchdog Timer Timeout configuration  \n",
              "enum": [
                "platform-default",
                "10-minutes",
                "15-minutes",
                "20-minutes",
                "5-minutes"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "BIOS Settings for Server Management\n",
      "title": "Bios:Server Management"
    },
    "bootDeviceBase": {
      "allOf": [
        {
          "properties": {
            "Enabled": {
              "description": "Specifies if the boot device is enabled or disabled. \n",
              "type": "boolean"
            },
            "Name": {
              "description": "Specifies the name of the boot device. It should start and end with an alphanumeric character. It can have underscores and hyphens. It cannot be more than 30 characters.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Lists properties that are common to all device types. It serves as base class for other device types.\n",
      "title": "Boot:Device Base"
    },
    "bootPrecisionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "BootDevices": {
              "description": "Set of boot devices to be configured \n",
              "items": {
                "$ref": "#/definitions/bootDeviceBase"
              },
              "type": "array"
            },
            "ConfiguredBootMode": {
              "default": "Legacy",
              "description": "Sets the BIOS boot mode. UEFI uses the GUID Partition Table (GPT) whereas Legacy mode uses the Master Boot Record(MBR) partitioning scheme. \n",
              "enum": [
                "Legacy",
                "Uefi"
              ],
              "type": "string"
            },
            "EnforceUefiSecureBoot": {
              "description": "If UEFI secure boot is enabled, the boot mode is set to UEFI by default. Secure boot enforces that device boots using only software that is trusted by the Original Equipment Manufacturer (OEM)  \n",
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Reference to the profile objects that this policy is a part of\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Precision boot order policy models a reusable boot order configuration that can be applied to multiple servers via profile association. It supports advanced boot order configuration on Cisco CIMC servers.\n",
      "title": "Precision Boot Order"
    },
    "bootPrecisionPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of bootPrecisionPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of bootPrecisionPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/bootPrecisionPolicy"
          },
          "type": "array"
        }
      }
    },
    "iamEndPointPasswordProperties": {
      "allOf": [
        {
          "properties": {
            "EnablePasswordExpiry": {
              "description": "Enables password expiry on the endpoint \n",
              "type": "boolean"
            },
            "EnforceStrongPassword": {
              "description": "Enables a strong password policy Strong password requirements: A. The password must have a minimum of 8 and a maximum of 20 characters. B. The password must not contain the User's Name. C. The password must contain characters from three of the following four categories. 1) English uppercase characters (A through Z). 2) English lowercase characters (a through z). 3) Base 10 digits (0 through 9). 4) Non-alphabetic characters (!, @, #, $, %, ^, &, *, -, _, +, =).\n",
              "type": "boolean"
            },
            "GracePeriod": {
              "description": "Time period until when you can use the existing password, after it expires \n",
              "format": "int64",
              "type": "integer"
            },
            "NotificationPeriod": {
              "description": "Specifies the duration by when the password will expire \n",
              "format": "int64",
              "type": "integer"
            },
            "PasswordExpiryDuration": {
              "description": "Set time period for password expiration. Value should be greater than notification period and grace period. \n",
              "format": "int64",
              "type": "integer"
            },
            "PasswordHistory": {
              "description": "Tracks password change history. Specifies in number of instances, that the new password was already used  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "Password properties for endpoint users\n",
      "title": "Iam:End Point Password Properties"
    },
    "iamEndPointUser": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "EndPointUserRole": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Name": {
              "description": "Username  \n",
              "type": "string"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            }
          },
          "type": "object"
        }
      ],
      "description": "Endpoint User or Local User\n",
      "title": "User"
    },
    "iamEndPointUserList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointUsers matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamEndPointUsers matching your request.",
          "items": {
            "$ref": "#/definitions/iamEndPointUser"
          },
          "type": "array"
        }
      }
    },
    "iamEndPointUserPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "EndPointUserRoles": {
              "description": "Relationship to the collection of Endpoint user roles\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "PasswordProperties": {
              "$ref": "#/definitions/iamEndPointPasswordProperties",
              "description": "Set password properties for endpoint users  \n"
            },
            "Profiles": {
              "description": "Relationship to the server profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Enables creation of local users on endpoints\n",
      "title": "Local User"
    },
    "iamEndPointUserPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointUserPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamEndPointUserPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/iamEndPointUserPolicy"
          },
          "type": "array"
        }
      }
    },
    "iamEndPointUserRole": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "ChangePassword": {
              "description": "Denotes whether password has changed \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Enabled": {
              "description": "Enables the user account on the endpoint \n",
              "type": "boolean"
            },
            "EndPointRole": {
              "description": "Roles\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "EndPointUser": {
              "$ref": "#/definitions/moMoRef",
              "description": "User\n"
            },
            "EndPointUserPolicy": {
              "$ref": "#/definitions/moMoRef"
            },
            "IsPasswordSet": {
              "type": "boolean"
            },
            "Password": {
              "description": "Password for the user  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Mapping of endpoint user to endpoint roles\n",
      "title": "Iam:End Point User Role"
    },
    "iamEndPointUserRoleList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointUserRoles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamEndPointUserRoles matching your request.",
          "items": {
            "$ref": "#/definitions/iamEndPointUserRole"
          },
          "type": "array"
        }
      }
    },
    "iamLdapBaseProperties": {
      "allOf": [
        {
          "properties": {
            "Attribute": {
              "description": "Role and locale information of the user \n",
              "type": "string"
            },
            "BaseDn": {
              "description": "Base Distinguished Name(DN). Starting point from where server will search for users and groups \n",
              "type": "string"
            },
            "BindDn": {
              "description": "Distinguished Name(DN) of the user, that is used to authenticate against LDAP servers \n",
              "type": "string"
            },
            "BindMethod": {
              "default": "LoginCredentials",
              "description": "Authentication method to access LDAP servers \n",
              "enum": [
                "LoginCredentials",
                "Anonymous",
                "ConfiguredCredentials"
              ],
              "type": "string"
            },
            "Domain": {
              "description": "The IPv4 domain that all users must be in \n",
              "type": "string"
            },
            "EnableEncryption": {
              "description": "If enabled, the endpoint encrypts all information it sends to the LDAP server \n",
              "type": "boolean"
            },
            "EnableGroupAuthorization": {
              "description": "If enabled, user authorization is also done at the group level for LDAP users not in the local user database \n",
              "type": "boolean"
            },
            "Filter": {
              "description": "Criteria to identify entries in search requests \n",
              "type": "string"
            },
            "GroupAttribute": {
              "description": "Groups to which an LDAP entry belongs \n",
              "type": "string"
            },
            "IsPasswordSet": {
              "type": "boolean"
            },
            "NestedGroupSearchDepth": {
              "description": "Search depth to look for a nested LDAP group in an LDAP group map \n",
              "format": "int64",
              "type": "integer"
            },
            "Password": {
              "description": "Password of the user \n",
              "type": "string"
            },
            "Timeout": {
              "description": "LDAP authentication timeout duration, in seconds  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "LDAP Base Settings\n",
      "title": "Iam:Ldap Base Properties"
    },
    "iamLdapDnsParameters": {
      "allOf": [
        {
          "properties": {
            "SearchDomain": {
              "description": "Domain name that acts as a source for a DNS query \n",
              "type": "string"
            },
            "SearchForest": {
              "description": "Forest name that acts as a source for a DNS query \n",
              "type": "string"
            },
            "Source": {
              "default": "Extracted",
              "description": "Specifies how to obtain the domain name used for the DNS SRV request  \n",
              "enum": [
                "Extracted",
                "Configured",
                "ConfiguredExtracted"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "DNS settings used to access LDAP Providers\n",
      "title": "Iam:Ldap Dns Parameters"
    },
    "iamLdapGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Domain": {
              "description": "The LDAP server domain the Group resides in \n",
              "type": "string"
            },
            "EndPointRole": {
              "description": "Roles\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "LdapPolicy": {
              "$ref": "#/definitions/moMoRef"
            },
            "Name": {
              "description": "LDAP Group name in the LDAP server database  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Mapping of LDAP Group to EndPointRoles\n",
      "title": "Iam:Ldap Group"
    },
    "iamLdapGroupList": {
      "properties": {
        "Count": {
          "description": "The number of iamLdapGroups matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamLdapGroups matching your request.",
          "items": {
            "$ref": "#/definitions/iamLdapGroup"
          },
          "type": "array"
        }
      }
    },
    "iamLdapPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "BaseProperties": {
              "$ref": "#/definitions/iamLdapBaseProperties",
              "description": "set LDAP base properties for the policy \n"
            },
            "DnsParameters": {
              "$ref": "#/definitions/iamLdapDnsParameters",
              "description": "Configuration settings to resolve LDAP servers, when DNS is enabled \n"
            },
            "EnableDns": {
              "description": "If enabled, DNS can be configured to access LDAP servers \n",
              "type": "boolean"
            },
            "Enabled": {
              "description": "If enabled, authentication is performed by the LDAP servers mentioned in the policy \n",
              "type": "boolean"
            },
            "Groups": {
              "description": "Relationship to collection of LDAP Groups\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Providers": {
              "description": "Relationship to collection of LDAP Providers\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "UserSearchPrecedence": {
              "default": "LocalUserDb",
              "description": "Search precedence between local user database and LDAP user database  \n",
              "enum": [
                "LocalUserDb",
                "LDAPUserDb"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "LDAP Policy\n",
      "title": "LDAP"
    },
    "iamLdapPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of iamLdapPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamLdapPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/iamLdapPolicy"
          },
          "type": "array"
        }
      }
    },
    "iamLdapProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "LdapPolicy": {
              "$ref": "#/definitions/moMoRef"
            },
            "Port": {
              "description": "LDAP Server Port \n",
              "format": "int64",
              "type": "integer"
            },
            "Server": {
              "description": "LDAP Server Address, can be IP address or hostname  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "LDAP Provider or LDAP Server used for user authentication\n",
      "title": "Iam:Ldap Provider"
    },
    "iamLdapProviderList": {
      "properties": {
        "Count": {
          "description": "The number of iamLdapProviders matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of iamLdapProviders matching your request.",
          "items": {
            "$ref": "#/definitions/iamLdapProvider"
          },
          "type": "array"
        }
      }
    },
    "ipmioverlanPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "Enabled": {
              "description": "State of the IPMI Over LAN service on the endpoint \n",
              "type": "boolean"
            },
            "EncryptionKey": {
              "description": "The encryption key to use for IPMI communication. It should have an even number of hexadecimal characters and not exceed 40 characters. \n",
              "type": "string"
            },
            "IsEncryptionKeySet": {
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Privilege": {
              "default": "admin",
              "description": "The highest privilege level that can be assigned to an IPMI session on a server  \n",
              "enum": [
                "admin",
                "user",
                "read-only"
              ],
              "type": "string"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "IPMI Over LAN Policy\n",
      "title": "IPMI Over LAN"
    },
    "ipmioverlanPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of ipmioverlanPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of ipmioverlanPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/ipmioverlanPolicy"
          },
          "type": "array"
        }
      }
    },
    "kvmPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "EnableLocalServerVideo": {
              "description": "If enabled, displays KVM session on any monitor attached to the server \n",
              "type": "boolean"
            },
            "EnableVideoEncryption": {
              "description": "If enabled, encrypts all video information sent through KVM \n",
              "type": "boolean"
            },
            "Enabled": {
              "description": "State of the vKVM service on the endpoint \n",
              "type": "boolean"
            },
            "MaximumSessions": {
              "description": "The maximum number of concurrent KVM sessions allowed. \n",
              "format": "int64",
              "type": "integer"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "RemotePort": {
              "description": "The port used for KVM communication  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "Policy to set the settings for KVM Launch\n",
      "title": "Virtual KVM"
    },
    "kvmPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of kvmPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of kvmPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/kvmPolicy"
          },
          "type": "array"
        }
      }
    },
    "networkconfigPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "AlternateIpv4dnsServer": {
              "description": "IP address of the secondary DNS server. \n",
              "type": "string"
            },
            "AlternateIpv6dnsServer": {
              "description": "IP address of the secondary DNS server. \n",
              "type": "string"
            },
            "DynamicDnsDomain": {
              "description": "The domain name appended to a hostname for a Dynamic DNS(DDNS) update. If left blank, only a hostname is sent to the DDNS update request. \n",
              "type": "string"
            },
            "EnableDynamicDns": {
              "description": "If enabled, updates the resource records to the DNS from Cisco IMC. \n",
              "type": "boolean"
            },
            "EnableIpv4dnsFromDhcp": {
              "description": "If enabled, Cisco IMC retrieves the DNS server addresses from DHCP. \n",
              "type": "boolean"
            },
            "EnableIpv6": {
              "description": "If enabled, allows to configure IPv6 properties. \n",
              "type": "boolean"
            },
            "EnableIpv6dnsFromDhcp": {
              "description": "If enabled, Cisco IMC retrieves the DNS server addresses from DHCP. \n",
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "PreferredIpv4dnsServer": {
              "description": "IP address of the primary DNS server. \n",
              "type": "string"
            },
            "PreferredIpv6dnsServer": {
              "description": "IP address of the primary DNS server.  \n",
              "type": "string"
            },
            "Profiles": {
              "description": "Relationship to the profile object.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Provides the options to enable/disable Dynamic DNS, add or update DNS settings for IPv4 and IPv6 on Cisco IMC.\n",
      "title": "Network Connectivity"
    },
    "networkconfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of networkconfigPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of networkconfigPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/networkconfigPolicy"
          },
          "type": "array"
        }
      }
    },
    "ntpPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "Enabled": {
              "description": "State of NTP service on the endpoint \n",
              "type": "boolean"
            },
            "NtpServers": {
              "description": "Collection of NTP Server IP addresses or hostnames  \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile objects\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "NTP Policy\n",
      "title": "NTP"
    },
    "ntpPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of ntpPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of ntpPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/ntpPolicy"
          },
          "type": "array"
        }
      }
    },
    "serverConfigChange": {
      "allOf": [
        {
          "properties": {
            "ConfigChangeTypes": {
              "description": "High level configuration change types. UCSM side's changes include -- \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "DiscruptionTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ConfigChangeTypes": {
              "description": "High level configuration change types. UCSM side's changes include -- \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "DiscruptionTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "ConfigChangeTypes": {
              "description": "High level configuration change types. UCSM side's changes include -- \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "DiscruptionTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents the pending configuration changes at the summary level.\n",
      "title": "Server:Config Change"
    },
    "smtpPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "Enabled": {
              "description": "If enabled, controls the state of the SMTP client service on the managed device \n",
              "type": "boolean"
            },
            "MinSeverity": {
              "default": "critical",
              "description": "Minimum fault severity level to receive email notifications. Email notifications are sent for all faults whose severity is equal to or greater than the chosen level. \n",
              "enum": [
                "critical",
                "condition",
                "warning",
                "minor",
                "major"
              ],
              "type": "string"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "SmtpPort": {
              "description": "Port number used by the SMTP server for outgoing SMTP communication \n",
              "format": "int64",
              "type": "integer"
            },
            "SmtpRecipients": {
              "description": "List of email addresses that will receive notifications for faults \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "SmtpServer": {
              "description": "IP address or hostname of the SMTP server. The SMTP server is used by the managed device to send email notifications.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Name of the SMTP Policy\n",
      "title": "SMTP"
    },
    "smtpPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of smtpPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of smtpPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/smtpPolicy"
          },
          "type": "array"
        }
      }
    },
    "snmpPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "AccessCommunityString": {
              "description": "The default SNMPv1 or SNMPv2c community name, or SNMPv3 username to include on any trap messages to the SNMP host. \n",
              "type": "string"
            },
            "CommunityAccess": {
              "default": "Disabled",
              "description": "This property controls access to the information in the inventory tables. SNMP Community Access is applicable only for SNMPv1 and SNMPv2c users. \n",
              "enum": [
                "Disabled",
                "Limited",
                "Full"
              ],
              "type": "string"
            },
            "Enabled": {
              "description": "State of the SNMP Policy on the endpoint. Decides whether the endpoint sends SNMP traps to the designated host. \n",
              "type": "boolean"
            },
            "EngineId": {
              "description": "User-defined unique identification of the static engine. \n",
              "type": "string"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "SnmpPort": {
              "description": "The port on which the SNMP agent runs. \n",
              "format": "int64",
              "type": "integer"
            },
            "SnmpTraps": {
              "description": "List of SNMP Traps \n",
              "items": {
                "$ref": "#/definitions/snmpTrap"
              },
              "type": "array"
            },
            "SnmpUsers": {
              "description": "List of SNMP Users \n",
              "items": {
                "$ref": "#/definitions/snmpUser"
              },
              "type": "array"
            },
            "SysContact": {
              "description": "Contact person for the SNMP implementation. \n",
              "type": "string"
            },
            "SysLocation": {
              "description": "Location of host where SNMP agent(server) runs. \n",
              "type": "string"
            },
            "TrapCommunity": {
              "description": "SNMP community group used for sending SNMP trap to other devices. Valid only for SNMPv2c users.  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "SNMP Policy\n",
      "title": "SNMP"
    },
    "snmpPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of snmpPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of snmpPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/snmpPolicy"
          },
          "type": "array"
        }
      }
    },
    "snmpTrap": {
      "allOf": [
        {
          "properties": {
            "Enabled": {
              "description": "Enables/disables the trap on the server \n",
              "type": "boolean"
            },
            "TrapDestination": {
              "description": "Address to which the SNMP trap information is sent. \n",
              "type": "string"
            },
            "TrapPort": {
              "description": "Port used by the server to communicate with trap destination. \n",
              "format": "int64",
              "type": "integer"
            },
            "TrapType": {
              "default": "Trap",
              "description": "Type of messages to send to the manager from the agent. \n",
              "enum": [
                "Trap",
                "Inform"
              ],
              "type": "string"
            },
            "TrapUser": {
              "description": "SNMP user for the trap. Applicable only to SNMPv3. \n",
              "type": "string"
            },
            "TrapVersion": {
              "default": "V3",
              "description": "SNMP version used for the trap.  \n",
              "enum": [
                "V3",
                "V2"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This complex type models a Trap message sent from the agent to the manager.\n",
      "title": "Snmp:Trap"
    },
    "snmpUser": {
      "allOf": [
        {
          "properties": {
            "AuthPassword": {
              "description": "Authorization password for the user. \n",
              "type": "string"
            },
            "AuthType": {
              "default": "NA",
              "description": "The protocol to be used for authenticating the user. \n",
              "enum": [
                "NA",
                "MD5",
                "SHA"
              ],
              "type": "string"
            },
            "PrivacyPassword": {
              "description": "Privacy password for SNMP user. \n",
              "type": "string"
            },
            "PrivacyType": {
              "default": "NA",
              "description": "The privacy protocol for the user. \n",
              "enum": [
                "NA",
                "DES",
                "AES"
              ],
              "type": "string"
            },
            "SecurityLevel": {
              "default": "AuthPriv",
              "description": "The security mechanism to be used for communication between agent and manager. \n",
              "enum": [
                "AuthPriv",
                "NoAuthNoPriv",
                "AuthNoPriv"
              ],
              "type": "string"
            },
            "SnmpUser": {
              "description": "SNMP user name  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This complex type models a User based security model for communication between agent and manager. Only applicable for SNMPv3.\n",
      "title": "Snmp:User"
    },
    "solPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "BaudRate": {
              "default": 9600,
              "description": "Baud Rate used for Serial Over LAN communication. \n",
              "enum": [
                9600,
                19200,
                38400,
                57600,
                115200
              ],
              "type": "integer"
            },
            "ComPort": {
              "default": "com0",
              "description": "Serial port through which the system routes Serial Over LAN communication. This field is available only on some Cisco UCS C-Series servers. If it is unavailable, the server uses COM port 0 by default. \n",
              "enum": [
                "com0",
                "com1"
              ],
              "type": "string"
            },
            "Enabled": {
              "description": "State of Serial Over LAN service on the endpoint \n",
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "SshPort": {
              "description": "SSH port used to access Serial Over LAN directly. Enables bypassing Cisco IMC shell to provide direct access to Serial Over LAN. Accepted values are between 1024 and 65535. The default value is 2400.  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "Serial Over LAN Policy\n",
      "title": "SOL"
    },
    "solPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of solPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of solPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/solPolicy"
          },
          "type": "array"
        }
      }
    },
    "sshPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "Enabled": {
              "description": "State of SSH service on the endpoint \n",
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Port": {
              "description": "Port used for secure shell access. The default value is 22. \n",
              "format": "int64",
              "type": "integer"
            },
            "Profiles": {
              "description": "Relationship to the server profile.\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "Timeout": {
              "description": "The number of seconds to wait before the system considers a SSH request to have timed out. Accepted values are between 60 and 10800. The default value is 1800 seconds.  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "Secure shell policy on the endpoint.\n",
      "title": "SSH"
    },
    "sshPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of sshPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of sshPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/sshPolicy"
          },
          "type": "array"
        }
      }
    },
    "vmediaMapping": {
      "allOf": [
        {
          "properties": {
            "AuthenticationProtocol": {
              "default": "none",
              "description": "Type of Authentication protocol when CIFS is used for communication with the remote server \n",
              "enum": [
                "none",
                "ntlm",
                "ntlmi",
                "ntlmv2",
                "ntlmv2i",
                "ntlmssp",
                "ntlmsspi"
              ],
              "type": "string"
            },
            "DeviceType": {
              "default": "Cdd",
              "description": "Type of remote vMedia device. \n",
              "enum": [
                "Cdd",
                "Hdd"
              ],
              "type": "string"
            },
            "HostName": {
              "description": "IP address or hostname of the remote server \n",
              "type": "string"
            },
            "IsPasswordSet": {
              "type": "boolean"
            },
            "MountOptions": {
              "description": "Mount options for the vMedia mount type \n",
              "type": "string"
            },
            "MountProtocol": {
              "default": "Nfs",
              "description": "Protocol to use to communicate with the remote server. \n",
              "enum": [
                "Nfs",
                "Cifs",
                "Http",
                "Https"
              ],
              "type": "string"
            },
            "Password": {
              "description": "Password associated with the username \n",
              "type": "string"
            },
            "RemoteFile": {
              "description": "Name of the ISO or other images \n",
              "type": "string"
            },
            "RemotePath": {
              "description": "Path to the location of the image on the remote server \n",
              "type": "string"
            },
            "Username": {
              "description": "Username to log in to the remote server \n",
              "type": "string"
            },
            "VolumeName": {
              "description": "Identity of the image for vMedia mapping  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Vmedia:Mapping"
    },
    "vmediaPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "Enabled": {
              "description": "State of the vMedia service on the endpoint \n",
              "type": "boolean"
            },
            "Encryption": {
              "description": "If enabled, allows encryption of all vMedia communications \n",
              "type": "boolean"
            },
            "LowPowerUsb": {
              "description": "Enables Low power USB \n",
              "type": "boolean"
            },
            "Mappings": {
              "description": "Adds a new vMedia mapping for images  \n",
              "items": {
                "$ref": "#/definitions/vmediaMapping"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile object\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "Virtual Media Policy\n",
      "title": "Virtual Media"
    },
    "vmediaPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vmediaPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of vmediaPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/vmediaPolicy"
          },
          "type": "array"
        }
      }
    },
    "hclCompatibilityInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AdapterBios": {
              "type": "string"
            },
            "DriverProtocol": {
              "description": "Protocol of the driver supported \n",
              "type": "string"
            },
            "DriverVendor": {
              "description": "Vendor of the driver supported \n",
              "type": "string"
            },
            "DriverVersion": {
              "description": "Version of the driver supported \n",
              "type": "string"
            },
            "Firmware": {
              "description": "firmware version of the product/adapter supported  \n",
              "type": "string"
            },
            "Notes": {
              "description": "a relation to the notes collection\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "OsVendor": {
              "description": "Vendor of the OS \n",
              "type": "string"
            },
            "OsVersion": {
              "description": "Version of the OS \n",
              "type": "string"
            },
            "ProcessorName": {
              "description": "Name of the processor \n",
              "type": "string"
            },
            "ProductId": {
              "description": "PID of the product/adapter \n",
              "type": "string"
            },
            "ProductModel": {
              "description": "Model of the product/adapter \n",
              "type": "string"
            },
            "ServerModel": {
              "description": "Server Model \n",
              "type": "string"
            },
            "ServerPid": {
              "description": "Server PID \n",
              "type": "string"
            },
            "UcsVersion": {
              "description": "ucs version \n",
              "type": "string"
            },
            "VersionType": {
              "description": "Type of the UCS version indicating whether it is a UCSM release vesion or a IMC release  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Collection used to store the copatibility matrix\n",
      "title": "Hcl:Compatibility Info"
    },
    "hclCompatibilityInfoList": {
      "properties": {
        "Count": {
          "description": "The number of hclCompatibilityInfos matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hclCompatibilityInfos matching your request.",
          "items": {
            "$ref": "#/definitions/hclCompatibilityInfo"
          },
          "type": "array"
        }
      }
    },
    "hclDataImportLog": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "CatalogName": {
              "description": "Name of the HCL Data File \n",
              "type": "string"
            },
            "CatalogUpdatedDate": {
              "description": "Date of the HCL Data update \n",
              "type": "string"
            },
            "CatalogVersion": {
              "description": "Version of the HCL Data \n",
              "type": "string"
            },
            "CheckSum": {
              "description": "Checksum of the HCL Data file MD5 checksum \n",
              "type": "string"
            },
            "FileCreateDate": {
              "description": "Date of the HCL Data file creation \n",
              "type": "string"
            },
            "ImportStartTime": {
              "description": "Timestamp of the data import process \n",
              "format": "date-time",
              "type": "string"
            },
            "ImportState": {
              "default": "None",
              "description": "Status of the import process \n",
              "enum": [
                "None",
                "InProgress",
                "Success",
                "Started",
                "Failed"
              ],
              "type": "string"
            },
            "LastUpdateTime": {
              "description": "Timestamp of the last sucessful commit  \n",
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This collection logs all the data import operations\n",
      "title": "Hcl:Data Import Log"
    },
    "hclDataImportLogList": {
      "properties": {
        "Count": {
          "description": "The number of hclDataImportLogs matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hclDataImportLogs matching your request.",
          "items": {
            "$ref": "#/definitions/hclDataImportLog"
          },
          "type": "array"
        }
      }
    },
    "hclNote": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Note": {
              "description": "a note which would give more info on a CompatiblityInfo   \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Collection used to store the notes used by the compatibility info nodes\n",
      "title": "Hcl:Note"
    },
    "hclNoteList": {
      "properties": {
        "Count": {
          "description": "The number of hclNotes matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of hclNotes matching your request.",
          "items": {
            "$ref": "#/definitions/hclNote"
          },
          "type": "array"
        }
      }
    },
    "aaaAuditRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/aaaAbstractAuditRecord"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "description": "The account of the user who performed the operation.\n",
              "readOnly": true
            },
            "InstId": {
              "description": "The instance id of AuditRecordLocal, which is used to identify if the comming AuditRecordLocal was already processed before. \n",
              "type": "string"
            },
            "Sessions": {
              "$ref": "#/definitions/moMoRef",
              "description": "The sessions of the user who performed the operation.\n",
              "readOnly": true
            },
            "SourceIp": {
              "description": "The source IP of the client \n",
              "type": "string"
            },
            "Timestamp": {
              "description": "The creation time of AuditRecordLocal, which is the time when the affected MO was created/modified/deleted  \n",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "User": {
              "$ref": "#/definitions/moMoRef",
              "description": "The user who performed the operation.\n",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "AuditRecord presents the configuration changes made by the user per transaction.\n",
      "title": "Aaa:Audit Record"
    },
    "aaaAuditRecordList": {
      "properties": {
        "Count": {
          "description": "The number of aaaAuditRecords matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of aaaAuditRecords matching your request.",
          "items": {
            "$ref": "#/definitions/aaaAuditRecord"
          },
          "type": "array"
        }
      }
    },
    "workflowBuildTaskMeta": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Name": {
              "type": "string"
            },
            "Src": {
              "type": "string"
            },
            "TaskList": {
              "type": "object"
            },
            "TaskType": {
              "type": "string"
            },
            "WorkflowType": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This MO contains relationship for tasks. It is used to dynamically generate a workflow\n",
      "title": "Workflow:Build Task Meta"
    },
    "workflowBuildTaskMetaList": {
      "properties": {
        "Count": {
          "description": "The number of workflowBuildTaskMeta matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of workflowBuildTaskMeta matching your request.",
          "items": {
            "$ref": "#/definitions/workflowBuildTaskMeta"
          },
          "type": "array"
        }
      }
    },
    "workflowTaskInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Descr": {
              "description": "The task description \n",
              "type": "string"
            },
            "EndTime": {
              "description": "The task starts time \n",
              "format": "date-time",
              "type": "string"
            },
            "FailureReason": {
              "description": "The reason for failure \n",
              "type": "string"
            },
            "Input": {
              "description": "The input of the task \n",
              "type": "object"
            },
            "InstId": {
              "description": "The current running task instance Id \n",
              "type": "string"
            },
            "Name": {
              "description": "A task type \n",
              "type": "string"
            },
            "Output": {
              "description": "The output of the task \n",
              "type": "object"
            },
            "RefName": {
              "description": "The task reference name to ensure its unique inside a workflow \n",
              "type": "string"
            },
            "RetryCount": {
              "description": "A counter for number of retries \n",
              "format": "int64",
              "type": "integer"
            },
            "StartTime": {
              "format": "date-time",
              "type": "string"
            },
            "Status": {
              "description": "The status of the task \n",
              "type": "string"
            },
            "TaskInstIdList": {
              "description": "The list keeps a list of retried task instances  \n",
              "items": {
                "$ref": "#/definitions/workflowTaskRetryInfo"
              },
              "type": "array"
            },
            "WorkflowInfo": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "This MO contains information for a task instance\n",
      "title": "Workflow:Task Info"
    },
    "workflowTaskInfoList": {
      "properties": {
        "Count": {
          "description": "The number of workflowTaskInfos matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of workflowTaskInfos matching your request.",
          "items": {
            "$ref": "#/definitions/workflowTaskInfo"
          },
          "type": "array"
        }
      }
    },
    "workflowTaskMeta": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ActionType": {
              "description": "A task execution type to indicate if it is a system task \n",
              "type": "string"
            },
            "Description": {
              "description": "A description of the task \n",
              "type": "string"
            },
            "InputKeys": {
              "description": "An input key for the task \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "Name": {
              "description": "A task name that should be unique in Conductor DB \n",
              "type": "string"
            },
            "OutputKeys": {
              "description": "An output key for the task \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ResponseTimeoutSec": {
              "description": "The worker respnose timeout value \n",
              "format": "int64",
              "type": "integer"
            },
            "RetryCount": {
              "description": "A number of reties for this task \n",
              "format": "int64",
              "type": "integer"
            },
            "RetryDelaySec": {
              "description": "The time on which the retry will be delayed \n",
              "format": "int64",
              "type": "integer"
            },
            "RetryLogic": {
              "description": "A logic which defines the way to handle retry (FIXED, EXPONENTIAL_BACKOFF) \n",
              "type": "string"
            },
            "Src": {
              "description": "A service owns the task metadata \n",
              "type": "string"
            },
            "TimeoutPolicy": {
              "description": "A policy which defines the way to handle timeout (RETRY, TIME_OUT_WF, ALERT_ONLY) \n",
              "type": "string"
            },
            "TimeoutSec": {
              "description": "A timeout value for the task ( in second )  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "This MO contains a task definition\n",
      "title": "Workflow:Task Meta"
    },
    "workflowTaskMetaList": {
      "properties": {
        "Count": {
          "description": "The number of workflowTaskMeta matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of workflowTaskMeta matching your request.",
          "items": {
            "$ref": "#/definitions/workflowTaskMeta"
          },
          "type": "array"
        }
      }
    },
    "workflowTaskRetryInfo": {
      "allOf": [
        {
          "properties": {
            "Status": {
              "description": "Retried task status \n",
              "type": "string"
            },
            "TaskInstId": {
              "description": "Retried task instance Id  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The struct is used for remenbering retrying task inforamtion\n",
      "title": "Workflow:Task Retry Info"
    },
    "workflowWorkflowInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "description": "An account owns the workflow instatnce\n",
              "readOnly": true
            },
            "EndTime": {
              "description": "The time on which the workflow is ended. \n",
              "format": "date-time",
              "type": "string"
            },
            "Input": {
              "description": "An input of the workflow \n",
              "type": "object"
            },
            "InstId": {
              "description": "A workflow instance Id \n",
              "type": "string"
            },
            "MetaVersion": {
              "description": "This is version of the workflow metadata \n",
              "type": "string"
            },
            "Name": {
              "description": "A name of the workflow \n",
              "type": "string"
            },
            "Output": {
              "description": "An output of the workflow \n",
              "type": "object"
            },
            "Progress": {
              "description": "This field indicates percetage of workflow task execution \n",
              "format": "float",
              "type": "number"
            },
            "StartTime": {
              "description": "The time on which the workflow is started. \n",
              "format": "date-time",
              "type": "string"
            },
            "Status": {
              "description": "A status of the workflow (RUNNING, WAITING, COMPLETED, TIME_OUT, FAILED) \n",
              "type": "string"
            },
            "TaskInfos": {
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            },
            "Type": {
              "description": "A type of the workflow (serverconfig, ansible_monitoring) \n",
              "readOnly": true,
              "type": "string"
            },
            "UserId": {
              "type": "string"
            },
            "WorkflowCtx": {
              "description": "The workflow workflow context which contains initiator and target information \n",
              "type": "object"
            },
            "WorkflowKey": {
              "description": "This key contains workflow, initiator and target name. Fusion uses the key to do workflow dedup \n",
              "type": "string"
            },
            "WorkflowTaskCount": {
              "description": "This attribute captures total workflow tasks  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "This MO contains information for a workflow instance\n",
      "title": "Workflow:Workflow Info"
    },
    "workflowWorkflowInfoList": {
      "properties": {
        "Count": {
          "description": "The number of workflowWorkflowInfos matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of workflowWorkflowInfos matching your request.",
          "items": {
            "$ref": "#/definitions/workflowWorkflowInfo"
          },
          "type": "array"
        }
      }
    },
    "workflowWorkflowMeta": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "description": "The account creates the workflow meta\n",
              "readOnly": true
            },
            "Description": {
              "description": "The workflow description \n",
              "type": "string"
            },
            "InputParameters": {
              "description": "The workflow input parameters \n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "Name": {
              "description": "The workflow name \n",
              "type": "string"
            },
            "OutputParameters": {
              "description": "The workflow output parameters \n",
              "type": "object"
            },
            "SchemaVersion": {
              "description": "The Conductor schema version that decides what attribute can be suported \n",
              "format": "int64",
              "type": "integer"
            },
            "Src": {
              "description": "The src is workflow owner service \n",
              "type": "string"
            },
            "Tasks": {
              "description": "The tasks contained inside of the workflow \n",
              "type": "object"
            },
            "Version": {
              "description": "The workflow version which indicate the workflow meta changes  \n",
              "format": "int64",
              "type": "integer"
            },
            "WorkflowTasks": {
              "description": "The list of tasks contained inside the workflow\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "This MO contains a workflow definition\n",
      "title": "Workflow:Workflow Meta"
    },
    "workflowWorkflowMetaList": {
      "properties": {
        "Count": {
          "description": "The number of workflowWorkflowMeta matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of workflowWorkflowMeta matching your request.",
          "items": {
            "$ref": "#/definitions/workflowWorkflowMeta"
          },
          "type": "array"
        }
      }
    },
    "workflowWorkflowTask": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "InputParams": {
              "type": "object"
            },
            "Name": {
              "type": "string"
            },
            "Optional": {
              "type": "boolean"
            },
            "TaskRefName": {
              "type": "string"
            },
            "Type": {
              "type": "string"
            },
            "Workflowmeta": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "This MO contains a definition for a workflow task\n",
      "title": "Workflow:Workflow Task"
    },
    "workflowWorkflowTaskList": {
      "properties": {
        "Count": {
          "description": "The number of workflowWorkflowTasks matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of workflowWorkflowTasks matching your request.",
          "items": {
            "$ref": "#/definitions/workflowWorkflowTask"
          },
          "type": "array"
        }
      }
    },
    "policyAttachableServiceObject": {
      "allOf": [
        {
          "properties": {
            "Name": {
              "description": "Name of foreign Mo that Policy can attach to  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Attachable Service Object"
    },
    "policyCategory": {
      "allOf": [
        {
          "properties": {
            "DisplayLabel": {
              "description": "Display Label for this Category \n",
              "type": "string"
            },
            "Name": {
              "description": "Category of this Policy  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Category"
    },
    "policyHardwarePlatform": {
      "allOf": [
        {
          "properties": {
            "DisplayLabel": {
              "description": "Display Label for Hardware Platform Constraint \n",
              "type": "string"
            },
            "ModelPattern": {
              "description": "Regex expression of applicable models \n",
              "type": "string"
            },
            "Name": {
              "description": "Name of Hardware Platform Constraint  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Hardware Platform"
    },
    "policyManagementPlatform": {
      "allOf": [
        {
          "properties": {
            "DisplayLabel": {
              "description": "Display Label for management platform \n",
              "type": "string"
            },
            "Name": {
              "description": "The management platform type this Policy applies to  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Management Platform"
    },
    "policyPolicyMeta": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "AttachableServiceObjects": {
              "description": "Name of foreign Mo's that Policy can attach to \n",
              "items": {
                "$ref": "#/definitions/policyAttachableServiceObject"
              },
              "type": "array"
            },
            "Categories": {
              "description": "Category of this Policy \n",
              "items": {
                "$ref": "#/definitions/policyCategory"
              },
              "type": "array"
            },
            "HardwarePlatforms": {
              "description": "Hardware Platform Constraints \n",
              "items": {
                "$ref": "#/definitions/policyHardwarePlatform"
              },
              "type": "array"
            },
            "ManagementPlatforms": {
              "description": "The Management Platform Type this Policy applies to \n",
              "items": {
                "$ref": "#/definitions/policyManagementPlatform"
              },
              "type": "array"
            },
            "Name": {
              "description": "Qualified Name of the Policy  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "Policy:Policy Meta"
    },
    "policyPolicyMetaList": {
      "properties": {
        "Count": {
          "description": "The number of policyPolicyMeta matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of policyPolicyMeta matching your request.",
          "items": {
            "$ref": "#/definitions/policyPolicyMeta"
          },
          "type": "array"
        }
      }
    },
    "taskFileDownloadInfo": {
      "allOf": [
        {
          "properties": {
            "Contents": {
              "description": "If the type of the download is inline, it will read the file from the contents here. \n",
              "type": "string"
            },
            "Path": {
              "description": "The path of the download from the specified source location (If type is S3, then this is the object key) \n",
              "type": "string"
            },
            "Source": {
              "description": "The source of the download location (If type is S3, then this is the bucket name) \n",
              "type": "string"
            },
            "Type": {
              "default": "S3",
              "description": "The type of download location  \n",
              "enum": [
                "S3",
                "Local",
                "Inline"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This type specifies a download path/location (supports S3 currently)\n",
      "title": "Task:File Download Info"
    },
    "taskWorkflowAction": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "Action": {
              "default": "start",
              "description": "action for workflow \n",
              "enum": [
                "start",
                "stop"
              ],
              "type": "string"
            },
            "InputParams": {
              "description": "json formatted string input parameters to workflow \n",
              "type": "string"
            },
            "IsDynamic": {
              "description": "If true, this workflow type will be triggered as a dynamic workflow, if not it will be treated as a static workflow. \n",
              "type": "boolean"
            },
            "WorkflowContext": {
              "description": "json formatted string that has the contents of the workflow context used when starting a workflow \n",
              "type": "string"
            },
            "WorkflowFile": {
              "$ref": "#/definitions/taskFileDownloadInfo",
              "description": "path to workflow metadata file that will be published and started  \n"
            }
          },
          "type": "object"
        }
      ],
      "title": "Task:Workflow Action"
    },
    "taskWorkflowActionList": {
      "properties": {
        "Count": {
          "description": "The number of taskWorkflowActions matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of taskWorkflowActions matching your request.",
          "items": {
            "$ref": "#/definitions/taskWorkflowAction"
          },
          "type": "array"
        }
      }
    },
    "storageDiskGroupPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "DedicatedHotSpares": {
              "description": "A collection of disks used as hot spares for this RAID group \n",
              "items": {
                "$ref": "#/definitions/storageLocalDisk"
              },
              "type": "array"
            },
            "EncryptionState": {
              "description": "Enables encryption of SEDs in the disk group if the encryption keys are configured in the Storage policy to which this disk group policy is associated. \n",
              "type": "boolean"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "RaidLevel": {
              "default": "Raid0",
              "description": "The supported RAID level for the disk group. \n",
              "enum": [
                "Raid0",
                "Raid1",
                "Raid5",
                "Raid6",
                "Raid10",
                "Raid50",
                "Raid60"
              ],
              "type": "string"
            },
            "SpanGroups": {
              "description": "Non spanned RAID levels like Raid0, Raid1, Raid5 and Raid6 expect a single group of disks whereas spanned RAID levels need multiple groups of disks with each group representing a span group. Non spanned RAID levels expect one span group and spanned RAID levels accept minimum 2 span groups and up to 8. \n",
              "items": {
                "$ref": "#/definitions/storageSpanGroup"
              },
              "type": "array"
            },
            "UseJbods": {
              "description": "Selected disks in the disk group in JBOD state will be set to Unconfigured Good state before they are used in virtual drive creation.  \n",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "description": "Models a reusable RAID disk group configuration that can be applied across multiple servers. Also provides options to move JBOD disks in the disk group to Unconfigured Good state before they are used in the disk group.\n",
      "title": "Disk Group"
    },
    "storageDiskGroupPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of storageDiskGroupPolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageDiskGroupPolicies matching your request.",
          "items": {
            "$ref": "#/definitions/storageDiskGroupPolicy"
          },
          "type": "array"
        }
      }
    },
    "storageLocalDisk": {
      "allOf": [
        {
          "properties": {
            "SlotNumber": {
              "description": "Specifies the slot number of the disk to be referenced. As this is a policy object, this slot number may or may not be valid depending on the number of disks in the associated server  \n",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "This models disks in the disk group\n",
      "title": "Storage:Local Disk"
    },
    "storageRemoteKeySetting": {
      "allOf": [
        {
          "properties": {
            "IsPasswordSet": {
              "type": "boolean"
            },
            "Password": {
              "description": "This property is used to specify password for the KMIP server login \n",
              "type": "string"
            },
            "Port": {
              "description": "This property is used to port to which the KMIP client should connect \n",
              "format": "int64",
              "type": "integer"
            },
            "PrimaryServer": {
              "description": "This property is used to store the address of the KMIP server. It could be an IPv4 address or an IPv6 address or hostname. Hostnames are valid only when Inband is configured for the CIMC address. \n",
              "type": "string"
            },
            "SecondaryServer": {
              "description": "This property is used to store the address of the KMIP server. It could be an IPv4 address or an IPv6 address or hostname. Hostnames are valid only when Inband is configured for the CIMC address. \n",
              "type": "string"
            },
            "ServerCertificate": {
              "description": "This property is used to store the certificate/ public key of the KMIP server This is required for initiating secure communication with the server \n",
              "type": "string"
            },
            "Username": {
              "description": "This property is used to specify user name for the KMIP server login  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This type models the remote key configurarion required for disks encryptions. KMIP is the only remote key protocol supported in the policy.\n",
      "title": "Remote Key Management"
    },
    "storageSpanGroup": {
      "allOf": [
        {
          "properties": {
            "Disks": {
              "description": "Collection of local disks that are part of this span group. The minimum number of disks needed in a span group varies based on RAID level. Raid0 requires at least one disk, Raid1 and Raid10 requires at least 2 and in multiples of 2, Raid5 Raid50 Raid6 and Raid60 require at least 3 disks in a span group.  \n",
              "items": {
                "$ref": "#/definitions/storageLocalDisk"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "This models a single span group of disks in a RAID group.\n",
      "title": "Storage:Span Group"
    },
    "storageStoragePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "properties": {
            "GlobalHotSpares": {
              "description": "A collection of disks used as hot spares globally for all the RAID groups  \n",
              "items": {
                "$ref": "#/definitions/storageLocalDisk"
              },
              "type": "array"
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            },
            "Profiles": {
              "description": "Relationship to the profile objects\n",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "type": "array"
            },
            "RetainPolicyVirtualDrives": {
              "description": "Retains the virtual drives defined in policy if they exist already. If this flag is false, the existing virtual drives are removed and created again based on virtual drives in the policy \n",
              "type": "boolean"
            },
            "UnusedDisksEncryptionState": {
              "description": "Enables the encryption of the unused disks if the policy is configured with remote key \n",
              "type": "boolean"
            },
            "UnusedDisksState": {
              "default": "UnconfiguredGood",
              "description": "This is used to specify the state, unconfigured good or jbod, in which the disks that are not used in this policy should be moved \n",
              "enum": [
                "UnconfiguredGood",
                "Jbod"
              ],
              "type": "string"
            },
            "VirtualDrives": {
              "description": "The list of virtual drives and the disk groups that need to be created through this policy  \n",
              "items": {
                "$ref": "#/definitions/storageVirtualDriveConfig"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "The storage policy models the reusable storage related configuration that can be applied on many servers. This policy allows creation of RAID groups using existing disk group policies and virtual drives on the drive groups. The user has options to move all unused disks to JBOD or Unconfigured good state. The encryption of drives can be enabled through this policy using remote keys from a KMIP server.\n",
      "title": "Storage"
    },
    "storageStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of storageStoragePolicies matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of storageStoragePolicies matching your request.",
          "items": {
            "$ref": "#/definitions/storageStoragePolicy"
          },
          "type": "array"
        }
      }
    },
    "storageVirtualDriveConfig": {
      "allOf": [
        {
          "properties": {
            "AccessPolicy": {
              "default": "Default",
              "description": "This property holds the access policy that host has on this virtual drive. \n",
              "enum": [
                "Default",
                "ReadWrite",
                "ReadOnly",
                "Blocked"
              ],
              "type": "string"
            },
            "BootDrive": {
              "description": "This flag enables the use of this virtual drive as a boot drive \n",
              "type": "boolean"
            },
            "DiskGroupPolicy": {
              "description": "Disk group policy that has the disk group in which this virtual drive needs to be created \n",
              "type": "string"
            },
            "DriveCache": {
              "default": "Default",
              "description": "This property expect disk cache policy. \n",
              "enum": [
                "Default",
                "NoChange",
                "Enable",
                "Disable"
              ],
              "type": "string"
            },
            "ExpandToAvailable": {
              "description": "This flag enables this virtual drive to use all the available space in the disk group. When this flag is configured, the size property is ignored. \n",
              "type": "boolean"
            },
            "IoPolicy": {
              "default": "Default",
              "description": "This property expects the desired IO mode - direct IO or cached IO. \n",
              "enum": [
                "Default",
                "Direct",
                "Cached"
              ],
              "type": "string"
            },
            "Name": {
              "description": "The name of the virtual drive \n",
              "type": "string",
              "x-createOnly": true
            },
            "ReadPolicy": {
              "default": "Default",
              "description": "This property holds the read ahead mode to be used. \n",
              "enum": [
                "Default",
                "ReadAhead",
                "NoReadAhead"
              ],
              "type": "string"
            },
            "Size": {
              "description": "Virtual drive size in MB. This is a required field unless expandToAvailable is set to true \n",
              "format": "int64",
              "type": "integer"
            },
            "WritePolicy": {
              "default": "Default",
              "description": "This property holds the write mode used to write the data in this virtual drive.  \n",
              "enum": [
                "Default",
                "WriteThrough",
                "WriteBackGoodBbu",
                "AlwaysWriteBack"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This type models a single virtual drive that needs to be created through this policy.\n",
      "title": "Virtual Drive"
    },
    "serverConfigChangeDetail": {
      "allOf": [
        {
          "properties": {
            "ConfigChangeContext": {
              "$ref": "#/definitions/policyConfigResultContext"
            },
            "ConfigChangeType": {
              "type": "string"
            },
            "DisruptionType": {
              "type": "string"
            },
            "Message": {
              "type": "string"
            },
            "MessageParams": {
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents the configuration change detail entry.\n",
      "title": "Server:Config Change Detail"
    },
    "serverConfigResult": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResult"
        },
        {
          "properties": {
            "Profile": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Represents the results with the overall state and detailed result messages.\n",
      "title": "Server:Config Result"
    },
    "serverConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of serverConfigResults matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of serverConfigResults matching your request.",
          "items": {
            "$ref": "#/definitions/serverConfigResult"
          },
          "type": "array"
        }
      }
    },
    "serverProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigProfile"
        },
        {
          "properties": {
            "AssignedServer": {
              "$ref": "#/definitions/moMoRef",
              "description": "The assigned physical server to the profile. A physical server can be assigned to more than one server profiles as long as it is only associated with one\n"
            },
            "AssociatedServer": {
              "$ref": "#/definitions/moMoRef",
              "description": "The associated physical server to the profile. A physical server can only be associated to one server profiles\n",
              "readOnly": true
            },
            "ConfigChangeDetails": {
              "$ref": "#/definitions/moMoRef",
              "description": "Represents the configuration change details\n",
              "readOnly": true
            },
            "ConfigChanges": {
              "$ref": "#/definitions/serverConfigChange",
              "description": "Represents the pending configuration changes at the summary level. Detail changes save in configChangeDetails as a separate object  \n"
            },
            "ConfigResult": {
              "$ref": "#/definitions/moMoRef",
              "description": "Represents the configuration (including deploy, undeploy, compliance-check) results. The errors usually are detected and reported during the apply/deploy phases\n",
              "readOnly": true
            },
            "Organization": {
              "$ref": "#/definitions/moMoRef",
              "description": "Organization\n"
            }
          },
          "type": "object"
        }
      ],
      "title": "Server Profile"
    },
    "serverProfileList": {
      "properties": {
        "Count": {
          "description": "The number of serverProfiles matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of serverProfiles matching your request.",
          "items": {
            "$ref": "#/definitions/serverProfile"
          },
          "type": "array"
        }
      }
    },
    "cryptEncryptionToken": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "AccountKey": {
              "$ref": "#/definitions/moMoRef"
            },
            "SessionId": {
              "description": "The encryption token is created for every user session (web or API), workflow or device connection. This field uniquely identifies the session \n",
              "readOnly": true,
              "type": "string"
            },
            "Token": {
              "description": "The token to authenticate (user) session or device for encrypting/decrypting sensitive information. \n",
              "readOnly": true,
              "type": "string"
            },
            "TokenAccessor": {
              "description": "The token accessor within the vault. Used to identify the token within vault. \n",
              "readOnly": true,
              "type": "string"
            },
            "Wrapped": {
              "description": "This indicates whether token is wrapped or not. When token is wrapped, it needs to be unwrapped before use  \n",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "description": "This is the token used by any service to authenticate with encryption service to encrypt or decrypt secure Mo properties.  The lifetime of the token is generally tied to lifetime of user session or device connection  However, in case of user triggers workflows, the token would be needed even after the user logs off. The encryption token is created by Encryption service when (user or device) session is created  (i.e user logon or device connects to Intersight) or when user triggers a workflow.   Once created, the token is valid for duration of 1 hour and will expire if not renewed. To avoid expiry, token needs to be renewed. The renewal is done by the encryption service for user, device  and workflows based on notifications from the respective services (i.e Barracuda, Astro and Fusion) When user logs off or user session times out (i.e. session is deleted), the token associated with  the (user) session is also deleted. Similarly, when a device disconnects from Intersight, the  token is deleted. However, any token created due to user triggering a workflow stays as long as workflow completes. The token is added to the security context at Barracuda (user sessions), Astro (devices) and  Fusion (workflows) and passed to downstream services. These services invoke encryption service  APIs such as encrypt or decrypt with this token along with data (like password). When user saves a secure property (e.g password), the service owning this MO (and property) invokes the encryption service with the token (passed through security context) & (cleartext)  password it received through the security context. The encryption service uses Hashicorp Vault's transit  backend to encrypt/decrypt property using a Key derived from Account Key (each account has a Key)  and Master Key (Intersight). The ciphertext returned by encryption service is persisted to database. When workflows are scheduled to run, the requests are sent to the service owning the MO, which invokes the encryption service with the token (passed through security context) and  encrypted password it read from the database. The encryption service decrypt it with a key derived from Account Key (each account has a Key) and Master Key (Intersight). The cleartext data is  returned which is used by the service to provision the devices. If workflows are scheduled in  the future or take a long time to complete, Encryption service will renew the token as long as Fusion notifies that the token needs to be kept alive. This is similar to what Barracuda or Astro need to do for user and device sessions respectively.\n",
      "title": "Crypt:Encryption Token"
    },
    "cryptEncryptionTokenList": {
      "properties": {
        "Count": {
          "description": "The number of cryptEncryptionTokens matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of cryptEncryptionTokens matching your request.",
          "items": {
            "$ref": "#/definitions/cryptEncryptionToken"
          },
          "type": "array"
        }
      }
    },
    "externalsiteAuthorization": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "description": "Account relation\n",
              "readOnly": true
            },
            "IsPasswordSet": {
              "type": "boolean"
            },
            "IsUserIdSet": {
              "type": "boolean"
            },
            "Password": {
              "description": "User password for the external site \n",
              "type": "string"
            },
            "RepositoryType": {
              "default": "cisco",
              "description": "Repositry the user credentials are for \n",
              "enum": [
                "cisco"
              ],
              "type": "string"
            },
            "UserId": {
              "description": "User id for the external site  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Authorization input for the external site\n",
      "title": "Externalsite:Authorization"
    },
    "externalsiteAuthorizationList": {
      "properties": {
        "Count": {
          "description": "The number of externalsiteAuthorizations matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of externalsiteAuthorizations matching your request.",
          "items": {
            "$ref": "#/definitions/externalsiteAuthorization"
          },
          "type": "array"
        }
      }
    },
    "firmwareDistributable": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "BundleType": {
              "description": "Bundle type of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Description": {
              "description": "Description of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Guid": {
              "description": "Guid of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Md5sum": {
              "description": "MD5 sum of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Mdfid": {
              "description": "Mdfid of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Model": {
              "description": "Model of the endpoint the firmware image is for \n",
              "readOnly": true,
              "type": "string"
            },
            "Name": {
              "description": "Iso image name of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "PlatformType": {
              "description": "Platform type of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "ReleaseDate": {
              "description": "Release date of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Size": {
              "description": "Size of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "SoftwareTypeId": {
              "description": "Software type Id of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Source": {
              "default": "CCO",
              "description": "Source of firmware images \n",
              "enum": [
                "CCO"
              ],
              "readOnly": true,
              "type": "string"
            },
            "SupportedModels": {
              "description": "Supported models of the endpoint the firmware image is for \n",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "type": "array"
            },
            "Vendor": {
              "description": "Vendor of the firmware image \n",
              "readOnly": true,
              "type": "string"
            },
            "Version": {
              "description": "Version of the firmware image  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Meta data of firmware images from CCO\n",
      "title": "Firmware:Distributable"
    },
    "firmwareDistributableList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareDistributables matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of firmwareDistributables matching your request.",
          "items": {
            "$ref": "#/definitions/firmwareDistributable"
          },
          "type": "array"
        }
      }
    },
    "firmwareEula": {
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "properties": {
            "Accepted": {
              "description": "EULA acceptance status for the user to download firmware image \n",
              "readOnly": true,
              "type": "boolean"
            },
            "Account": {
              "$ref": "#/definitions/moMoRef",
              "description": "Account relation\n",
              "readOnly": true
            },
            "Content": {
              "description": "EULA acceptance form for the user to download firmware image  \n",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "ASD EULA status for the account\n",
      "title": "Firmware:Eula"
    },
    "firmwareEulaList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareEulas matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of firmwareEulas matching your request.",
          "items": {
            "$ref": "#/definitions/firmwareEula"
          },
          "type": "array"
        }
      }
    },
    "computeServerConfig": {
      "allOf": [
        {
          "properties": {
            "AssetTag": {
              "description": "User defined asset tag of the server \n",
              "type": "string"
            },
            "UserLabel": {
              "description": "User defined description of the server  \n",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "This captures the configurable properties of servers common to both a server and a server profile. The user will apply these properties on a server directly when the server is not associated with a server profile and through a server profile when the server is attached with a server profile.\n",
      "title": "Compute:Server Config"
    },
    "computeServerSetting": {
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "properties": {
            "AdminLocatorLedState": {
              "default": "None",
              "description": "User configured state of the locator LED for the server \n",
              "enum": [
                "None",
                true,
                false
              ],
              "type": "string"
            },
            "AdminPowerState": {
              "default": "Policy",
              "description": "User configured power state of the server \n",
              "enum": [
                "Policy",
                "PowerOn",
                "PowerOff",
                "PowerCycle",
                "HardReset",
                "Shutdown",
                "Reboot"
              ],
              "type": "string"
            },
            "ConfigState": {
              "default": "Applied",
              "description": "The configured state of these settings in the target server. The value is any one of Applied, Applying, Failed. Applied - This state denotes that the settings are applied successfully in the target server Applying - This state denotes that the settings are being applied in the target server Failed - This state denotes that the settings could not be applied in the target server \n",
              "enum": [
                "Applied",
                "Applying",
                "Failed"
              ],
              "readOnly": true,
              "type": "string"
            },
            "LocatorLed": {
              "$ref": "#/definitions/moMoRef",
              "description": "This relation stores a reference to locator LED MO of this server\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/moMoRef",
              "description": "This relation stores the device end point from which this server was discovered\n",
              "readOnly": true
            },
            "Server": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true
            },
            "ServerConfig": {
              "$ref": "#/definitions/computeServerConfig",
              "description": "The common server configurable properties between a server and a server profile  \n"
            }
          },
          "type": "object"
        }
      ],
      "description": "This abstract MO models the configurable properties of a server in Intersight.\n",
      "title": "Server Settings"
    },
    "computeServerSettingList": {
      "properties": {
        "Count": {
          "description": "The number of computeServerSettings matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "Results": {
          "description": "The array of computeServerSettings matching your request.",
          "items": {
            "$ref": "#/definitions/computeServerSetting"
          },
          "type": "array"
        }
      }
    }
  },
  "host": "ucs.cisco.com",
  "info": {
    "description": "This is the Intersight REST API",
    "title": "Intersight API",
    "version": "1.0.0"
  },
  "paths": {
    "/meta/Definitions": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of metaDefinitions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/metaDefinitionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of metaDefinitions",
        "tags": [
          "metaDefinition"
        ]
      }
    },
    "/meta/Definitions/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the metaDefinition instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of metaDefinition",
            "schema": {
              "$ref": "#/definitions/metaDefinition"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of metaDefinition",
        "tags": [
          "metaDefinition"
        ]
      }
    },
    "/firmware/UpgradeStatuses": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareUpgradeStatuses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareUpgradeStatusList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of firmwareUpgradeStatuses",
        "tags": [
          "firmwareUpgradeStatus"
        ]
      }
    },
    "/firmware/UpgradeStatuses/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the firmwareUpgradeStatus instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareUpgradeStatus",
            "schema": {
              "$ref": "#/definitions/firmwareUpgradeStatus"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of firmwareUpgradeStatus",
        "tags": [
          "firmwareUpgradeStatus"
        ]
      }
    },
    "/firmware/Upgrades": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareUpgrades for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareUpgradeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of firmwareUpgrades",
        "tags": [
          "firmwareUpgrade"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "firmwareUpgrade to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareUpgrade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a firmwareUpgrade",
        "tags": [
          "firmwareUpgrade"
        ]
      }
    },
    "/firmware/Upgrades/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the firmwareUpgrade instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of firmwareUpgrade",
        "tags": [
          "firmwareUpgrade"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the firmwareUpgrade instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareUpgrade",
            "schema": {
              "$ref": "#/definitions/firmwareUpgrade"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of firmwareUpgrade",
        "tags": [
          "firmwareUpgrade"
        ]
      }
    },
    "/asset/DeviceClaims": {
      "post": {
        "parameters": [
          {
            "description": "assetDeviceClaim to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceClaim"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a assetDeviceClaim",
        "tags": [
          "assetDeviceClaim"
        ]
      }
    },
    "/asset/DeviceClaims/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the assetDeviceClaim instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of assetDeviceClaim",
        "tags": [
          "assetDeviceClaim"
        ]
      }
    },
    "/asset/DeviceRegistrations": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetDeviceRegistrations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistrationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of assetDeviceRegistrations",
        "tags": [
          "assetDeviceRegistration"
        ]
      }
    },
    "/asset/DeviceRegistrations/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the assetDeviceRegistration instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of assetDeviceRegistration",
        "tags": [
          "assetDeviceRegistration"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the assetDeviceRegistration instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetDeviceRegistration",
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistration"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of assetDeviceRegistration",
        "tags": [
          "assetDeviceRegistration"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the assetDeviceRegistration instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "assetDeviceRegistration to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of assetDeviceRegistration",
        "tags": [
          "assetDeviceRegistration"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the assetDeviceRegistration instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "assetDeviceRegistration to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of assetDeviceRegistration",
        "tags": [
          "assetDeviceRegistration"
        ]
      }
    },
    "/hyperflex/AutoSupportPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexAutoSupportPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexAutoSupportPolicies",
        "tags": [
          "hyperflexAutoSupportPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexAutoSupportPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexAutoSupportPolicy",
        "tags": [
          "hyperflexAutoSupportPolicy"
        ]
      }
    },
    "/hyperflex/AutoSupportPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexAutoSupportPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexAutoSupportPolicy",
        "tags": [
          "hyperflexAutoSupportPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexAutoSupportPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexAutoSupportPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexAutoSupportPolicy",
        "tags": [
          "hyperflexAutoSupportPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexAutoSupportPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexAutoSupportPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexAutoSupportPolicy",
        "tags": [
          "hyperflexAutoSupportPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexAutoSupportPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexAutoSupportPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexAutoSupportPolicy",
        "tags": [
          "hyperflexAutoSupportPolicy"
        ]
      }
    },
    "/hyperflex/ClusterNetworkPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusterNetworkPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexClusterNetworkPolicies",
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexClusterNetworkPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexClusterNetworkPolicy",
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ]
      }
    },
    "/hyperflex/ClusterNetworkPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterNetworkPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexClusterNetworkPolicy",
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterNetworkPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexClusterNetworkPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexClusterNetworkPolicy",
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterNetworkPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexClusterNetworkPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexClusterNetworkPolicy",
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterNetworkPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexClusterNetworkPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexClusterNetworkPolicy",
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ]
      }
    },
    "/hyperflex/ClusterProfiles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusterProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexClusterProfiles",
        "tags": [
          "hyperflexClusterProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexClusterProfile to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexClusterProfile",
        "tags": [
          "hyperflexClusterProfile"
        ]
      }
    },
    "/hyperflex/ClusterProfiles/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexClusterProfile",
        "tags": [
          "hyperflexClusterProfile"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexClusterProfile",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexClusterProfile",
        "tags": [
          "hyperflexClusterProfile"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexClusterProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexClusterProfile",
        "tags": [
          "hyperflexClusterProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexClusterProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexClusterProfile",
        "tags": [
          "hyperflexClusterProfile"
        ]
      }
    },
    "/hyperflex/ClusterStoragePolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusterStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexClusterStoragePolicies",
        "tags": [
          "hyperflexClusterStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexClusterStoragePolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexClusterStoragePolicy",
        "tags": [
          "hyperflexClusterStoragePolicy"
        ]
      }
    },
    "/hyperflex/ClusterStoragePolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexClusterStoragePolicy",
        "tags": [
          "hyperflexClusterStoragePolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexClusterStoragePolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexClusterStoragePolicy",
        "tags": [
          "hyperflexClusterStoragePolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexClusterStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexClusterStoragePolicy",
        "tags": [
          "hyperflexClusterStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexClusterStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexClusterStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexClusterStoragePolicy",
        "tags": [
          "hyperflexClusterStoragePolicy"
        ]
      }
    },
    "/hyperflex/ConfigResults": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexConfigResults",
        "tags": [
          "hyperflexConfigResult"
        ]
      }
    },
    "/hyperflex/ConfigResults/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexConfigResult instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexConfigResult",
            "schema": {
              "$ref": "#/definitions/hyperflexConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexConfigResult",
        "tags": [
          "hyperflexConfigResult"
        ]
      }
    },
    "/hyperflex/ExtFcStoragePolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexExtFcStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexExtFcStoragePolicies",
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexExtFcStoragePolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexExtFcStoragePolicy",
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ]
      }
    },
    "/hyperflex/ExtFcStoragePolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtFcStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexExtFcStoragePolicy",
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtFcStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexExtFcStoragePolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexExtFcStoragePolicy",
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtFcStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexExtFcStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexExtFcStoragePolicy",
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtFcStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexExtFcStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexExtFcStoragePolicy",
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ]
      }
    },
    "/hyperflex/ExtIscsiStoragePolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexExtIscsiStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexExtIscsiStoragePolicies",
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexExtIscsiStoragePolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexExtIscsiStoragePolicy",
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ]
      }
    },
    "/hyperflex/ExtIscsiStoragePolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtIscsiStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexExtIscsiStoragePolicy",
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtIscsiStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexExtIscsiStoragePolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexExtIscsiStoragePolicy",
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtIscsiStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexExtIscsiStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexExtIscsiStoragePolicy",
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexExtIscsiStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexExtIscsiStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexExtIscsiStoragePolicy",
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ]
      }
    },
    "/hyperflex/LocalCredentialPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexLocalCredentialPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexLocalCredentialPolicies",
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexLocalCredentialPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexLocalCredentialPolicy",
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ]
      }
    },
    "/hyperflex/LocalCredentialPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexLocalCredentialPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexLocalCredentialPolicy",
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexLocalCredentialPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexLocalCredentialPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexLocalCredentialPolicy",
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexLocalCredentialPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexLocalCredentialPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexLocalCredentialPolicy",
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexLocalCredentialPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexLocalCredentialPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexLocalCredentialPolicy",
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ]
      }
    },
    "/hyperflex/NodeConfigPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexNodeConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexNodeConfigPolicies",
        "tags": [
          "hyperflexNodeConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexNodeConfigPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexNodeConfigPolicy",
        "tags": [
          "hyperflexNodeConfigPolicy"
        ]
      }
    },
    "/hyperflex/NodeConfigPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexNodeConfigPolicy",
        "tags": [
          "hyperflexNodeConfigPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexNodeConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexNodeConfigPolicy",
        "tags": [
          "hyperflexNodeConfigPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexNodeConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexNodeConfigPolicy",
        "tags": [
          "hyperflexNodeConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexNodeConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexNodeConfigPolicy",
        "tags": [
          "hyperflexNodeConfigPolicy"
        ]
      }
    },
    "/hyperflex/NodeProfiles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexNodeProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexNodeProfiles",
        "tags": [
          "hyperflexNodeProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexNodeProfile to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexNodeProfile",
        "tags": [
          "hyperflexNodeProfile"
        ]
      }
    },
    "/hyperflex/NodeProfiles/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexNodeProfile",
        "tags": [
          "hyperflexNodeProfile"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexNodeProfile",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexNodeProfile",
        "tags": [
          "hyperflexNodeProfile"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexNodeProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexNodeProfile",
        "tags": [
          "hyperflexNodeProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexNodeProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexNodeProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexNodeProfile",
        "tags": [
          "hyperflexNodeProfile"
        ]
      }
    },
    "/hyperflex/SysConfigPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexSysConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexSysConfigPolicies",
        "tags": [
          "hyperflexSysConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexSysConfigPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexSysConfigPolicy",
        "tags": [
          "hyperflexSysConfigPolicy"
        ]
      }
    },
    "/hyperflex/SysConfigPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexSysConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexSysConfigPolicy",
        "tags": [
          "hyperflexSysConfigPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexSysConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexSysConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexSysConfigPolicy",
        "tags": [
          "hyperflexSysConfigPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexSysConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexSysConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexSysConfigPolicy",
        "tags": [
          "hyperflexSysConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexSysConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexSysConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexSysConfigPolicy",
        "tags": [
          "hyperflexSysConfigPolicy"
        ]
      }
    },
    "/hyperflex/UcsmConfigPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexUcsmConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexUcsmConfigPolicies",
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexUcsmConfigPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexUcsmConfigPolicy",
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ]
      }
    },
    "/hyperflex/UcsmConfigPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexUcsmConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexUcsmConfigPolicy",
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexUcsmConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexUcsmConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexUcsmConfigPolicy",
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexUcsmConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexUcsmConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexUcsmConfigPolicy",
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexUcsmConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexUcsmConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexUcsmConfigPolicy",
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ]
      }
    },
    "/hyperflex/VcenterConfigPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexVcenterConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexVcenterConfigPolicies",
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexVcenterConfigPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexVcenterConfigPolicy",
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ]
      }
    },
    "/hyperflex/VcenterConfigPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexVcenterConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexVcenterConfigPolicy",
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexVcenterConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexVcenterConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexVcenterConfigPolicy",
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexVcenterConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexVcenterConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexVcenterConfigPolicy",
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexVcenterConfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexVcenterConfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexVcenterConfigPolicy",
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ]
      }
    },
    "/iam/Accounts": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamAccounts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamAccountList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamAccounts",
        "tags": [
          "iamAccount"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamAccount to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAccount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamAccount",
        "tags": [
          "iamAccount"
        ]
      }
    },
    "/iam/Accounts/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamAccount instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamAccount",
        "tags": [
          "iamAccount"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamAccount instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamAccount",
            "schema": {
              "$ref": "#/definitions/iamAccount"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamAccount",
        "tags": [
          "iamAccount"
        ]
      }
    },
    "/iam/ApiKeys": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamApiKeys for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamApiKeyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamApiKeys",
        "tags": [
          "iamApiKey"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamApiKey to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamApiKey",
        "tags": [
          "iamApiKey"
        ]
      }
    },
    "/iam/ApiKeys/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamApiKey instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamApiKey",
        "tags": [
          "iamApiKey"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamApiKey instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamApiKey",
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamApiKey",
        "tags": [
          "iamApiKey"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamApiKey instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamApiKey to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamApiKey",
        "tags": [
          "iamApiKey"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamApiKey instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamApiKey to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamApiKey",
        "tags": [
          "iamApiKey"
        ]
      }
    },
    "/iam/EndPointPrivileges": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointPrivileges for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointPrivilegeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamEndPointPrivileges",
        "tags": [
          "iamEndPointPrivilege"
        ]
      }
    },
    "/iam/EndPointPrivileges/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointPrivilege instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointPrivilege",
            "schema": {
              "$ref": "#/definitions/iamEndPointPrivilege"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamEndPointPrivilege",
        "tags": [
          "iamEndPointPrivilege"
        ]
      }
    },
    "/iam/EndPointRoles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointRoleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamEndPointRoles",
        "tags": [
          "iamEndPointRole"
        ]
      }
    },
    "/iam/EndPointRoles/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointRole instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointRole",
            "schema": {
              "$ref": "#/definitions/iamEndPointRole"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamEndPointRole",
        "tags": [
          "iamEndPointRole"
        ]
      }
    },
    "/iam/IdpReferences": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamIdpReferences for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamIdpReferenceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamIdpReferences",
        "tags": [
          "iamIdpReference"
        ]
      }
    },
    "/iam/IdpReferences/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamIdpReference instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamIdpReference",
            "schema": {
              "$ref": "#/definitions/iamIdpReference"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamIdpReference",
        "tags": [
          "iamIdpReference"
        ]
      }
    },
    "/iam/Idps": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamIdps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamIdpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamIdps",
        "tags": [
          "iamIdp"
        ]
      }
    },
    "/iam/Idps/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamIdp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamIdp",
            "schema": {
              "$ref": "#/definitions/iamIdp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamIdp",
        "tags": [
          "iamIdp"
        ]
      }
    },
    "/iam/Permissions": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPermissions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPermissionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamPermissions",
        "tags": [
          "iamPermission"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamPermission to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamPermission",
        "tags": [
          "iamPermission"
        ]
      }
    },
    "/iam/Permissions/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamPermission instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamPermission",
        "tags": [
          "iamPermission"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamPermission instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPermission",
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamPermission",
        "tags": [
          "iamPermission"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamPermission instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamPermission to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamPermission",
        "tags": [
          "iamPermission"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamPermission instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamPermission to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamPermission",
        "tags": [
          "iamPermission"
        ]
      }
    },
    "/iam/PrivilegeSets": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPrivilegeSets for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPrivilegeSetList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamPrivilegeSets",
        "tags": [
          "iamPrivilegeSet"
        ]
      }
    },
    "/iam/PrivilegeSets/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamPrivilegeSet instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPrivilegeSet",
            "schema": {
              "$ref": "#/definitions/iamPrivilegeSet"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamPrivilegeSet",
        "tags": [
          "iamPrivilegeSet"
        ]
      }
    },
    "/iam/Privileges": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPrivileges for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPrivilegeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamPrivileges",
        "tags": [
          "iamPrivilege"
        ]
      }
    },
    "/iam/Privileges/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamPrivilege instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPrivilege",
            "schema": {
              "$ref": "#/definitions/iamPrivilege"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamPrivilege",
        "tags": [
          "iamPrivilege"
        ]
      }
    },
    "/iam/Qualifiers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamQualifiers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamQualifierList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamQualifiers",
        "tags": [
          "iamQualifier"
        ]
      }
    },
    "/iam/Qualifiers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamQualifier instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamQualifier",
            "schema": {
              "$ref": "#/definitions/iamQualifier"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamQualifier",
        "tags": [
          "iamQualifier"
        ]
      }
    },
    "/iam/ResourceLimits": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamResourceLimits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamResourceLimitsList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamResourceLimits",
        "tags": [
          "iamResourceLimits"
        ]
      }
    },
    "/iam/ResourceLimits/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamResourceLimits instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamResourceLimits",
            "schema": {
              "$ref": "#/definitions/iamResourceLimits"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamResourceLimits",
        "tags": [
          "iamResourceLimits"
        ]
      }
    },
    "/iam/Roles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamRoleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamRoles",
        "tags": [
          "iamRole"
        ]
      }
    },
    "/iam/Roles/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamRole instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamRole",
            "schema": {
              "$ref": "#/definitions/iamRole"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamRole",
        "tags": [
          "iamRole"
        ]
      }
    },
    "/iam/SessionLimits": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSessionLimits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSessionLimitsList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamSessionLimits",
        "tags": [
          "iamSessionLimits"
        ]
      }
    },
    "/iam/SessionLimits/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamSessionLimits instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSessionLimits",
            "schema": {
              "$ref": "#/definitions/iamSessionLimits"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamSessionLimits",
        "tags": [
          "iamSessionLimits"
        ]
      }
    },
    "/iam/Sessions": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSessions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSessionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamSessions",
        "tags": [
          "iamSession"
        ]
      }
    },
    "/iam/Sessions/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamSession instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamSession",
        "tags": [
          "iamSession"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamSession instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSession",
            "schema": {
              "$ref": "#/definitions/iamSession"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamSession",
        "tags": [
          "iamSession"
        ]
      }
    },
    "/iam/Systems": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSystems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSystemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamSystems",
        "tags": [
          "iamSystem"
        ]
      }
    },
    "/iam/Systems/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamSystem instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSystem",
            "schema": {
              "$ref": "#/definitions/iamSystem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamSystem",
        "tags": [
          "iamSystem"
        ]
      }
    },
    "/iam/UserGroups": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamUserGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamUserGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamUserGroups",
        "tags": [
          "iamUserGroup"
        ]
      }
    },
    "/iam/UserGroups/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamUserGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamUserGroup",
            "schema": {
              "$ref": "#/definitions/iamUserGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamUserGroup",
        "tags": [
          "iamUserGroup"
        ]
      }
    },
    "/iam/UserPreferences": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamUserPreferences for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamUserPreferenceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamUserPreferences",
        "tags": [
          "iamUserPreference"
        ]
      }
    },
    "/iam/UserPreferences/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamUserPreference instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamUserPreference",
            "schema": {
              "$ref": "#/definitions/iamUserPreference"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamUserPreference",
        "tags": [
          "iamUserPreference"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamUserPreference instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamUserPreference to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamUserPreference",
        "tags": [
          "iamUserPreference"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamUserPreference instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamUserPreference to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamUserPreference",
        "tags": [
          "iamUserPreference"
        ]
      }
    },
    "/iam/Users": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamUsers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamUserList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamUsers",
        "tags": [
          "iamUser"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamUser to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamUser",
        "tags": [
          "iamUser"
        ]
      }
    },
    "/iam/Users/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamUser instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamUser",
        "tags": [
          "iamUser"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamUser instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamUser",
            "schema": {
              "$ref": "#/definitions/iamUser"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamUser",
        "tags": [
          "iamUser"
        ]
      }
    },
    "/terminal/AuditLogs": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of terminalAuditLogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/terminalAuditLogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of terminalAuditLogs",
        "tags": [
          "terminalAuditLog"
        ]
      }
    },
    "/terminal/AuditLogs/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the terminalAuditLog instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of terminalAuditLog",
            "schema": {
              "$ref": "#/definitions/terminalAuditLog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of terminalAuditLog",
        "tags": [
          "terminalAuditLog"
        ]
      }
    },
    "/hyperflex/Alarms": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexAlarms for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexAlarmList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexAlarms",
        "tags": [
          "hyperflexAlarm"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "hyperflexAlarm to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAlarm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a hyperflexAlarm",
        "tags": [
          "hyperflexAlarm"
        ]
      }
    },
    "/hyperflex/Alarms/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexAlarm instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexAlarm",
        "tags": [
          "hyperflexAlarm"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexAlarm instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexAlarm",
            "schema": {
              "$ref": "#/definitions/hyperflexAlarm"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexAlarm",
        "tags": [
          "hyperflexAlarm"
        ]
      }
    },
    "/hyperflex/Clusters": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusters for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hyperflexClusters",
        "tags": [
          "hyperflexCluster"
        ]
      }
    },
    "/hyperflex/Clusters/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the hyperflexCluster instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of hyperflexCluster",
        "tags": [
          "hyperflexCluster"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the hyperflexCluster instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexCluster",
            "schema": {
              "$ref": "#/definitions/hyperflexCluster"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hyperflexCluster",
        "tags": [
          "hyperflexCluster"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the hyperflexCluster instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexCluster to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexCluster",
        "tags": [
          "hyperflexCluster"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the hyperflexCluster instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "hyperflexCluster to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of hyperflexCluster",
        "tags": [
          "hyperflexCluster"
        ]
      }
    },
    "/search/SearchItems": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of searchSearchItems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/searchSearchItemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of searchSearchItems",
        "tags": [
          "searchSearchItem"
        ]
      }
    },
    "/search/SearchItems/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the searchSearchItem instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of searchSearchItem",
            "schema": {
              "$ref": "#/definitions/searchSearchItem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of searchSearchItem",
        "tags": [
          "searchSearchItem"
        ]
      }
    },
    "/search/SuggestItems": {
      "post": {
        "parameters": [
          {
            "description": "searchSuggestItem to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/searchSuggestItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a searchSuggestItem",
        "tags": [
          "searchSuggestItem"
        ]
      }
    },
    "/search/TagItems": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of searchTagItems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/searchTagItemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of searchTagItems",
        "tags": [
          "searchTagItem"
        ]
      }
    },
    "/search/TagItems/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the searchTagItem instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of searchTagItem",
            "schema": {
              "$ref": "#/definitions/searchTagItem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of searchTagItem",
        "tags": [
          "searchTagItem"
        ]
      }
    },
    "/adapter/ExtEthInterfaces": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterExtEthInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterExtEthInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of adapterExtEthInterfaces",
        "tags": [
          "adapterExtEthInterface"
        ]
      }
    },
    "/adapter/ExtEthInterfaces/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the adapterExtEthInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterExtEthInterface",
            "schema": {
              "$ref": "#/definitions/adapterExtEthInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of adapterExtEthInterface",
        "tags": [
          "adapterExtEthInterface"
        ]
      }
    },
    "/adapter/HostEthInterfaces": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterHostEthInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterHostEthInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of adapterHostEthInterfaces",
        "tags": [
          "adapterHostEthInterface"
        ]
      }
    },
    "/adapter/HostEthInterfaces/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the adapterHostEthInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterHostEthInterface",
            "schema": {
              "$ref": "#/definitions/adapterHostEthInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of adapterHostEthInterface",
        "tags": [
          "adapterHostEthInterface"
        ]
      }
    },
    "/adapter/HostFcInterfaces": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterHostFcInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterHostFcInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of adapterHostFcInterfaces",
        "tags": [
          "adapterHostFcInterface"
        ]
      }
    },
    "/adapter/HostFcInterfaces/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the adapterHostFcInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterHostFcInterface",
            "schema": {
              "$ref": "#/definitions/adapterHostFcInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of adapterHostFcInterface",
        "tags": [
          "adapterHostFcInterface"
        ]
      }
    },
    "/adapter/HostIscsiInterfaces": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterHostIscsiInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterHostIscsiInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of adapterHostIscsiInterfaces",
        "tags": [
          "adapterHostIscsiInterface"
        ]
      }
    },
    "/adapter/HostIscsiInterfaces/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the adapterHostIscsiInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterHostIscsiInterface",
            "schema": {
              "$ref": "#/definitions/adapterHostIscsiInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of adapterHostIscsiInterface",
        "tags": [
          "adapterHostIscsiInterface"
        ]
      }
    },
    "/adapter/Units": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of adapterUnits",
        "tags": [
          "adapterUnit"
        ]
      }
    },
    "/adapter/Units/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the adapterUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterUnit",
            "schema": {
              "$ref": "#/definitions/adapterUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of adapterUnit",
        "tags": [
          "adapterUnit"
        ]
      }
    },
    "/bios/Units": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of biosUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/biosUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of biosUnits",
        "tags": [
          "biosUnit"
        ]
      }
    },
    "/bios/Units/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the biosUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of biosUnit",
            "schema": {
              "$ref": "#/definitions/biosUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of biosUnit",
        "tags": [
          "biosUnit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the biosUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "biosUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of biosUnit",
        "tags": [
          "biosUnit"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the biosUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "biosUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of biosUnit",
        "tags": [
          "biosUnit"
        ]
      }
    },
    "/compute/Blades": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeBlades for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeBladeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of computeBlades",
        "tags": [
          "computeBlade"
        ]
      }
    },
    "/compute/Blades/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the computeBlade instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeBlade",
            "schema": {
              "$ref": "#/definitions/computeBlade"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of computeBlade",
        "tags": [
          "computeBlade"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the computeBlade instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeBlade to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBlade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeBlade",
        "tags": [
          "computeBlade"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the computeBlade instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeBlade to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBlade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeBlade",
        "tags": [
          "computeBlade"
        ]
      }
    },
    "/compute/Boards": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeBoards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeBoardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of computeBoards",
        "tags": [
          "computeBoard"
        ]
      }
    },
    "/compute/Boards/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the computeBoard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeBoard",
            "schema": {
              "$ref": "#/definitions/computeBoard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of computeBoard",
        "tags": [
          "computeBoard"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the computeBoard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeBoard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBoard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeBoard",
        "tags": [
          "computeBoard"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the computeBoard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeBoard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBoard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeBoard",
        "tags": [
          "computeBoard"
        ]
      }
    },
    "/compute/PhysicalSummaries": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computePhysicalSummaries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computePhysicalSummaryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of computePhysicalSummaries",
        "tags": [
          "computePhysicalSummary"
        ]
      }
    },
    "/compute/PhysicalSummaries/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the computePhysicalSummary instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computePhysicalSummary",
            "schema": {
              "$ref": "#/definitions/computePhysicalSummary"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of computePhysicalSummary",
        "tags": [
          "computePhysicalSummary"
        ]
      }
    },
    "/compute/RackUnits": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeRackUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeRackUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of computeRackUnits",
        "tags": [
          "computeRackUnit"
        ]
      }
    },
    "/compute/RackUnits/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the computeRackUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeRackUnit",
            "schema": {
              "$ref": "#/definitions/computeRackUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of computeRackUnit",
        "tags": [
          "computeRackUnit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the computeRackUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeRackUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeRackUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeRackUnit",
        "tags": [
          "computeRackUnit"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the computeRackUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeRackUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeRackUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeRackUnit",
        "tags": [
          "computeRackUnit"
        ]
      }
    },
    "/equipment/Chasses": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentChasses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentChassisList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentChasses",
        "tags": [
          "equipmentChassis"
        ]
      }
    },
    "/equipment/Chasses/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentChassis instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentChassis",
            "schema": {
              "$ref": "#/definitions/equipmentChassis"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentChassis",
        "tags": [
          "equipmentChassis"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentChassis instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentChassis to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentChassis"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentChassis",
        "tags": [
          "equipmentChassis"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentChassis instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentChassis to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentChassis"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentChassis",
        "tags": [
          "equipmentChassis"
        ]
      }
    },
    "/equipment/DeviceSummaries": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentDeviceSummaries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentDeviceSummaryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentDeviceSummaries",
        "tags": [
          "equipmentDeviceSummary"
        ]
      }
    },
    "/equipment/DeviceSummaries/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentDeviceSummary instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentDeviceSummary",
            "schema": {
              "$ref": "#/definitions/equipmentDeviceSummary"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentDeviceSummary",
        "tags": [
          "equipmentDeviceSummary"
        ]
      }
    },
    "/equipment/FanModules": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentFanModules for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentFanModuleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentFanModules",
        "tags": [
          "equipmentFanModule"
        ]
      }
    },
    "/equipment/FanModules/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentFanModule instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentFanModule",
            "schema": {
              "$ref": "#/definitions/equipmentFanModule"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentFanModule",
        "tags": [
          "equipmentFanModule"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentFanModule instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentFanModule to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFanModule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentFanModule",
        "tags": [
          "equipmentFanModule"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentFanModule instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentFanModule to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFanModule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentFanModule",
        "tags": [
          "equipmentFanModule"
        ]
      }
    },
    "/equipment/Fans": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentFans for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentFanList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentFans",
        "tags": [
          "equipmentFan"
        ]
      }
    },
    "/equipment/Fans/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentFan instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentFan",
            "schema": {
              "$ref": "#/definitions/equipmentFan"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentFan",
        "tags": [
          "equipmentFan"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentFan instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentFan to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentFan",
        "tags": [
          "equipmentFan"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentFan instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentFan to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentFan",
        "tags": [
          "equipmentFan"
        ]
      }
    },
    "/equipment/Fexes": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentFexes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentFexList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentFexes",
        "tags": [
          "equipmentFex"
        ]
      }
    },
    "/equipment/Fexes/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentFex instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentFex",
            "schema": {
              "$ref": "#/definitions/equipmentFex"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentFex",
        "tags": [
          "equipmentFex"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentFex instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentFex to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFex"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentFex",
        "tags": [
          "equipmentFex"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentFex instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentFex to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFex"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentFex",
        "tags": [
          "equipmentFex"
        ]
      }
    },
    "/equipment/IoCards": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentIoCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentIoCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentIoCards",
        "tags": [
          "equipmentIoCard"
        ]
      }
    },
    "/equipment/IoCards/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentIoCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentIoCard",
            "schema": {
              "$ref": "#/definitions/equipmentIoCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentIoCard",
        "tags": [
          "equipmentIoCard"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentIoCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentIoCard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentIoCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentIoCard",
        "tags": [
          "equipmentIoCard"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentIoCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentIoCard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentIoCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentIoCard",
        "tags": [
          "equipmentIoCard"
        ]
      }
    },
    "/equipment/LocatorLeds": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentLocatorLeds for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLedList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentLocatorLeds",
        "tags": [
          "equipmentLocatorLed"
        ]
      }
    },
    "/equipment/LocatorLeds/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentLocatorLed instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentLocatorLed",
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLed"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentLocatorLed",
        "tags": [
          "equipmentLocatorLed"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentLocatorLed instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentLocatorLed to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLed"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentLocatorLed",
        "tags": [
          "equipmentLocatorLed"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentLocatorLed instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentLocatorLed to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLed"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentLocatorLed",
        "tags": [
          "equipmentLocatorLed"
        ]
      }
    },
    "/equipment/Psus": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentPsus for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentPsuList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentPsus",
        "tags": [
          "equipmentPsu"
        ]
      }
    },
    "/equipment/Psus/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentPsu instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentPsu",
            "schema": {
              "$ref": "#/definitions/equipmentPsu"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentPsu",
        "tags": [
          "equipmentPsu"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentPsu instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentPsu to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentPsu"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentPsu",
        "tags": [
          "equipmentPsu"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentPsu instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentPsu to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentPsu"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentPsu",
        "tags": [
          "equipmentPsu"
        ]
      }
    },
    "/equipment/SwitchCards": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentSwitchCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentSwitchCards",
        "tags": [
          "equipmentSwitchCard"
        ]
      }
    },
    "/equipment/SwitchCards/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentSwitchCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentSwitchCard",
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentSwitchCard",
        "tags": [
          "equipmentSwitchCard"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentSwitchCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentSwitchCard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentSwitchCard",
        "tags": [
          "equipmentSwitchCard"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentSwitchCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentSwitchCard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentSwitchCard",
        "tags": [
          "equipmentSwitchCard"
        ]
      }
    },
    "/equipment/SystemIoControllers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentSystemIoControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of equipmentSystemIoControllers",
        "tags": [
          "equipmentSystemIoController"
        ]
      }
    },
    "/equipment/SystemIoControllers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the equipmentSystemIoController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentSystemIoController",
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of equipmentSystemIoController",
        "tags": [
          "equipmentSystemIoController"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the equipmentSystemIoController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentSystemIoController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentSystemIoController",
        "tags": [
          "equipmentSystemIoController"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the equipmentSystemIoController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "equipmentSystemIoController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of equipmentSystemIoController",
        "tags": [
          "equipmentSystemIoController"
        ]
      }
    },
    "/ether/PhysicalPorts": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of etherPhysicalPorts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/etherPhysicalPortList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of etherPhysicalPorts",
        "tags": [
          "etherPhysicalPort"
        ]
      }
    },
    "/ether/PhysicalPorts/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the etherPhysicalPort instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of etherPhysicalPort",
            "schema": {
              "$ref": "#/definitions/etherPhysicalPort"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of etherPhysicalPort",
        "tags": [
          "etherPhysicalPort"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the etherPhysicalPort instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "etherPhysicalPort to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/etherPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of etherPhysicalPort",
        "tags": [
          "etherPhysicalPort"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the etherPhysicalPort instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "etherPhysicalPort to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/etherPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of etherPhysicalPort",
        "tags": [
          "etherPhysicalPort"
        ]
      }
    },
    "/fault/Instances": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of faultInstances for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/faultInstanceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of faultInstances",
        "tags": [
          "faultInstance"
        ]
      }
    },
    "/fault/Instances/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the faultInstance instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of faultInstance",
            "schema": {
              "$ref": "#/definitions/faultInstance"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of faultInstance",
        "tags": [
          "faultInstance"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the faultInstance instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "faultInstance to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/faultInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of faultInstance",
        "tags": [
          "faultInstance"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the faultInstance instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "faultInstance to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/faultInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of faultInstance",
        "tags": [
          "faultInstance"
        ]
      }
    },
    "/fc/PhysicalPorts": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of fcPhysicalPorts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/fcPhysicalPortList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of fcPhysicalPorts",
        "tags": [
          "fcPhysicalPort"
        ]
      }
    },
    "/fc/PhysicalPorts/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the fcPhysicalPort instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of fcPhysicalPort",
            "schema": {
              "$ref": "#/definitions/fcPhysicalPort"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of fcPhysicalPort",
        "tags": [
          "fcPhysicalPort"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the fcPhysicalPort instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "fcPhysicalPort to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fcPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of fcPhysicalPort",
        "tags": [
          "fcPhysicalPort"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the fcPhysicalPort instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "fcPhysicalPort to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fcPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of fcPhysicalPort",
        "tags": [
          "fcPhysicalPort"
        ]
      }
    },
    "/firmware/RunningFirmwares": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareRunningFirmwares for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmwareList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of firmwareRunningFirmwares",
        "tags": [
          "firmwareRunningFirmware"
        ]
      }
    },
    "/firmware/RunningFirmwares/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the firmwareRunningFirmware instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareRunningFirmware",
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmware"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of firmwareRunningFirmware",
        "tags": [
          "firmwareRunningFirmware"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the firmwareRunningFirmware instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "firmwareRunningFirmware to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmware"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of firmwareRunningFirmware",
        "tags": [
          "firmwareRunningFirmware"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the firmwareRunningFirmware instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "firmwareRunningFirmware to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmware"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of firmwareRunningFirmware",
        "tags": [
          "firmwareRunningFirmware"
        ]
      }
    },
    "/graphics/Cards": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of graphicsCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/graphicsCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of graphicsCards",
        "tags": [
          "graphicsCard"
        ]
      }
    },
    "/graphics/Cards/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the graphicsCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of graphicsCard",
            "schema": {
              "$ref": "#/definitions/graphicsCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of graphicsCard",
        "tags": [
          "graphicsCard"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the graphicsCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "graphicsCard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of graphicsCard",
        "tags": [
          "graphicsCard"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the graphicsCard instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "graphicsCard to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of graphicsCard",
        "tags": [
          "graphicsCard"
        ]
      }
    },
    "/graphics/Controllers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of graphicsControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/graphicsControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of graphicsControllers",
        "tags": [
          "graphicsController"
        ]
      }
    },
    "/graphics/Controllers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the graphicsController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of graphicsController",
            "schema": {
              "$ref": "#/definitions/graphicsController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of graphicsController",
        "tags": [
          "graphicsController"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the graphicsController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "graphicsController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of graphicsController",
        "tags": [
          "graphicsController"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the graphicsController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "graphicsController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of graphicsController",
        "tags": [
          "graphicsController"
        ]
      }
    },
    "/inventory/DeviceInfos": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryDeviceInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryDeviceInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of inventoryDeviceInfos",
        "tags": [
          "inventoryDeviceInfo"
        ]
      }
    },
    "/inventory/DeviceInfos/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the inventoryDeviceInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryDeviceInfo",
            "schema": {
              "$ref": "#/definitions/inventoryDeviceInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of inventoryDeviceInfo",
        "tags": [
          "inventoryDeviceInfo"
        ]
      }
    },
    "/inventory/DnMoBindings": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryDnMoBindings for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryDnMoBindingList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of inventoryDnMoBindings",
        "tags": [
          "inventoryDnMoBinding"
        ]
      }
    },
    "/inventory/DnMoBindings/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the inventoryDnMoBinding instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryDnMoBinding",
            "schema": {
              "$ref": "#/definitions/inventoryDnMoBinding"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of inventoryDnMoBinding",
        "tags": [
          "inventoryDnMoBinding"
        ]
      }
    },
    "/inventory/GenericInventories": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryGenericInventories for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of inventoryGenericInventories",
        "tags": [
          "inventoryGenericInventory"
        ]
      }
    },
    "/inventory/GenericInventories/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the inventoryGenericInventory instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryGenericInventory",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventory"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of inventoryGenericInventory",
        "tags": [
          "inventoryGenericInventory"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the inventoryGenericInventory instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "inventoryGenericInventory to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of inventoryGenericInventory",
        "tags": [
          "inventoryGenericInventory"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the inventoryGenericInventory instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "inventoryGenericInventory to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of inventoryGenericInventory",
        "tags": [
          "inventoryGenericInventory"
        ]
      }
    },
    "/inventory/GenericInventoryHolders": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryGenericInventoryHolders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of inventoryGenericInventoryHolders",
        "tags": [
          "inventoryGenericInventoryHolder"
        ]
      }
    },
    "/inventory/GenericInventoryHolders/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the inventoryGenericInventoryHolder instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryGenericInventoryHolder",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolder"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of inventoryGenericInventoryHolder",
        "tags": [
          "inventoryGenericInventoryHolder"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the inventoryGenericInventoryHolder instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "inventoryGenericInventoryHolder to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of inventoryGenericInventoryHolder",
        "tags": [
          "inventoryGenericInventoryHolder"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the inventoryGenericInventoryHolder instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "inventoryGenericInventoryHolder to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of inventoryGenericInventoryHolder",
        "tags": [
          "inventoryGenericInventoryHolder"
        ]
      }
    },
    "/ls/ServiceProfiles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of lsServiceProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/lsServiceProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of lsServiceProfiles",
        "tags": [
          "lsServiceProfile"
        ]
      }
    },
    "/ls/ServiceProfiles/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the lsServiceProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of lsServiceProfile",
            "schema": {
              "$ref": "#/definitions/lsServiceProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of lsServiceProfile",
        "tags": [
          "lsServiceProfile"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the lsServiceProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "lsServiceProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lsServiceProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of lsServiceProfile",
        "tags": [
          "lsServiceProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the lsServiceProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "lsServiceProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lsServiceProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of lsServiceProfile",
        "tags": [
          "lsServiceProfile"
        ]
      }
    },
    "/management/Controllers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of managementControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/managementControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of managementControllers",
        "tags": [
          "managementController"
        ]
      }
    },
    "/management/Controllers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the managementController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of managementController",
            "schema": {
              "$ref": "#/definitions/managementController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of managementController",
        "tags": [
          "managementController"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the managementController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "managementController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of managementController",
        "tags": [
          "managementController"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the managementController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "managementController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of managementController",
        "tags": [
          "managementController"
        ]
      }
    },
    "/management/Entities": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of managementEntities for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/managementEntityList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of managementEntities",
        "tags": [
          "managementEntity"
        ]
      }
    },
    "/management/Entities/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the managementEntity instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of managementEntity",
            "schema": {
              "$ref": "#/definitions/managementEntity"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of managementEntity",
        "tags": [
          "managementEntity"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the managementEntity instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "managementEntity to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementEntity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of managementEntity",
        "tags": [
          "managementEntity"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the managementEntity instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "managementEntity to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementEntity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of managementEntity",
        "tags": [
          "managementEntity"
        ]
      }
    },
    "/management/Interfaces": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of managementInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/managementInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of managementInterfaces",
        "tags": [
          "managementInterface"
        ]
      }
    },
    "/management/Interfaces/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the managementInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of managementInterface",
            "schema": {
              "$ref": "#/definitions/managementInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of managementInterface",
        "tags": [
          "managementInterface"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the managementInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "managementInterface to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of managementInterface",
        "tags": [
          "managementInterface"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the managementInterface instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "managementInterface to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of managementInterface",
        "tags": [
          "managementInterface"
        ]
      }
    },
    "/memory/Arrays": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryArrays for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryArrayList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of memoryArrays",
        "tags": [
          "memoryArray"
        ]
      }
    },
    "/memory/Arrays/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the memoryArray instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryArray",
            "schema": {
              "$ref": "#/definitions/memoryArray"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of memoryArray",
        "tags": [
          "memoryArray"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the memoryArray instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "memoryArray to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of memoryArray",
        "tags": [
          "memoryArray"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the memoryArray instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "memoryArray to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of memoryArray",
        "tags": [
          "memoryArray"
        ]
      }
    },
    "/memory/Units": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of memoryUnits",
        "tags": [
          "memoryUnit"
        ]
      }
    },
    "/memory/Units/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the memoryUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryUnit",
            "schema": {
              "$ref": "#/definitions/memoryUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of memoryUnit",
        "tags": [
          "memoryUnit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the memoryUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "memoryUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of memoryUnit",
        "tags": [
          "memoryUnit"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the memoryUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "memoryUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of memoryUnit",
        "tags": [
          "memoryUnit"
        ]
      }
    },
    "/network/ElementSummaries": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of networkElementSummaries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/networkElementSummaryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of networkElementSummaries",
        "tags": [
          "networkElementSummary"
        ]
      }
    },
    "/network/ElementSummaries/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the networkElementSummary instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of networkElementSummary",
            "schema": {
              "$ref": "#/definitions/networkElementSummary"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of networkElementSummary",
        "tags": [
          "networkElementSummary"
        ]
      }
    },
    "/network/Elements": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of networkElements for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/networkElementList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of networkElements",
        "tags": [
          "networkElement"
        ]
      }
    },
    "/network/Elements/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the networkElement instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of networkElement",
            "schema": {
              "$ref": "#/definitions/networkElement"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of networkElement",
        "tags": [
          "networkElement"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the networkElement instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "networkElement to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkElement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of networkElement",
        "tags": [
          "networkElement"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the networkElement instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "networkElement to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkElement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of networkElement",
        "tags": [
          "networkElement"
        ]
      }
    },
    "/port/Groups": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of portGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/portGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of portGroups",
        "tags": [
          "portGroup"
        ]
      }
    },
    "/port/Groups/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the portGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of portGroup",
            "schema": {
              "$ref": "#/definitions/portGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of portGroup",
        "tags": [
          "portGroup"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the portGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "portGroup to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of portGroup",
        "tags": [
          "portGroup"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the portGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "portGroup to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of portGroup",
        "tags": [
          "portGroup"
        ]
      }
    },
    "/port/SubGroups": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of portSubGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/portSubGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of portSubGroups",
        "tags": [
          "portSubGroup"
        ]
      }
    },
    "/port/SubGroups/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the portSubGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of portSubGroup",
            "schema": {
              "$ref": "#/definitions/portSubGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of portSubGroup",
        "tags": [
          "portSubGroup"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the portSubGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "portSubGroup to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portSubGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of portSubGroup",
        "tags": [
          "portSubGroup"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the portSubGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "portSubGroup to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portSubGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of portSubGroup",
        "tags": [
          "portSubGroup"
        ]
      }
    },
    "/processor/Units": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of processorUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/processorUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of processorUnits",
        "tags": [
          "processorUnit"
        ]
      }
    },
    "/processor/Units/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the processorUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of processorUnit",
            "schema": {
              "$ref": "#/definitions/processorUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of processorUnit",
        "tags": [
          "processorUnit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the processorUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "processorUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/processorUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of processorUnit",
        "tags": [
          "processorUnit"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the processorUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "processorUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/processorUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of processorUnit",
        "tags": [
          "processorUnit"
        ]
      }
    },
    "/security/Units": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of securityUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/securityUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of securityUnits",
        "tags": [
          "securityUnit"
        ]
      }
    },
    "/security/Units/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the securityUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of securityUnit",
            "schema": {
              "$ref": "#/definitions/securityUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of securityUnit",
        "tags": [
          "securityUnit"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the securityUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "securityUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of securityUnit",
        "tags": [
          "securityUnit"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the securityUnit instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "securityUnit to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of securityUnit",
        "tags": [
          "securityUnit"
        ]
      }
    },
    "/storage/Controllers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageControllers",
        "tags": [
          "storageController"
        ]
      }
    },
    "/storage/Controllers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageController",
            "schema": {
              "$ref": "#/definitions/storageController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageController",
        "tags": [
          "storageController"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageController",
        "tags": [
          "storageController"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageController",
        "tags": [
          "storageController"
        ]
      }
    },
    "/storage/FlexFlashControllers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexFlashControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageFlexFlashControllers",
        "tags": [
          "storageFlexFlashController"
        ]
      }
    },
    "/storage/FlexFlashControllers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageFlexFlashController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexFlashController",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageFlexFlashController",
        "tags": [
          "storageFlexFlashController"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageFlexFlashController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexFlashController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexFlashController",
        "tags": [
          "storageFlexFlashController"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageFlexFlashController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexFlashController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexFlashController",
        "tags": [
          "storageFlexFlashController"
        ]
      }
    },
    "/storage/FlexFlashPhysicalDrives": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexFlashPhysicalDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageFlexFlashPhysicalDrives",
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ]
      }
    },
    "/storage/FlexFlashPhysicalDrives/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageFlexFlashPhysicalDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexFlashPhysicalDrive",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageFlexFlashPhysicalDrive",
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageFlexFlashPhysicalDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexFlashPhysicalDrive to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexFlashPhysicalDrive",
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageFlexFlashPhysicalDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexFlashPhysicalDrive to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexFlashPhysicalDrive",
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ]
      }
    },
    "/storage/FlexUtilControllers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexUtilControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageFlexUtilControllers",
        "tags": [
          "storageFlexUtilController"
        ]
      }
    },
    "/storage/FlexUtilControllers/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageFlexUtilController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexUtilController",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageFlexUtilController",
        "tags": [
          "storageFlexUtilController"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageFlexUtilController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexUtilController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexUtilController",
        "tags": [
          "storageFlexUtilController"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageFlexUtilController instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexUtilController to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexUtilController",
        "tags": [
          "storageFlexUtilController"
        ]
      }
    },
    "/storage/FlexUtilVirtualDrives": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexUtilVirtualDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageFlexUtilVirtualDrives",
        "tags": [
          "storageFlexUtilVirtualDrive"
        ]
      }
    },
    "/storage/FlexUtilVirtualDrives/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageFlexUtilVirtualDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexUtilVirtualDrive",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageFlexUtilVirtualDrive",
        "tags": [
          "storageFlexUtilVirtualDrive"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageFlexUtilVirtualDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexUtilVirtualDrive to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexUtilVirtualDrive",
        "tags": [
          "storageFlexUtilVirtualDrive"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageFlexUtilVirtualDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageFlexUtilVirtualDrive to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageFlexUtilVirtualDrive",
        "tags": [
          "storageFlexUtilVirtualDrive"
        ]
      }
    },
    "/storage/PhysicalDiskUsages": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePhysicalDiskUsages for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsageList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storagePhysicalDiskUsages",
        "tags": [
          "storagePhysicalDiskUsage"
        ]
      }
    },
    "/storage/PhysicalDiskUsages/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storagePhysicalDiskUsage instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePhysicalDiskUsage",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsage"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storagePhysicalDiskUsage",
        "tags": [
          "storagePhysicalDiskUsage"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storagePhysicalDiskUsage instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storagePhysicalDiskUsage to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storagePhysicalDiskUsage",
        "tags": [
          "storagePhysicalDiskUsage"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storagePhysicalDiskUsage instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storagePhysicalDiskUsage to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storagePhysicalDiskUsage",
        "tags": [
          "storagePhysicalDiskUsage"
        ]
      }
    },
    "/storage/PhysicalDisks": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePhysicalDisks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storagePhysicalDisks",
        "tags": [
          "storagePhysicalDisk"
        ]
      }
    },
    "/storage/PhysicalDisks/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storagePhysicalDisk instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePhysicalDisk",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDisk"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storagePhysicalDisk",
        "tags": [
          "storagePhysicalDisk"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storagePhysicalDisk instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storagePhysicalDisk to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDisk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storagePhysicalDisk",
        "tags": [
          "storagePhysicalDisk"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storagePhysicalDisk instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storagePhysicalDisk to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDisk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storagePhysicalDisk",
        "tags": [
          "storagePhysicalDisk"
        ]
      }
    },
    "/storage/SasExpanders": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageSasExpanders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageSasExpanderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageSasExpanders",
        "tags": [
          "storageSasExpander"
        ]
      }
    },
    "/storage/SasExpanders/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageSasExpander instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageSasExpander",
            "schema": {
              "$ref": "#/definitions/storageSasExpander"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageSasExpander",
        "tags": [
          "storageSasExpander"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageSasExpander instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageSasExpander to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageSasExpander"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageSasExpander",
        "tags": [
          "storageSasExpander"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageSasExpander instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageSasExpander to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageSasExpander"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageSasExpander",
        "tags": [
          "storageSasExpander"
        ]
      }
    },
    "/storage/VdMemberEps": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageVdMemberEps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageVdMemberEpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageVdMemberEps",
        "tags": [
          "storageVdMemberEp"
        ]
      }
    },
    "/storage/VdMemberEps/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageVdMemberEp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageVdMemberEp",
            "schema": {
              "$ref": "#/definitions/storageVdMemberEp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageVdMemberEp",
        "tags": [
          "storageVdMemberEp"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageVdMemberEp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageVdMemberEp to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVdMemberEp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageVdMemberEp",
        "tags": [
          "storageVdMemberEp"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageVdMemberEp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageVdMemberEp to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVdMemberEp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageVdMemberEp",
        "tags": [
          "storageVdMemberEp"
        ]
      }
    },
    "/storage/VirtualDrives": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageVirtualDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageVirtualDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageVirtualDrives",
        "tags": [
          "storageVirtualDrive"
        ]
      }
    },
    "/storage/VirtualDrives/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageVirtualDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageVirtualDrive",
            "schema": {
              "$ref": "#/definitions/storageVirtualDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageVirtualDrive",
        "tags": [
          "storageVirtualDrive"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageVirtualDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageVirtualDrive to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageVirtualDrive",
        "tags": [
          "storageVirtualDrive"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageVirtualDrive instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageVirtualDrive to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageVirtualDrive",
        "tags": [
          "storageVirtualDrive"
        ]
      }
    },
    "/top/Systems": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of topSystems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/topSystemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of topSystems",
        "tags": [
          "topSystem"
        ]
      }
    },
    "/top/Systems/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the topSystem instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of topSystem",
            "schema": {
              "$ref": "#/definitions/topSystem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of topSystem",
        "tags": [
          "topSystem"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the topSystem instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "topSystem to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topSystem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of topSystem",
        "tags": [
          "topSystem"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the topSystem instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "topSystem to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topSystem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of topSystem",
        "tags": [
          "topSystem"
        ]
      }
    },
    "/deviceinfo/SerialNumberInfos": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of deviceinfoSerialNumberInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/deviceinfoSerialNumberInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of deviceinfoSerialNumberInfos",
        "tags": [
          "deviceinfoSerialNumberInfo"
        ]
      }
    },
    "/deviceinfo/SerialNumberInfos/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the deviceinfoSerialNumberInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of deviceinfoSerialNumberInfo",
            "schema": {
              "$ref": "#/definitions/deviceinfoSerialNumberInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of deviceinfoSerialNumberInfo",
        "tags": [
          "deviceinfoSerialNumberInfo"
        ]
      }
    },
    "/cond/Alarms": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condAlarms for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condAlarmList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of condAlarms",
        "tags": [
          "condAlarm"
        ]
      }
    },
    "/cond/Alarms/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the condAlarm instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condAlarm",
            "schema": {
              "$ref": "#/definitions/condAlarm"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of condAlarm",
        "tags": [
          "condAlarm"
        ]
      }
    },
    "/cond/HclStatusActions": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatusActions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusActionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of condHclStatusActions",
        "tags": [
          "condHclStatusAction"
        ]
      }
    },
    "/cond/HclStatusActions/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the condHclStatusAction instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatusAction",
            "schema": {
              "$ref": "#/definitions/condHclStatusAction"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of condHclStatusAction",
        "tags": [
          "condHclStatusAction"
        ]
      }
    },
    "/cond/HclStatusDetails": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatusDetails for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusDetailList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of condHclStatusDetails",
        "tags": [
          "condHclStatusDetail"
        ]
      }
    },
    "/cond/HclStatusDetails/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the condHclStatusDetail instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatusDetail",
            "schema": {
              "$ref": "#/definitions/condHclStatusDetail"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of condHclStatusDetail",
        "tags": [
          "condHclStatusDetail"
        ]
      }
    },
    "/cond/HclStatusJobs": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatusJobs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusJobList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of condHclStatusJobs",
        "tags": [
          "condHclStatusJob"
        ]
      }
    },
    "/cond/HclStatusJobs/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the condHclStatusJob instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatusJob",
            "schema": {
              "$ref": "#/definitions/condHclStatusJob"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of condHclStatusJob",
        "tags": [
          "condHclStatusJob"
        ]
      }
    },
    "/cond/HclStatuses": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatuses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of condHclStatuses",
        "tags": [
          "condHclStatus"
        ]
      }
    },
    "/cond/HclStatuses/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the condHclStatus instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatus",
            "schema": {
              "$ref": "#/definitions/condHclStatus"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of condHclStatus",
        "tags": [
          "condHclStatus"
        ]
      }
    },
    "/license/AccountLicenseData": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseAccountLicenseData for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseAccountLicenseDataList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of licenseAccountLicenseData",
        "tags": [
          "licenseAccountLicenseData"
        ]
      }
    },
    "/license/AccountLicenseData/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the licenseAccountLicenseData instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseAccountLicenseData",
            "schema": {
              "$ref": "#/definitions/licenseAccountLicenseData"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of licenseAccountLicenseData",
        "tags": [
          "licenseAccountLicenseData"
        ]
      }
    },
    "/license/CustomerOps": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseCustomerOps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseCustomerOpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of licenseCustomerOps",
        "tags": [
          "licenseCustomerOp"
        ]
      }
    },
    "/license/CustomerOps/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the licenseCustomerOp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseCustomerOp",
            "schema": {
              "$ref": "#/definitions/licenseCustomerOp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of licenseCustomerOp",
        "tags": [
          "licenseCustomerOp"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the licenseCustomerOp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "licenseCustomerOp to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseCustomerOp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of licenseCustomerOp",
        "tags": [
          "licenseCustomerOp"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the licenseCustomerOp instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "licenseCustomerOp to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseCustomerOp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of licenseCustomerOp",
        "tags": [
          "licenseCustomerOp"
        ]
      }
    },
    "/license/LicenseInfos": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseLicenseInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of licenseLicenseInfos",
        "tags": [
          "licenseLicenseInfo"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "licenseLicenseInfo to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a licenseLicenseInfo",
        "tags": [
          "licenseLicenseInfo"
        ]
      }
    },
    "/license/LicenseInfos/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the licenseLicenseInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseLicenseInfo",
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of licenseLicenseInfo",
        "tags": [
          "licenseLicenseInfo"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the licenseLicenseInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "licenseLicenseInfo to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of licenseLicenseInfo",
        "tags": [
          "licenseLicenseInfo"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the licenseLicenseInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "licenseLicenseInfo to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of licenseLicenseInfo",
        "tags": [
          "licenseLicenseInfo"
        ]
      }
    },
    "/license/SmartlicenseTokens": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseSmartlicenseTokens for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseTokenList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of licenseSmartlicenseTokens",
        "tags": [
          "licenseSmartlicenseToken"
        ]
      }
    },
    "/license/SmartlicenseTokens/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the licenseSmartlicenseToken instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseSmartlicenseToken",
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseToken"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of licenseSmartlicenseToken",
        "tags": [
          "licenseSmartlicenseToken"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the licenseSmartlicenseToken instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "licenseSmartlicenseToken to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of licenseSmartlicenseToken",
        "tags": [
          "licenseSmartlicenseToken"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the licenseSmartlicenseToken instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "licenseSmartlicenseToken to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of licenseSmartlicenseToken",
        "tags": [
          "licenseSmartlicenseToken"
        ]
      }
    },
    "/bios/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of biosPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/biosPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of biosPolicies",
        "tags": [
          "biosPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "biosPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a biosPolicy",
        "tags": [
          "biosPolicy"
        ]
      }
    },
    "/bios/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the biosPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of biosPolicy",
        "tags": [
          "biosPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the biosPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of biosPolicy",
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of biosPolicy",
        "tags": [
          "biosPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the biosPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "biosPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of biosPolicy",
        "tags": [
          "biosPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the biosPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "biosPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of biosPolicy",
        "tags": [
          "biosPolicy"
        ]
      }
    },
    "/boot/PrecisionPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bootPrecisionPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of bootPrecisionPolicies",
        "tags": [
          "bootPrecisionPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "bootPrecisionPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a bootPrecisionPolicy",
        "tags": [
          "bootPrecisionPolicy"
        ]
      }
    },
    "/boot/PrecisionPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the bootPrecisionPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of bootPrecisionPolicy",
        "tags": [
          "bootPrecisionPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the bootPrecisionPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of bootPrecisionPolicy",
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of bootPrecisionPolicy",
        "tags": [
          "bootPrecisionPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the bootPrecisionPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "bootPrecisionPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of bootPrecisionPolicy",
        "tags": [
          "bootPrecisionPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the bootPrecisionPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "bootPrecisionPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of bootPrecisionPolicy",
        "tags": [
          "bootPrecisionPolicy"
        ]
      }
    },
    "/iam/EndPointUserPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointUserPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamEndPointUserPolicies",
        "tags": [
          "iamEndPointUserPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamEndPointUserPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamEndPointUserPolicy",
        "tags": [
          "iamEndPointUserPolicy"
        ]
      }
    },
    "/iam/EndPointUserPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamEndPointUserPolicy",
        "tags": [
          "iamEndPointUserPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointUserPolicy",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamEndPointUserPolicy",
        "tags": [
          "iamEndPointUserPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamEndPointUserPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamEndPointUserPolicy",
        "tags": [
          "iamEndPointUserPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamEndPointUserPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamEndPointUserPolicy",
        "tags": [
          "iamEndPointUserPolicy"
        ]
      }
    },
    "/iam/EndPointUserRoles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointUserRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRoleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamEndPointUserRoles",
        "tags": [
          "iamEndPointUserRole"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamEndPointUserRole to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamEndPointUserRole",
        "tags": [
          "iamEndPointUserRole"
        ]
      }
    },
    "/iam/EndPointUserRoles/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserRole instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamEndPointUserRole",
        "tags": [
          "iamEndPointUserRole"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserRole instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointUserRole",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamEndPointUserRole",
        "tags": [
          "iamEndPointUserRole"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserRole instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamEndPointUserRole to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamEndPointUserRole",
        "tags": [
          "iamEndPointUserRole"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUserRole instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamEndPointUserRole to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamEndPointUserRole",
        "tags": [
          "iamEndPointUserRole"
        ]
      }
    },
    "/iam/EndPointUsers": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointUsers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamEndPointUsers",
        "tags": [
          "iamEndPointUser"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamEndPointUser to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamEndPointUser",
        "tags": [
          "iamEndPointUser"
        ]
      }
    },
    "/iam/EndPointUsers/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUser instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamEndPointUser",
        "tags": [
          "iamEndPointUser"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUser instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointUser",
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamEndPointUser",
        "tags": [
          "iamEndPointUser"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUser instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamEndPointUser to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamEndPointUser",
        "tags": [
          "iamEndPointUser"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamEndPointUser instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamEndPointUser to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamEndPointUser",
        "tags": [
          "iamEndPointUser"
        ]
      }
    },
    "/iam/LdapGroups": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamLdapGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamLdapGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamLdapGroups",
        "tags": [
          "iamLdapGroup"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamLdapGroup to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamLdapGroup",
        "tags": [
          "iamLdapGroup"
        ]
      }
    },
    "/iam/LdapGroups/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamLdapGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamLdapGroup",
        "tags": [
          "iamLdapGroup"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamLdapGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamLdapGroup",
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamLdapGroup",
        "tags": [
          "iamLdapGroup"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamLdapGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamLdapGroup to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamLdapGroup",
        "tags": [
          "iamLdapGroup"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamLdapGroup instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamLdapGroup to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamLdapGroup",
        "tags": [
          "iamLdapGroup"
        ]
      }
    },
    "/iam/LdapPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamLdapPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamLdapPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamLdapPolicies",
        "tags": [
          "iamLdapPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamLdapPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamLdapPolicy",
        "tags": [
          "iamLdapPolicy"
        ]
      }
    },
    "/iam/LdapPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamLdapPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamLdapPolicy",
        "tags": [
          "iamLdapPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamLdapPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamLdapPolicy",
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamLdapPolicy",
        "tags": [
          "iamLdapPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamLdapPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamLdapPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamLdapPolicy",
        "tags": [
          "iamLdapPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamLdapPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamLdapPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamLdapPolicy",
        "tags": [
          "iamLdapPolicy"
        ]
      }
    },
    "/iam/LdapProviders": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamLdapProviders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamLdapProviderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of iamLdapProviders",
        "tags": [
          "iamLdapProvider"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "iamLdapProvider to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a iamLdapProvider",
        "tags": [
          "iamLdapProvider"
        ]
      }
    },
    "/iam/LdapProviders/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the iamLdapProvider instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of iamLdapProvider",
        "tags": [
          "iamLdapProvider"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the iamLdapProvider instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamLdapProvider",
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of iamLdapProvider",
        "tags": [
          "iamLdapProvider"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the iamLdapProvider instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamLdapProvider to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamLdapProvider",
        "tags": [
          "iamLdapProvider"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the iamLdapProvider instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "iamLdapProvider to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of iamLdapProvider",
        "tags": [
          "iamLdapProvider"
        ]
      }
    },
    "/ipmioverlan/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ipmioverlanPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of ipmioverlanPolicies",
        "tags": [
          "ipmioverlanPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "ipmioverlanPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a ipmioverlanPolicy",
        "tags": [
          "ipmioverlanPolicy"
        ]
      }
    },
    "/ipmioverlan/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the ipmioverlanPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of ipmioverlanPolicy",
        "tags": [
          "ipmioverlanPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the ipmioverlanPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of ipmioverlanPolicy",
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of ipmioverlanPolicy",
        "tags": [
          "ipmioverlanPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the ipmioverlanPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "ipmioverlanPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of ipmioverlanPolicy",
        "tags": [
          "ipmioverlanPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the ipmioverlanPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "ipmioverlanPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of ipmioverlanPolicy",
        "tags": [
          "ipmioverlanPolicy"
        ]
      }
    },
    "/kvm/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of kvmPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/kvmPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of kvmPolicies",
        "tags": [
          "kvmPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "kvmPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a kvmPolicy",
        "tags": [
          "kvmPolicy"
        ]
      }
    },
    "/kvm/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the kvmPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of kvmPolicy",
        "tags": [
          "kvmPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the kvmPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of kvmPolicy",
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of kvmPolicy",
        "tags": [
          "kvmPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the kvmPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "kvmPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of kvmPolicy",
        "tags": [
          "kvmPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the kvmPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "kvmPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of kvmPolicy",
        "tags": [
          "kvmPolicy"
        ]
      }
    },
    "/networkconfig/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of networkconfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/networkconfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of networkconfigPolicies",
        "tags": [
          "networkconfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "networkconfigPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a networkconfigPolicy",
        "tags": [
          "networkconfigPolicy"
        ]
      }
    },
    "/networkconfig/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the networkconfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of networkconfigPolicy",
        "tags": [
          "networkconfigPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the networkconfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of networkconfigPolicy",
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of networkconfigPolicy",
        "tags": [
          "networkconfigPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the networkconfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "networkconfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of networkconfigPolicy",
        "tags": [
          "networkconfigPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the networkconfigPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "networkconfigPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of networkconfigPolicy",
        "tags": [
          "networkconfigPolicy"
        ]
      }
    },
    "/ntp/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ntpPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/ntpPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of ntpPolicies",
        "tags": [
          "ntpPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "ntpPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a ntpPolicy",
        "tags": [
          "ntpPolicy"
        ]
      }
    },
    "/ntp/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the ntpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of ntpPolicy",
        "tags": [
          "ntpPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the ntpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of ntpPolicy",
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of ntpPolicy",
        "tags": [
          "ntpPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the ntpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "ntpPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of ntpPolicy",
        "tags": [
          "ntpPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the ntpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "ntpPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of ntpPolicy",
        "tags": [
          "ntpPolicy"
        ]
      }
    },
    "/smtp/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of smtpPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/smtpPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of smtpPolicies",
        "tags": [
          "smtpPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "smtpPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a smtpPolicy",
        "tags": [
          "smtpPolicy"
        ]
      }
    },
    "/smtp/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the smtpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of smtpPolicy",
        "tags": [
          "smtpPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the smtpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of smtpPolicy",
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of smtpPolicy",
        "tags": [
          "smtpPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the smtpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "smtpPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of smtpPolicy",
        "tags": [
          "smtpPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the smtpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "smtpPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of smtpPolicy",
        "tags": [
          "smtpPolicy"
        ]
      }
    },
    "/snmp/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of snmpPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/snmpPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of snmpPolicies",
        "tags": [
          "snmpPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "snmpPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a snmpPolicy",
        "tags": [
          "snmpPolicy"
        ]
      }
    },
    "/snmp/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the snmpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of snmpPolicy",
        "tags": [
          "snmpPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the snmpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of snmpPolicy",
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of snmpPolicy",
        "tags": [
          "snmpPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the snmpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "snmpPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of snmpPolicy",
        "tags": [
          "snmpPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the snmpPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "snmpPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of snmpPolicy",
        "tags": [
          "snmpPolicy"
        ]
      }
    },
    "/sol/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of solPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/solPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of solPolicies",
        "tags": [
          "solPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "solPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a solPolicy",
        "tags": [
          "solPolicy"
        ]
      }
    },
    "/sol/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the solPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of solPolicy",
        "tags": [
          "solPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the solPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of solPolicy",
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of solPolicy",
        "tags": [
          "solPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the solPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "solPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of solPolicy",
        "tags": [
          "solPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the solPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "solPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of solPolicy",
        "tags": [
          "solPolicy"
        ]
      }
    },
    "/ssh/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sshPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/sshPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of sshPolicies",
        "tags": [
          "sshPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "sshPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a sshPolicy",
        "tags": [
          "sshPolicy"
        ]
      }
    },
    "/ssh/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the sshPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of sshPolicy",
        "tags": [
          "sshPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the sshPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of sshPolicy",
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of sshPolicy",
        "tags": [
          "sshPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the sshPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "sshPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of sshPolicy",
        "tags": [
          "sshPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the sshPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "sshPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of sshPolicy",
        "tags": [
          "sshPolicy"
        ]
      }
    },
    "/vmedia/Policies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vmediaPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vmediaPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of vmediaPolicies",
        "tags": [
          "vmediaPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "vmediaPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a vmediaPolicy",
        "tags": [
          "vmediaPolicy"
        ]
      }
    },
    "/vmedia/Policies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the vmediaPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of vmediaPolicy",
        "tags": [
          "vmediaPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the vmediaPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vmediaPolicy",
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of vmediaPolicy",
        "tags": [
          "vmediaPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the vmediaPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "vmediaPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of vmediaPolicy",
        "tags": [
          "vmediaPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the vmediaPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "vmediaPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of vmediaPolicy",
        "tags": [
          "vmediaPolicy"
        ]
      }
    },
    "/hcl/CompatibilityInfos": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclCompatibilityInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclCompatibilityInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hclCompatibilityInfos",
        "tags": [
          "hclCompatibilityInfo"
        ]
      }
    },
    "/hcl/CompatibilityInfos/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the hclCompatibilityInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclCompatibilityInfo",
            "schema": {
              "$ref": "#/definitions/hclCompatibilityInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hclCompatibilityInfo",
        "tags": [
          "hclCompatibilityInfo"
        ]
      }
    },
    "/hcl/DataImportLogs": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclDataImportLogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclDataImportLogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hclDataImportLogs",
        "tags": [
          "hclDataImportLog"
        ]
      }
    },
    "/hcl/DataImportLogs/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the hclDataImportLog instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclDataImportLog",
            "schema": {
              "$ref": "#/definitions/hclDataImportLog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hclDataImportLog",
        "tags": [
          "hclDataImportLog"
        ]
      }
    },
    "/hcl/Notes": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclNotes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclNoteList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of hclNotes",
        "tags": [
          "hclNote"
        ]
      }
    },
    "/hcl/Notes/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the hclNote instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclNote",
            "schema": {
              "$ref": "#/definitions/hclNote"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of hclNote",
        "tags": [
          "hclNote"
        ]
      }
    },
    "/aaa/AuditRecords": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of aaaAuditRecords for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/aaaAuditRecordList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of aaaAuditRecords",
        "tags": [
          "aaaAuditRecord"
        ]
      }
    },
    "/aaa/AuditRecords/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the aaaAuditRecord instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of aaaAuditRecord",
            "schema": {
              "$ref": "#/definitions/aaaAuditRecord"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of aaaAuditRecord",
        "tags": [
          "aaaAuditRecord"
        ]
      }
    },
    "/workflow/BuildTaskMeta": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowBuildTaskMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowBuildTaskMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of workflowBuildTaskMeta",
        "tags": [
          "workflowBuildTaskMeta"
        ]
      }
    },
    "/workflow/BuildTaskMeta/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the workflowBuildTaskMeta instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowBuildTaskMeta",
            "schema": {
              "$ref": "#/definitions/workflowBuildTaskMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of workflowBuildTaskMeta",
        "tags": [
          "workflowBuildTaskMeta"
        ]
      }
    },
    "/workflow/TaskInfos": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowTaskInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowTaskInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of workflowTaskInfos",
        "tags": [
          "workflowTaskInfo"
        ]
      }
    },
    "/workflow/TaskInfos/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the workflowTaskInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowTaskInfo",
            "schema": {
              "$ref": "#/definitions/workflowTaskInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of workflowTaskInfo",
        "tags": [
          "workflowTaskInfo"
        ]
      }
    },
    "/workflow/TaskMeta": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowTaskMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowTaskMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of workflowTaskMeta",
        "tags": [
          "workflowTaskMeta"
        ]
      }
    },
    "/workflow/TaskMeta/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the workflowTaskMeta instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowTaskMeta",
            "schema": {
              "$ref": "#/definitions/workflowTaskMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of workflowTaskMeta",
        "tags": [
          "workflowTaskMeta"
        ]
      }
    },
    "/workflow/WorkflowInfos": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowWorkflowInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of workflowWorkflowInfos",
        "tags": [
          "workflowWorkflowInfo"
        ]
      }
    },
    "/workflow/WorkflowInfos/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the workflowWorkflowInfo instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowWorkflowInfo",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of workflowWorkflowInfo",
        "tags": [
          "workflowWorkflowInfo"
        ]
      }
    },
    "/workflow/WorkflowMeta": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowWorkflowMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of workflowWorkflowMeta",
        "tags": [
          "workflowWorkflowMeta"
        ]
      }
    },
    "/workflow/WorkflowMeta/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the workflowWorkflowMeta instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowWorkflowMeta",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of workflowWorkflowMeta",
        "tags": [
          "workflowWorkflowMeta"
        ]
      }
    },
    "/workflow/WorkflowTasks": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowWorkflowTasks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowTaskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of workflowWorkflowTasks",
        "tags": [
          "workflowWorkflowTask"
        ]
      }
    },
    "/workflow/WorkflowTasks/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the workflowWorkflowTask instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowWorkflowTask",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowTask"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of workflowWorkflowTask",
        "tags": [
          "workflowWorkflowTask"
        ]
      }
    },
    "/policy/PolicyMeta": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of policyPolicyMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/policyPolicyMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of policyPolicyMeta",
        "tags": [
          "policyPolicyMeta"
        ]
      }
    },
    "/policy/PolicyMeta/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the policyPolicyMeta instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of policyPolicyMeta",
            "schema": {
              "$ref": "#/definitions/policyPolicyMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of policyPolicyMeta",
        "tags": [
          "policyPolicyMeta"
        ]
      }
    },
    "/task/WorkflowActions": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of taskWorkflowActions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/taskWorkflowActionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of taskWorkflowActions",
        "tags": [
          "taskWorkflowAction"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "taskWorkflowAction to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskWorkflowAction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a taskWorkflowAction",
        "tags": [
          "taskWorkflowAction"
        ]
      }
    },
    "/task/WorkflowActions/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the taskWorkflowAction instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of taskWorkflowAction",
            "schema": {
              "$ref": "#/definitions/taskWorkflowAction"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of taskWorkflowAction",
        "tags": [
          "taskWorkflowAction"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the taskWorkflowAction instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "taskWorkflowAction to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskWorkflowAction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of taskWorkflowAction",
        "tags": [
          "taskWorkflowAction"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the taskWorkflowAction instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "taskWorkflowAction to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskWorkflowAction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of taskWorkflowAction",
        "tags": [
          "taskWorkflowAction"
        ]
      }
    },
    "/storage/DiskGroupPolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageDiskGroupPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageDiskGroupPolicies",
        "tags": [
          "storageDiskGroupPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "storageDiskGroupPolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a storageDiskGroupPolicy",
        "tags": [
          "storageDiskGroupPolicy"
        ]
      }
    },
    "/storage/DiskGroupPolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the storageDiskGroupPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of storageDiskGroupPolicy",
        "tags": [
          "storageDiskGroupPolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageDiskGroupPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageDiskGroupPolicy",
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageDiskGroupPolicy",
        "tags": [
          "storageDiskGroupPolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageDiskGroupPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageDiskGroupPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageDiskGroupPolicy",
        "tags": [
          "storageDiskGroupPolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageDiskGroupPolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageDiskGroupPolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageDiskGroupPolicy",
        "tags": [
          "storageDiskGroupPolicy"
        ]
      }
    },
    "/storage/StoragePolicies": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of storageStoragePolicies",
        "tags": [
          "storageStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "storageStoragePolicy to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a storageStoragePolicy",
        "tags": [
          "storageStoragePolicy"
        ]
      }
    },
    "/storage/StoragePolicies/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the storageStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of storageStoragePolicy",
        "tags": [
          "storageStoragePolicy"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the storageStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageStoragePolicy",
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of storageStoragePolicy",
        "tags": [
          "storageStoragePolicy"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the storageStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageStoragePolicy",
        "tags": [
          "storageStoragePolicy"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the storageStoragePolicy instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageStoragePolicy to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of storageStoragePolicy",
        "tags": [
          "storageStoragePolicy"
        ]
      }
    },
    "/server/ConfigResults": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of serverConfigResults",
        "tags": [
          "serverConfigResult"
        ]
      }
    },
    "/server/ConfigResults/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the serverConfigResult instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverConfigResult",
            "schema": {
              "$ref": "#/definitions/serverConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of serverConfigResult",
        "tags": [
          "serverConfigResult"
        ]
      }
    },
    "/server/Profiles": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of serverProfiles",
        "tags": [
          "serverProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "serverProfile to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a serverProfile",
        "tags": [
          "serverProfile"
        ]
      }
    },
    "/server/Profiles/{moid}": {
      "delete": {
        "parameters": [
          {
            "description": "The moid of the serverProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Delete an instance of serverProfile",
        "tags": [
          "serverProfile"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The moid of the serverProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverProfile",
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of serverProfile",
        "tags": [
          "serverProfile"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the serverProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "serverProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of serverProfile",
        "tags": [
          "serverProfile"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the serverProfile instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "serverProfile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of serverProfile",
        "tags": [
          "serverProfile"
        ]
      }
    },
    "/crypt/EncryptionTokens": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of cryptEncryptionTokens for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/cryptEncryptionTokenList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of cryptEncryptionTokens",
        "tags": [
          "cryptEncryptionToken"
        ]
      }
    },
    "/crypt/EncryptionTokens/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the cryptEncryptionToken instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of cryptEncryptionToken",
            "schema": {
              "$ref": "#/definitions/cryptEncryptionToken"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of cryptEncryptionToken",
        "tags": [
          "cryptEncryptionToken"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the cryptEncryptionToken instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "cryptEncryptionToken to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cryptEncryptionToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of cryptEncryptionToken",
        "tags": [
          "cryptEncryptionToken"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the cryptEncryptionToken instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "cryptEncryptionToken to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cryptEncryptionToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of cryptEncryptionToken",
        "tags": [
          "cryptEncryptionToken"
        ]
      }
    },
    "/externalsite/Authorizations": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of externalsiteAuthorizations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorizationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of externalsiteAuthorizations",
        "tags": [
          "externalsiteAuthorization"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "externalsiteAuthorization to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a externalsiteAuthorization",
        "tags": [
          "externalsiteAuthorization"
        ]
      }
    },
    "/externalsite/Authorizations/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the externalsiteAuthorization instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of externalsiteAuthorization",
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of externalsiteAuthorization",
        "tags": [
          "externalsiteAuthorization"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the externalsiteAuthorization instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "externalsiteAuthorization to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of externalsiteAuthorization",
        "tags": [
          "externalsiteAuthorization"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the externalsiteAuthorization instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "externalsiteAuthorization to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of externalsiteAuthorization",
        "tags": [
          "externalsiteAuthorization"
        ]
      }
    },
    "/firmware/Distributables": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareDistributables for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareDistributableList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of firmwareDistributables",
        "tags": [
          "firmwareDistributable"
        ]
      }
    },
    "/firmware/Distributables/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the firmwareDistributable instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareDistributable",
            "schema": {
              "$ref": "#/definitions/firmwareDistributable"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of firmwareDistributable",
        "tags": [
          "firmwareDistributable"
        ]
      }
    },
    "/firmware/Eulas": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareEulas for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareEulaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of firmwareEulas",
        "tags": [
          "firmwareEula"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "firmwareEula to add",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareEula"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Create a firmwareEula",
        "tags": [
          "firmwareEula"
        ]
      }
    },
    "/firmware/Eulas/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the firmwareEula instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareEula",
            "schema": {
              "$ref": "#/definitions/firmwareEula"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of firmwareEula",
        "tags": [
          "firmwareEula"
        ]
      }
    },
    "/compute/ServerSettings": {
      "get": {
        "parameters": [
          {
            "description": "The $count query option allows clients to request a count of the matching resources.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The $inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "in": "query",
            "name": "$inlinecount",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The 'tags' query option allows clients to request a document with tag usage summary.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The max number of records to return",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of records to skip",
            "format": "int32",
            "in": "query",
            "name": "$skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter criteria for records to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies a subset of properties to return",
            "in": "query",
            "name": "$select",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines what values are used to order a collection of records",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify additional attributes or related records to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "in": "query",
            "name": "$expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeServerSettings for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeServerSettingList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "List of computeServerSettings",
        "tags": [
          "computeServerSetting"
        ]
      }
    },
    "/compute/ServerSettings/{moid}": {
      "get": {
        "parameters": [
          {
            "description": "The moid of the computeServerSetting instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeServerSetting",
            "schema": {
              "$ref": "#/definitions/computeServerSetting"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "A instance of computeServerSetting",
        "tags": [
          "computeServerSetting"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "The moid of the computeServerSetting instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeServerSetting to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeServerSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeServerSetting",
        "tags": [
          "computeServerSetting"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The moid of the computeServerSetting instance.",
            "in": "path",
            "name": "moid",
            "required": true,
            "type": "string"
          },
          {
            "description": "computeServerSetting to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeServerSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "Update an instance of computeServerSetting",
        "tags": [
          "computeServerSetting"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}